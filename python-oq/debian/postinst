#!/bin/sh
# postinst script for openquake
#
# see: dh_installdeb(1)

# set -x
set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


if [ -f /usr/sbin/rabbitmqctl ]; then
    # create rabbitmq configuration for python-celery
    celeryuser_count=`rabbitmqctl list_users | grep celeryuser | wc -l`
    if [ $celeryuser_count -eq 0 ];
    then
        rabbitmqctl add_user celeryuser celery
    fi;
    celeryvhost_count=`rabbitmqctl list_vhosts | grep celeryvhost | wc -l`
    if [ $celeryvhost_count -eq 0 ]; then
        rabbitmqctl add_vhost celeryvhost
        rabbitmqctl set_permissions -p celeryvhost celeryuser ".*" ".*" ".*"
    fi;
fi

mkdir -p /usr/openquake
chmod 1777 /usr/openquake

IDIR=/usr/share/pyshared/openquake
HDIR=/usr/openquake
if [ -f $HDIR/celeryconfig.py ]; then
    diff $IDIR/celeryconfig.py $HDIR/celeryconfig.py >/dev/null || cp $IDIR/celeryconfig.py $HDIR/celeryconfig.py.new_in_this_release
else
    cp $IDIR/celeryconfig.py $HDIR
    chmod 666 $HDIR/celeryconfig.py
fi

if [ `cat /etc/group | grep ^openquake | wc -l` -eq 0 ]; then
    addgroup --system openquake
fi

SDIR=/etc/openquake
for cfg in openquake.cfg logging.cfg
do
    if [ -f $SDIR/$cfg ]; then
        if ! diff $IDIR/$cfg $SDIR/$cfg >/dev/null; then
            cp $IDIR/$cfg $SDIR/$cfg.new_in_this_release
        fi
    else
        mkdir -p $SDIR
        cp $IDIR/$cfg $SDIR
        chown root.openquake $SDIR/$cfg
        chmod 644 $SDIR/$cfg
    fi
done

# Is postgres installed on this system?
if [ -f /usr/lib/postgresql/8.4/bin/postgres ]; then
    # postgres is installed, flatten and recreate the database.

    # Restart postgres in order to get rid of idle/open connections
    # held by celeryd processes.

    # Stop celeryd.
    if [ -x /etc/init.d/celeryd ]; then
        /etc/init.d/celeryd stop
    else
        for pid in `ps ax | grep celeryd | grep -v grep | awk '{print $1}'`; do
            kill -15 $pid
        done
    fi
    # Make sure the celeryd  processes are gone.
    sleep 1
    for pid in `ps ax | grep celeryd | grep -v grep | awk '{print $1}'`; do
        kill -15 $pid
    done

    /etc/init.d/postgresql restart

    LOGFILE=/var/tmp/openquake-db-installation
    rm -f $LOGFILE
    su -c "/usr/bin/oq_create_db --yes --db-name=openquake --schema-path=$IDIR/db/schema > $LOGFILE 2>&1" postgres
    for dbu in oq_admin oq_job_init oq_job_superv oq_reslt_writer
    do
        su -c "psql -c \"ALTER ROLE $dbu WITH PASSWORD 'openquake'\" >> $LOGFILE 2>&1" postgres
    done
    chmod 644 $LOGFILE

    num_of_errors=`grep -i error $LOGFILE | grep -v "is not empty" | grep -v error_msg_ | wc -l`
    if [ $num_of_errors -gt 0 ]; then
        echo "Failed to initialise the openquake database"
        echo "Please file a bug here:"
        echo "    https://bugs.launchpad.net/openquake/+filebug"
        echo "and attach this file to it:"
        echo "    $LOGFILE"
        su -c "psql -c \"DROP DATABASE openquake\" >/dev/null 2>&1" postgres
        exit 1
    fi

    PG_ROOT=/etc/postgresql/8.4/main
    # Do we already have oq_* database users configured and how many?
    oq_config_lines=`grep oq_ $PG_ROOT/pg_hba.conf | grep -v '^#' | wc -l`
    # Do we already have oq_* database users *auto-configured* and how many?
    auto_oq_config_lines=`grep oq_ $PG_ROOT/pg_hba.conf | grep -v '^#' | grep '^local' | wc -l`
    if [ $oq_config_lines -eq $auto_oq_config_lines ]; then
        # The oq_* db users (if any) have been auto-configured i.e. it's OK
        # if we flatten them.
        rm -f $PG_ROOT/pg_hba.conf.orig
        mv $PG_ROOT/pg_hba.conf $PG_ROOT/pg_hba.conf.orig
        for dbu in oq_admin oq_job_init oq_job_superv oq_reslt_writer
        do
            echo "local   openquake   $dbu                   md5" >> $PG_ROOT/pg_hba.conf
        done
        cat $PG_ROOT/pg_hba.conf.orig | grep -v 'local..*oq_' >> $PG_ROOT/pg_hba.conf
        /etc/init.d/postgresql reload
    else
        echo "Your system seems to have custom pg_hba.conf (postgres"
        echo "authentication configuration)"
        echo ""
        echo "Please ask the system administrator to grant access to the"
        echo "'openquake' database to the following users:"
        echo ""
        echo "      oq_admin oq_job_init oq_job_superv oq_reslt_writer"
    fi

    # Restart celeryd
    if [ -x /etc/init.d/celeryd ]; then
        /etc/init.d/celeryd start
    else
        cd /usr/openquake && nohup celeryd --purge > /tmp/celeryd.log 2>&1 3>&1 &
    fi

    # Last but not least copy the smoke tests into a more prominent place.
    if [ ! -d /usr/openquake/demos ]; then
        cp -a $IDIR/smoketests $HDIR/demos
        chown -R root.openquake $HDIR/demos
    fi
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
