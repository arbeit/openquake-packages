--- a/src/org/opensha/sha/imr/attenRelImpl/AB_2003_AttenRel.java
+++ b/src/org/opensha/sha/imr/attenRelImpl/AB_2003_AttenRel.java
@@ -551,8 +551,15 @@
 		double logY = rockResponse + soilResponse;
 		logY *= AB2003Constants.LOG10_2_LN;
 
-		return Math.log(Math.exp(logY)
+		double mean = Math.log(Math.exp(logY)
 				* AB2003Constants.CMS_TO_G_CONVERSION_FACTOR);
+		
+		// apply correction for T = 4 s
+		if(AB2003Constants.PERIOD[iper] == 4.0){
+			mean /= AB2003Constants.T3sec_TO_T4sec_DECAYFACTOR;
+		}
+		
+		return mean;
 	}
 
 	private double capHypocentralDepth(double hypoDep) {
--- a/src/org/opensha/sha/imr/attenRelImpl/AkB_2010_AttenRel.java
+++ b/src/org/opensha/sha/imr/attenRelImpl/AkB_2010_AttenRel.java
@@ -497,6 +497,11 @@
 			logY = Math.log(Math.exp(logY)
 					* AkB2010Constants.CMS2_TO_G_CONVERSION_FACTOR);
 		}
+		
+		// apply correction for T = 4
+		if (AkB2010Constants.PERIOD[iper] == 4.00){
+			logY /= AkB2010Constants.T3sec_TO_T4sec_DECAYFACTOR;
+		}
 
 		return logY;
 	}
--- a/src/org/opensha/sha/imr/attenRelImpl/ToroEtAl_2002_AttenRel.java
+++ b/src/org/opensha/sha/imr/attenRelImpl/ToroEtAl_2002_AttenRel.java
@@ -359,6 +359,15 @@
 		double f4 = ToroEtAl2002Constants.c6[iper] * rM;
 
 		double lnY = f1 - f2 - f3 - f4;
+		
+		// correction for 3 s
+		if  (ToroEtAl2002Constants.PERIOD[iper] == 3.00) {
+			lnY /= ToroEtAl2002Constants.T2sec_TO_T3sec_DECAYFACTOR;
+		}
+		// correction for 4 s
+		if  (ToroEtAl2002Constants.PERIOD[iper] == 4.00) {
+			lnY /= ToroEtAl2002Constants.T2sec_TO_T4sec_DECAYFACTOR;
+		}
 
 		return lnY;
 
--- a/src/org/opensha/sha/imr/attenRelImpl/YoungsEtAl_1997_AttenRel.java
+++ b/src/org/opensha/sha/imr/attenRelImpl/YoungsEtAl_1997_AttenRel.java
@@ -535,6 +535,10 @@
 							* Math.exp(YoungsEtAl1997Constants.A5_ROCK * mag))
 					+ YoungsEtAl1997Constants.A6_ROCK * hypoDep
 					+ YoungsEtAl1997Constants.A7_ROCK * Zt;
+			// correct for T = 4 s
+			if (YoungsEtAl1997Constants.PERIOD_ROCK[iper]==4.00){
+				lnY /= YoungsEtAl1997Constants.T3sec_TO_T4sec_DECAYFACTOR;
+			}
 		} else {
 			// soil
 			lnY = YoungsEtAl1997Constants.A1_SOIL
--- a/src/org/opensha/sha/imr/attenRelImpl/constants/AB2003Constants.java
+++ b/src/org/opensha/sha/imr/attenRelImpl/constants/AB2003Constants.java
@@ -6,112 +6,112 @@
 	 * Supported frequency values (Hz).
 	 */
 	public static final double[] FREQ = {Double.POSITIVE_INFINITY,
-		25.0000, 10.0000, 5.00000, 2.50000, 1.00000, 0.50000, 0.33000};
+		25.0000, 10.0000, 5.00000, 2.50000, 1.00000, 0.50000, 0.33000, 0.25000};
 	/**
 	 * Supported period values (s).
 	 */
 	public static final double[] PERIOD = {0.00000, 0.04000, 0.10000,
-		0.20000, 0.40000, 1.00000, 2.00000, 3.00000 };
+		0.20000, 0.40000, 1.00000, 2.00000, 3.00000, 4.00000};
 	/**
 	 * Interface c1 coefficients.
 	 */
 	public static final double[] INTER_C1 = {2.99100, 2.87530, 2.77890,
-		2.66380, 2.52490, 2.14420, 2.19070, 2.30100 };
+		2.66380, 2.52490, 2.14420, 2.19070, 2.30100, 2.30100};
 	/**
 	 * Interface c2 coefficients.
 	 */
 	public static final double[] INTER_C2 = {0.03525, 0.07052, 0.09841,
-		0.12386, 0.14770, 0.13450, 0.07148, 0.02237 };
+		0.12386, 0.14770, 0.13450, 0.07148, 0.02237, 0.02237};
 	/**
 	 * Interface c3 coefficients.
 	 */
 	public static final double[] INTER_C3 = {0.00759, 0.01004, 0.00974,
-		0.00884, 0.00728, 0.00521, 0.00224, 0.00012 };
+		0.00884, 0.00728, 0.00521, 0.00224, 0.00012, 0.00012};
 	/**
 	 * Interface c4 coefficients.
 	 */
 	public static final double[] INTER_C4 = {-0.00206, -0.00278, -0.00287,
-		-0.00280, -0.00235, -0.00110, 0.00000, 0.00000 };
+		-0.00280, -0.00235, -0.00110, 0.00000, 0.00000, 0.00000};
 	/**
 	 * Interface c5 coefficients.
 	 */
 	public static final double[] INTER_C5 = {0.19000, 0.15000, 0.15000,
-		0.15000, 0.13000, 0.10000, 0.10000, 0.10000 };
+		0.15000, 0.13000, 0.10000, 0.10000, 0.10000, 0.10000};
 	/**
 	 * Interface c6 coefficients.
 	 */
 	public static final double[] INTER_C6 = {0.24000, 0.20000, 0.23000,
-		0.27000, 0.37000, 0.30000, 0.25000, 0.25000 };
+		0.27000, 0.37000, 0.30000, 0.25000, 0.25000, 0.25000};
 	/**
 	 * Interface c7 coefficients.
 	 */
 	public static final double[] INTER_C7 = {0.29000, 0.20000, 0.20000,
-		0.25000, 0.38000, 0.55000, 0.40000, 0.36000 };
+		0.25000, 0.38000, 0.55000, 0.40000, 0.36000, 0.36000};
 	/**
 	 * Interface total standard deviation.
 	 */
 	public static final double[] INTER_TOTAL_STD = {0.23000, 0.26000,
-		0.27000, 0.28000, 0.29000, 0.34000, 0.34000, 0.36000 };
+		0.27000, 0.28000, 0.29000, 0.34000, 0.34000, 0.36000, 0.36000};
 	/**
 	 * Interface intra-event standard deviation.
 	 */
 	public static final double[] INTER_INTRAEVENT_STD = {0.20000, 0.22000,
-		0.25000, 0.25000, 0.25000, 0.28000, 0.29000, 0.31000 };
+		0.25000, 0.25000, 0.25000, 0.28000, 0.29000, 0.31000, 0.31000};
 	/**
 	 * Interface inter-event standard deviation.
 	 */
 	public static final double[] INTER_INTEREVENT_STD = {0.11000, 0.14000,
-		0.10000, 0.13000, 0.15000, 0.19000, 0.18000, 0.18000 };
+		0.10000, 0.13000, 0.15000, 0.19000, 0.18000, 0.18000, 0.18000};
 	/**
 	 * Intraslab c1 coefficients.
 	 */
 	public static final double[] INTRA_C1 = {-0.04713, 0.50697, 0.43928,
-		0.51589, 0.00545, -1.02133, -2.39234, -3.70012 };
+		0.51589, 0.00545, -1.02133, -2.39234, -3.70012, -3.70012};
 	/**
 	 * Intraslab c2 coefficients.
 	 */
 	public static final double[] INTRA_C2 = {0.69090, 0.63273, 0.66675,
-		0.69186, 0.77270, 0.87890, 0.99640, 1.11690 };
+		0.69186, 0.77270, 0.87890, 0.99640, 1.11690, 1.11690};
 	/**
 	 * Intraslab c3 coefficients.
 	 */
 	public static final double[] INTRA_C3 = {0.01130, 0.01275, 0.01080,
-		0.00572, 0.00173, 0.00130, 0.00364, 0.00615 };
+		0.00572, 0.00173, 0.00130, 0.00364, 0.00615, 0.00615};
 	/**
 	 * Intraslab c4 coefficients.
 	 */
 	public static final double[] INTRA_C4 = {-0.00202, -0.00234,
-		-0.00219, -0.00192, -0.00178, -0.00173, -0.00118, -0.00045 };
+		-0.00219, -0.00192, -0.00178, -0.00173, -0.00118, -0.00045, -0.00045};
 	/**
 	 * Intraslab c5 coefficients.
 	 */
 	public static final double[] INTRA_C5 = {0.19000, 0.15000, 0.15000,
-		0.15000, 0.13000, 0.10000, 0.10000, 0.10000 };
+		0.15000, 0.13000, 0.10000, 0.10000, 0.10000, 0.10000};
 	/**
 	 * Intraslab c6 coefficients.
 	 */
 	public static final double[] INTRA_C6 = {0.24000, 0.20000, 0.23000,
-		0.27000, 0.37000, 0.30000, 0.25000, 0.25000 };
+		0.27000, 0.37000, 0.30000, 0.25000, 0.25000, 0.25000};
 	/**
 	 * Intraslab c7 coefficients.
 	 */
 	public static final double[] INTRA_C7 = {0.29000, 0.20000, 0.20000,
-		0.25000, 0.38000, 0.55000, 0.40000, 0.36000 };
+		0.25000, 0.38000, 0.55000, 0.40000, 0.36000, 0.36000};
 	/**
 	 * Intraslab total standard deviation.
 	 */
 	public static final double[] INTRA_TOTAL_STD = {0.27000, 0.25000,
-		0.28000, 0.28000, 0.28000, 0.29000, 0.30000, 0.30000 };
+		0.28000, 0.28000, 0.28000, 0.29000, 0.30000, 0.30000, 0.30000};
 	/**
 	 * Intraslab intra event standard deviation.
 	 */
 	public static final double[] INTRA_INTRAEVENT_STD = {0.23000, 0.24000,
-		0.27000, 0.26000, 0.26000, 0.27000, 0.28000, 0.29000 };
+		0.27000, 0.26000, 0.26000, 0.27000, 0.28000, 0.29000, 0.29000};
 	/**
 	 * Intraslab inter event standard deviation.
 	 */
 	public static final double[] INTRA_INTEREVENT_STD = {0.14000, 0.07000,
-		0.07000, 0.10000, 0.10000, 0.11000, 0.11000, 0.08000 };
+		0.07000, 0.10000, 0.10000, 0.11000, 0.11000, 0.08000, 0.08000};
 	/**
 	 * log10 to natural log conversion factor.
 	 */
@@ -199,4 +199,8 @@
 	 */
 	public static final double[] CORRECTION_WEIGHTS =
 		new double[]{ 0.333, 0.667};
+	/**
+	 * decay factor to extend spectral period from 3 to 4 s
+	 */
+	public static final double T3sec_TO_T4sec_DECAYFACTOR = 0.550;
 }
--- a/src/org/opensha/sha/imr/attenRelImpl/constants/AkB2010Constants.java
+++ b/src/org/opensha/sha/imr/attenRelImpl/constants/AkB2010Constants.java
@@ -13,7 +13,7 @@
 		1.25000, 1.30000, 1.35000, 1.40000, 1.45000, 1.50000, 1.55000, 1.60000, 1.65000, 1.70000, 
 		1.75000, 1.80000, 1.85000, 1.90000, 1.95000, 2.00000, 2.05000, 2.10000, 2.15000, 2.20000, 
 		2.25000, 2.30000, 2.35000, 2.40000, 2.45000, 2.50000, 2.55000, 2.60000, 2.65000, 2.70000, 
-		2.75000, 2.80000, 2.85000, 2.90000, 2.95000, 3.00000};	
+		2.75000, 2.80000, 2.85000, 2.90000, 2.95000, 3.00000, 4.00000};	
 	/**
 	 * b1 coefficients.
 	 */
@@ -24,7 +24,7 @@
 		-6.74613, -6.51719, -6.55821, -6.61945, -6.62737, -6.71787, -6.80776, -6.83632, -6.88684,-6.94600,
 		-7.09166, -7.22818, -7.29772, -7.35522, -7.40716, -7.50404, -7.55598, -7.53463, -7.50811,-8.09168,
 		-8.11057, -8.16272, -7.94704, -7.96679, -7.97878, -7.88403, -7.68101, -7.72574,  -7.53288,-7.41587,
-		-7.34541, -7.24561, -7.07107, -6.99332, -6.95669,  -6.92924};	
+		-7.34541, -7.24561, -7.07107, -6.99332, -6.95669,  -6.92924, -6.92924};	
 	/**
 	 * b2 coefficients.
 	 */
@@ -35,7 +35,7 @@
 		2.62375, 2.51869, 2.52238, 2.52611, 2.49858, 2.49486, 2.50291, 2.51009, 2.54048, 2.57151,
 		2.62938, 2.66824, 2.67565, 2.67749, 2.68206, 2.71004, 2.72737, 2.71709, 2.71035, 2.91159,
 		2.92087, 2.93325, 2.85328, 2.85363, 2.84900, 2.81817, 2.75720, 2.82043, 2.74824, 2.69012,
-		2.65352, 2.61028, 2.56123, 2.52699, 2.51006, 2.45899};
+		2.65352, 2.61028, 2.56123, 2.52699, 2.51006, 2.45899, 2.45899};
 	/**
 	 * b3 coefficients.
 	 */
@@ -46,7 +46,7 @@
 		-0.17392, -0.16330, -0.16307, -0.16274,-0.15910, -0.15689, -0.15629, -0.15676, -0.15995, -0.16294,
 		-0.16794, -0.17057, -0.17004, -0.16934,-0.16906, -0.17130, -0.17291, -0.17221, -0.17212, -0.18920,
 		-0.19044, -0.19155, -0.18539, -0.18561,-0.18527, -0.18320, -0.17905, -0.18717, -0.18142, -0.17632,
-		-0.17313, -0.16951, -0.16616, -0.16303,-0.16142,-0.15513};
+		-0.17313, -0.16951, -0.16616, -0.16303,-0.16142,-0.15513, -0.15513};
 	/**
 	 * b4 coefficients.
 	 */
@@ -57,7 +57,7 @@
 		-1.52886, -1.46527, -1.48223, -1.48257, -1.43310, -1.35301, -1.31227, -1.33260, -1.40931, -1.47676,
 		-1.54037, -1.54273, -1.50936, -1.46988, -1.43816, -1.44395, -1.45794, -1.46662, -1.49679, -1.55644,
 		-1.59537, -1.60461, -1.57428, -1.57833, -1.57728, -1.60381, -1.65212, -1.88782, -1.89525, -1.87041,
-		-1.86079, -1.85612, -1.90422, -1.89704, -1.90132, -1.76801};
+		-1.86079, -1.85612, -1.90422, -1.89704, -1.90132, -1.76801, -1.76801};
 	/**
 	 * b5 coefficients.
 	 */
@@ -68,7 +68,7 @@
 		0.09129, 0.08005,	0.08173, 0.08213, 0.07577, 0.06379,	0.05697, 0.05870, 0.06860, 0.07672,
 		0.08428, 0.08325,	0.07663, 0.07065, 0.06525, 0.06602,	0.06774, 0.06940, 0.07429, 0.08428,
 		0.09052, 0.09284,	0.09077, 0.09288, 0.09428, 0.09887,	0.10680, 0.14049, 0.14356, 0.14283,
-		0.14340, 0.14444,	0.15127, 0.15039, 0.15081, 0.13314};
+		0.14340, 0.14444,	0.15127, 0.15039, 0.15081, 0.13314, 0.13314};
 	/**
 	 * b6 coefficients.
 	 */
@@ -79,7 +79,7 @@
 		5.08347, 5.14423, 5.29006, 5.33490, 5.19412, 5.15750,   5.27441, 5.54539, 5.93828, 6.36599,
 		6.82292, 7.11603, 7.31928, 7.25988, 7.25344, 7.26059,	7.40320, 7.46168, 7.51273, 7.77062,	
 		7.87702, 7.91753, 7.61956, 7.59643, 7.50338, 7.53947,	7.61893, 8.12248, 7.92236, 7.49999,
-		7.26668, 7.11861, 7.36277, 7.45038, 7.60234, 7.21950};
+		7.26668, 7.11861, 7.36277, 7.45038, 7.60234, 7.21950, 7.21950};
 	/**
 	 * b7 coefficients.
 	 */
@@ -90,7 +90,7 @@
 		0.38782,	0.38862, 0.38677, 0.38625, 0.38285, 0.37867, 0.37267, 0.36952, 0.36531, 0.35936,
 		0.35284,	0.34775, 0.34561, 0.34142, 0.33720, 0.33298, 0.33010, 0.32645, 0.32439, 0.31354,
 		0.30997,	0.30826, 0.32071, 0.31801, 0.31401, 0.31104, 0.30875, 0.31122, 0.30935, 0.30688,
-		0.30635,	0.30534, 0.30508, 0.30362, 0.29987, 0.29772};
+		0.30635,	0.30534, 0.30508, 0.30362, 0.29987, 0.29772, 0.29772};
 	/**
 	 * b8 coefficients.
 	 */
@@ -101,7 +101,7 @@
 		0.19392, 0.19273, 0.19082, 0.19285, 0.19161, 0.18812, 0.18568, 0.18149, 0.17617,	0.17301,
 		0.16945, 0.16743, 0.16730, 0.16325, 0.16171, 0.15839, 0.15496, 0.15337, 0.15264,	0.14430,
 		0.14430, 0.14412, 0.14321, 0.14301, 0.14324, 0.14332, 0.14343, 0.14255, 0.14223,	0.14074,
-		0.14052, 0.13923, 0.13933, 0.13776, 0.13584, 0.13198};
+		0.14052, 0.13923, 0.13933, 0.13776, 0.13584, 0.13198, 0.13198};
 	/**
 	 * b9 coefficients.
 	 */
@@ -112,7 +112,7 @@
 		-0.01826, -0.01902, -0.01842, -0.01607, -0.01288, -0.01208, -0.00845, -0.00533,	-0.00852, -0.01204,
 		-0.01386, -0.01402, -0.01526, -0.01563, -0.01848, -0.02258, -0.02626, -0.02920,	-0.03484, -0.03985,
 		-0.04155, -0.04238, -0.04963, -0.04910, -0.04812, -0.04710, -0.04607, -0.05106,	-0.05024, -0.04887,
-		-0.04743, -0.04731, -0.04522, -0.04203, -0.03863, -0.03855};
+		-0.04743, -0.04731, -0.04522, -0.04203, -0.03863, -0.03855, -0.03855};
 	/**
 	 * b10 coefficients.
 	 */
@@ -123,7 +123,7 @@
 		 0.00413, -0.00369, -0.00897, -0.00876, -0.00564, -0.00215, -0.00047, -0.00006, -0.00301, -0.00744,
 		-0.01387, -0.01492, -0.01192, -0.00703, -0.00351, -0.00486, -0.00731, -0.00871, -0.01225, -0.01927,
 		-0.02322, -0.02626, -0.02342, -0.02570, -0.02643, -0.02769, -0.02819, -0.02966, -0.02930, -0.02963,
-		-0.02919, -0.02751, -0.02776, -0.02615, -0.02487, -0.02469}; 
+		-0.02919, -0.02751, -0.02776, -0.02615, -0.02487, -0.02469, -0.02469}; 
 
 	/** Intra-event standard deviation.
 	 */
@@ -134,7 +134,7 @@
 		 0.28630, 0.28690, 0.28850, 0.28750,  0.28570, 0.28390, 0.28450, 0.28440, 0.28410, 0.28400,
 		 0.28400, 0.28340, 0.28280, 0.28260,  0.28320, 0.28350, 0.28360, 0.28320, 0.28300, 0.28300,
 		 0.28300, 0.28290, 0.28150, 0.28260,  0.28250, 0.28180, 0.28180, 0.28380, 0.28450, 0.28540,
-		 0.28620, 0.28670, 0.28690, 0.28740,  0.28720, 0.28760};
+		 0.28620, 0.28670, 0.28690, 0.28740,  0.28720, 0.28760, 0.28760};
 	/**
 	 * Intraslab inter event standard deviation.
 	 */
@@ -145,7 +145,7 @@
 		 0.14530, 0.14270, 0.14280, 0.14580, 0.14770, 0.14680, 0.14500, 0.14570, 0.15030, 0.15370,
 		 0.15580, 0.15820, 0.15920, 0.16110, 0.16420, 0.16570, 0.16650, 0.16630, 0.16610, 0.16270,
 		 0.16270, 0.16330, 0.16320, 0.16450, 0.16650, 0.16810, 0.16880, 0.17410, 0.17590, 0.17720,
-		 0.17830, 0.17940, 0.17880, 0.17840, 0.17830, 0.17850}; 
+		 0.17830, 0.17940, 0.17880, 0.17840, 0.17830, 0.17850, 0.17850}; 
 	/**
 	 * Intraslab total standard deviation.
 	 */	
@@ -156,7 +156,7 @@
 		0.32106, 0.32043, 0.32191, 0.32236, 0.32162, 0.31961, 0.31932, 0.31950,	0.32141, 0.32292,
 		0.32393, 0.32457, 0.32453, 0.32529, 0.32736, 0.32837, 0.32886, 0.32842,	0.32814, 0.32644,
 		0.32644, 0.32665, 0.32539, 0.32699, 0.32792, 0.32813, 0.32849, 0.33290,	0.33449, 0.33594,
-		0.33720, 0.33820, 0.33810, 0.33827, 0.33800, 0.33849};
+		0.33720, 0.33820, 0.33810, 0.33827, 0.33800, 0.33849, 0.33849};
 
 	/**
 	 * log10 to natural log conversion factor.
@@ -206,4 +206,8 @@
 	 * cm/s to g conversion factor.
 	 */
 	public static final double CMS2_TO_G_CONVERSION_FACTOR = 1.0/981.0;
+	/**
+	 * decay factor to extend SA to 4s
+	 */
+	public static final double T3sec_TO_T4sec_DECAYFACTOR = 0.80;
 }
\ No newline at end of file
--- a/src/org/opensha/sha/imr/attenRelImpl/constants/ToroEtAl2002Constants.java
+++ b/src/org/opensha/sha/imr/attenRelImpl/constants/ToroEtAl2002Constants.java
@@ -25,75 +25,75 @@
 public class ToroEtAl2002Constants {
 
 	public static final double[] PERIOD = { 0.0000,  0.0290,  0.04000, 0.10000, 0.20000, 0.40000, 0.50, 
-		1.00000, 2.00000};
+		1.00000, 2.00000, 3.00000, 4.00000};
 	
 	/**
 	 * c1 coefficients.
 	 */
 	public static final double[] c1  = {2.20, 4.00, 3.68, 2.37, 1.73, 1.07, 0.0966,
-		0.09, -0.74};	
+		0.09, -0.74, -0.74, -0.74};	
 	/**
 	 * c2 coefficients.
 	 */
 	public static final double[] c2  = { 0.81, 0.79, 0.8, 0.81, 0.84, 1.05, 1.1116,
-		1.42, 1.86};
+		1.42, 1.86, 1.86, 1.86};
 	/**
 	 * c3 coefficients.
 	 */
 	public static final double[] c3  = 	{ 0.00, 0.00, 0.00, 0.00, 0.00, -0.10, -0.01166,
-		-0.20, -0.31};
+		-0.20, -0.31, -0.31, -0.31};
 	/**
 	 * c4 coefficients.
 	 */
 	public static final double[] c4  = { 1.27, 1.57, 1.46, 1.10, 0.98, 0.93, 0.925,
-		0.90, 0.92};
+		0.90, 0.92, 0.92, 0.92};
 	/**
 	 * c5 coefficients.
 	 */
 	public static final double[] c5  = { 1.16, 1.83, 1.77, 1.02, 0.66, 0.56,  0.5483,
-		0.49, 0.46};
+		0.49, 0.46, 0.46, 0.46};
 	/**
 	 * c6 coefficients.
 	 */
 	public static final double[] c6  = {0.0021, 0.0008, 0.0013, 0.004, 0.0042, 0.0033, 0.00313,
-		0.0023, 0.0017};
+		0.0023, 0.0017, 0.0017, 0.0017};
 	/**
 	 * c7 coefficients.
 	 */
 	public static final double[] c7  = {9.30, 11.10, 10.50, 8.30, 7.50, 7.10, 7.05,
-		6.80, 6.90};
+		6.80, 6.90, 6.90, 6.90};
 	/**
 	 * m50 coefficients.
 	 */
 	public static final double[] m50= {0.55, 0.62, 0.62, 0.59, 0.60, 0.63, 0.63,
-		0.63, 0.61};
+		0.63, 0.61, 0.61, 0.61};
 	/**
 	 * m55 coefficients.
 	 */
 	public static final double[] m55= { 0.59, 0.63, 0.63, 0.61, 0.64, 0.68, 0.673,
-		0.64, 0.62};
+		0.64, 0.62, 0.62, 0.62};
 	/**
 	 * m80 coefficients.
 	 */
 	public static final double[] m80= { 0.50, 0.50, 0.50, 0.50, 0.56, 0.64,  0.645,
-		0.67, 0.66}; 
+		0.67, 0.66, 0.66, 0.66}; 
 	/**
 	 * r05 coefficients.
 	 */
 	public static final double[] r05= { 0.54, 0.62, 0.57, 0.50, 0.45, 0.45, 0.45,
-		0.45, 0.45};
+		0.45, 0.45, 0.45, 0.45};
 	/**
 	 * r20 coefficients.
 	 */
 	public static final double[] r20= {	0.2, 0.35, 0.29, 0.17, 0.12, 0.12, 0.12,
-		0.12, 0.12};		
+		0.12, 0.12, 0.12, 0.12};		
 
 	/**
 	 * Style-of-faulting adjustment coefficients, 
 	 * obtained from Table 7 (Drouet et al 2010) and using a cubic spline interpolation 
 	 */
 	public static final	double []  Frss = {	1.220000, 0.935198, 0.907936, 1.080000, 1.190000, 1.230000, 1.22125,
-		1.177500, 1.140000};
+		1.177500, 1.140000, 1.140000, 1.140000};
 
 	public static final	double Fnss = 0.95; 
 	public static final	double pN = 0.01;
@@ -155,4 +155,12 @@
 	 * cm/s to g conversion factor.
 	 */
 	public static final double CMS_TO_G_CONVERSION_FACTOR = 1.0/981.0;
+	/**
+	 * Sa(3s)/Sa(2sec) to extend the spectral periods to 3sec
+	 */
+	public static final double T2sec_TO_T3sec_DECAYFACTOR = 0.385;
+	/**
+	 * Sa(4s)/Sa(3sec) to extend the spectral periods to 4sec
+	 */
+	public static final double T2sec_TO_T4sec_DECAYFACTOR = 0.1483;
 }
--- a/src/org/opensha/sha/imr/attenRelImpl/constants/YoungsEtAl1997Constants.java
+++ b/src/org/opensha/sha/imr/attenRelImpl/constants/YoungsEtAl1997Constants.java
@@ -75,4 +75,9 @@
 	 * cm/s/s to g conversion factor.
 	 */
 	public static final double CMS_TO_G_CONVERSION_FACTOR = 1.0/981.0;
+	
+    /**
+	* Decay factor to extend the spectral periods to 4sec (for rock)
+	*/
+	public static final double T3sec_TO_T4sec_DECAYFACTOR = 0.399;
 }
