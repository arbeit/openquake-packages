!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALPHA	src/api/src/main/java/org/jredis/Sort.java	/^	Sort ALPHA ();$/;"	m	interface:Sort
ALPHA	src/api/src/main/java/org/jredis/protocol/Command.java	/^		ALPHA,$/;"	e	enum:Command.Option	file:
ALPHA	src/ri/src/main/java/org/jredis/ri/RI.java	/^		ALPHA,$/;"	e	enum:RI.Release	file:
ALPHA	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	public Sort ALPHA() {  alphaSpec = String.format("%s%s", Command.Option.ALPHA.name(), PAD); return this; }$/;"	m	class:SortSupport
APPEND	src/api/src/main/java/org/jredis/protocol/Command.java	/^	APPEND		(RequestType.KEY_VALUE, 	ResponseType.NUMBER),$/;"	e	enum:Command	file:
ASC	src/api/src/main/java/org/jredis/protocol/Command.java	/^		ASC,$/;"	e	enum:Command.Option	file:
ASCII_ZERO	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public static final byte	ASCII_ZERO	= (byte) 48; \/\/ 0$/;"	f	class:ProtocolBase
AUTH	src/api/src/main/java/org/jredis/protocol/Command.java	/^	AUTH 		(RequestType.KEY, 			ResponseType.STATUS),$/;"	e	enum:Command	file:
Assert	src/ri/src/main/java/org/jredis/ri/alphazero/support/Assert.java	/^public class Assert {$/;"	c
AsynchConnection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^	public AsynchConnection ($/;"	m	class:AsynchConnection
AsynchConnection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^public class AsynchConnection extends ConnectionBase implements Connection {$/;"	c
AsynchPipelineConnection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchPipelineConnection.java	/^    public AsynchPipelineConnection (ConnectionSpec spec) throws ClientRuntimeException {$/;"	m	class:AsynchPipelineConnection
AsynchPipelineConnection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchPipelineConnection.java	/^public class AsynchPipelineConnection extends PipelineConnectionBase{$/;"	c
Asynchronous	src/api/src/main/java/org/jredis/connector/Connection.java	/^		Asynchronous,$/;"	e	enum:Connection.Modality	file:
BAR	src/api/src/main/java/org/jredis/protocol/Command.java	/^		BAR,$/;"	e	enum:Command.Flag	file:
BETA	src/ri/src/main/java/org/jredis/ri/RI.java	/^		BETA,$/;"	e	enum:RI.Release	file:
BGREWRITEAOF	src/api/src/main/java/org/jredis/protocol/Command.java	/^	BGREWRITEAOF(RequestType.NO_ARG,		ResponseType.STRING), $/;"	e	enum:Command	file:
BGSAVE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	BGSAVE		(RequestType.NO_ARG,		ResponseType.STATUS), $/;"	e	enum:Command	file:
BOOLEAN	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	BOOLEAN (ValueResponse.class),$/;"	e	enum:Command.ResponseType	file:
BOOLEAN	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		BOOLEAN,$/;"	e	enum:SynchProtocol.ValueType	file:
BUG	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public enum Category { INFO, DEBUG, ERROR, PROBLEM, BUG }$/;"	e	enum:Log.Category	file:
BULK	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	BULK (BulkResponse.class),$/;"	e	enum:Command.ResponseType	file:
BULK_SET	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	BULK_SET$/;"	e	enum:Command.RequestType	file:
BY	src/api/src/main/java/org/jredis/Sort.java	/^	Sort BY    (String pattern);$/;"	m	interface:Sort
BY	src/api/src/main/java/org/jredis/protocol/Command.java	/^		BY,$/;"	e	enum:Command.Option	file:
BY	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	public Sort BY(String pattern) { bySpec = String.format("%s %s%s", Command.Option.BY.name(), pattern, PAD); return this; }$/;"	m	class:SortSupport
BYTE_MINUS	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	private static final byte       BYTE_MINUS = (byte) '-';$/;"	f	class:Convert	file:
BYTE_NINE	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	private static final byte	    BYTE_NINE = (byte) '9';$/;"	f	class:Convert	file:
BYTE_PLUS	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	private static final byte       BYTE_PLUS = (byte) '+';$/;"	f	class:Convert	file:
BYTE_ZERO	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	private static final byte	    BYTE_ZERO = (byte) '0';$/;"	f	class:Convert	file:
BasicCodecManager	src/api/src/main/java/org/jredis/semantics/BasicCodecManager.java	/^public final class BasicCodecManager implements CodecManager {$/;"	c
Bulk	src/api/src/main/java/org/jredis/protocol/Response.java	/^		Bulk  	  (byte[].class),$/;"	e	enum:Response.Type	file:
BulkResponse	src/api/src/main/java/org/jredis/protocol/BulkResponse.java	/^public interface BulkResponse extends Response {$/;"	i
BulkSetMapping	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^public abstract class BulkSetMapping<T> implements KeyValueSet<T>{$/;"	c
ByteArrays	src/api/src/main/java/org/jredis/KeyValueSet.java	/^	public interface ByteArrays extends KeyValueSet<byte[]>{}$/;"	i	interface:KeyValueSet
Bytes	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^	final static class Bytes extends BulkSetMapping<byte[]> implements  KeyValueSet.ByteArrays {$/;"	c	class:BulkSetMapping
CIAO	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	public enum Code { OK, ERROR, CIAO }$/;"	e	enum:ResponseStatus.Code	file:
CONNECTED	src/api/src/main/java/org/jredis/connector/Connection.java	/^			CONNECTED,$/;"	e	enum:Connection.Event.Type	file:
CONNECTED	src/api/src/main/java/org/jredis/connector/Connection.java	/^		CONNECTED,$/;"	e	enum:Connection.State	file:
CONNECTING	src/api/src/main/java/org/jredis/connector/Connection.java	/^			CONNECTING,$/;"	e	enum:Connection.Event.Type	file:
CONNECTION_CLASS	src/api/src/main/java/org/jredis/connector/Connection.java	/^		CONNECTION_CLASS,$/;"	e	enum:Connection.Property	file:
CONNECTION_FACTORY	src/api/src/main/java/org/jredis/connector/Connection.java	/^		CONNECTION_FACTORY,$/;"	e	enum:Connection.Property	file:
CONNECT_IMMEDIATELY	src/api/src/main/java/org/jredis/connector/Connection.java	/^    	CONNECT_IMMEDIATELY,$/;"	e	enum:Connection.Flag	file:
COUNT_BYTE	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public static final byte	COUNT_BYTE 	= (byte) 42; \/\/ *$/;"	f	class:ProtocolBase
CREDENTIAL	src/api/src/main/java/org/jredis/connector/Connection.java	/^		CREDENTIAL,$/;"	e	enum:Connection.Property	file:
CRLF	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public static final byte[] 	CRLF = {(byte) 13, (byte)10};$/;"	f	class:ProtocolBase
CRLF_LEN	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public static final int 	CRLF_LEN = CRLF.length;$/;"	f	class:ProtocolBase
CacheKeys	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static final boolean	CacheKeys	= false;$/;"	f	class:JRedisFutureSupport
CacheKeys	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public static final boolean	CacheKeys	= false;$/;"	f	class:JRedisSupport
CacheKeys	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultKeyCodec.java	/^	public static final boolean	CacheKeys	= false;$/;"	f	class:DefaultKeyCodec
Category	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public enum Category { INFO, DEBUG, ERROR, PROBLEM, BUG }$/;"	g	class:Log
ClientRuntimeException	src/api/src/main/java/org/jredis/ClientRuntimeException.java	/^	public ClientRuntimeException(String message) {$/;"	m	class:ClientRuntimeException
ClientRuntimeException	src/api/src/main/java/org/jredis/ClientRuntimeException.java	/^	public ClientRuntimeException(String message, Throwable cause) {$/;"	m	class:ClientRuntimeException
ClientRuntimeException	src/api/src/main/java/org/jredis/ClientRuntimeException.java	/^public class ClientRuntimeException extends RuntimeException {$/;"	c
Code	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	public enum Code { OK, ERROR, CIAO }$/;"	g	class:ResponseStatus
Codec	src/api/src/main/java/org/jredis/Codec.java	/^public interface Codec <T>  {$/;"	i
CodecManager	src/api/src/main/java/org/jredis/semantics/CodecManager.java	/^public interface CodecManager {$/;"	i
Command	src/api/src/main/java/org/jredis/protocol/Command.java	/^	Command (RequestType reqType, ResponseType respType, Flag... flags) { $/;"	m	class:Command
Command	src/api/src/main/java/org/jredis/protocol/Command.java	/^public enum Command {$/;"	g
CommandNotImplemented	src/api/src/main/java/org/jredis/protocol/CommandNotImplemented.java	/^	public CommandNotImplemented (Command command) { super(command.code + " is not supported!");}$/;"	m	class:CommandNotImplemented
CommandNotImplemented	src/api/src/main/java/org/jredis/protocol/CommandNotImplemented.java	/^public final class CommandNotImplemented extends ProviderException {$/;"	c
ConcurrentJRedisProviderTestsBase	src/ri/src/test/java/org/jredis/ri/alphazero/ConcurrentJRedisProviderTestsBase.java	/^public abstract class ConcurrentJRedisProviderTestsBase extends JRedisProviderTestsBase {$/;"	c
ConcurrentSynchProtocol	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ConcurrentSynchProtocol.java	/^public class ConcurrentSynchProtocol extends SynchProtocol {$/;"	c
Connection	src/api/src/main/java/org/jredis/connector/Connection.java	/^public interface Connection {$/;"	i
ConnectionBase	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	protected ConnectionBase (ConnectionSpec spec) $/;"	m	class:ConnectionBase
ConnectionBase	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^public abstract class ConnectionBase implements Connection{$/;"	c
ConnectionException	src/api/src/main/java/org/jredis/connector/ConnectionException.java	/^	public ConnectionException(String msg) {$/;"	m	class:ConnectionException
ConnectionException	src/api/src/main/java/org/jredis/connector/ConnectionException.java	/^	public ConnectionException(String msg, SocketException e) {$/;"	m	class:ConnectionException
ConnectionException	src/api/src/main/java/org/jredis/connector/ConnectionException.java	/^abstract public class ConnectionException extends ClientRuntimeException{$/;"	c
ConnectionFault	src/api/src/main/java/org/jredis/connector/ConnectionFault.java	/^	public ConnectionFault(String msg) {$/;"	m	class:ConnectionFault
ConnectionFault	src/api/src/main/java/org/jredis/connector/ConnectionFault.java	/^	public ConnectionFault(String msg, SocketException e) {$/;"	m	class:ConnectionFault
ConnectionFault	src/api/src/main/java/org/jredis/connector/ConnectionFault.java	/^public class ConnectionFault extends ConnectionException {$/;"	c
ConnectionReset	src/api/src/main/java/org/jredis/connector/ConnectionReset.java	/^	public ConnectionReset(String msg) {$/;"	m	class:ConnectionReset
ConnectionReset	src/api/src/main/java/org/jredis/connector/ConnectionReset.java	/^	public ConnectionReset(String msg, SocketException e) {$/;"	m	class:ConnectionReset
ConnectionReset	src/api/src/main/java/org/jredis/connector/ConnectionReset.java	/^public class ConnectionReset extends ConnectionException {$/;"	c
ConnectionSpec	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^public interface ConnectionSpec {$/;"	i
Context	src/api/src/main/java/org/jredis/resource/Context.java	/^public interface Context {$/;"	i
Convert	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^public class Convert {$/;"	c
ConvertTest	src/ri/src/test/java/org/jredis/ri/alphazero/support/ConvertTest.java	/^public class ConvertTest {$/;"	c
DB	src/api/src/main/java/org/jredis/connector/Connection.java	/^		DB,$/;"	e	enum:Connection.Property	file:
DBSIZE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	DBSIZE		(RequestType.NO_ARG,		ResponseType.NUMBER),$/;"	e	enum:Command	file:
DEBUG	src/api/src/main/java/org/jredis/protocol/Command.java	/^	DEBUG		(RequestType.KEY_KEY, 		ResponseType.STRING), $/;"	e	enum:Command	file:
DEBUG	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public enum Category { INFO, DEBUG, ERROR, PROBLEM, BUG }$/;"	e	enum:Log.Category	file:
DECR	src/api/src/main/java/org/jredis/protocol/Command.java	/^	DECR		(RequestType.KEY, 			ResponseType.NUMBER), $/;"	e	enum:Command	file:
DECRBY	src/api/src/main/java/org/jredis/protocol/Command.java	/^	DECRBY		(RequestType.KEY_NUM,		ResponseType.NUMBER),  $/;"	e	enum:Command	file:
DEFAULT_CF_CONNECT_IMMEDIATELY	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	private static final boolean DEFAULT_CF_CONNECT_IMMEDIATELY = true;$/;"	f	class:DefaultConnectionSpec	file:
DEFAULT_CF_PIPELINE	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	private static final boolean DEFAULT_CF_PIPELINE = false;$/;"	f	class:DefaultConnectionSpec	file:
DEFAULT_CF_RELIABLE	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	private static final boolean DEFAULT_CF_RELIABLE = false;$/;"	f	class:DefaultConnectionSpec	file:
DEFAULT_CF_SHARED	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	private static final boolean DEFAULT_CF_SHARED = true;$/;"	f	class:DefaultConnectionSpec	file:
DEFAULT_CF_STATEFUL	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	private static final boolean DEFAULT_CF_STATEFUL = false;$/;"	f	class:DefaultConnectionSpec	file:
DEFAULT_CHARSET	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultStringCodec.java	/^	public final static Charset DEFAULT_CHARSET = Charset.forName ("UTF-8");$/;"	f	class:DefaultStringCodec
DEFAULT_CP_CONN_MODALITY	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	private static final Modality DEFAULT_CP_CONN_MODALITY = Modality.Synchronous;$/;"	f	class:DefaultConnectionSpec	file:
DEFAULT_CP_MAX_CONNECT_ATTEMPT	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	private static final Integer DEFAULT_CP_MAX_CONNECT_ATTEMPT = 3;$/;"	f	class:DefaultConnectionSpec	file:
DEFAULT_HEARTBEAT_SEC	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	static final int DEFAULT_HEARTBEAT_SEC = 1;$/;"	f	class:DefaultConnectionSpec
DEFAULT_RCV_BUFF_SIZE	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	private static final int DEFAULT_RCV_BUFF_SIZE = 1024 * 48;$/;"	f	class:DefaultConnectionSpec	file:
DEFAULT_READ_TIMEOUT_MSEC	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	static final int DEFAULT_READ_TIMEOUT_MSEC = 5000;$/;"	f	class:DefaultConnectionSpec
DEFAULT_RECONNECT_CNT	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	static final int DEFAULT_RECONNECT_CNT = 3;$/;"	f	class:DefaultConnectionSpec
DEFAULT_REDIS_DB	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	static final int DEFAULT_REDIS_DB = 0;$/;"	f	class:DefaultConnectionSpec
DEFAULT_REDIS_HOST_NAME	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	static final String DEFAULT_REDIS_HOST_NAME = "localhost";$/;"	f	class:DefaultConnectionSpec
DEFAULT_REDIS_PASSWORD	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	static final byte[] DEFAULT_REDIS_PASSWORD = null;$/;"	f	class:DefaultConnectionSpec
DEFAULT_REDIS_PORT	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	static final int DEFAULT_REDIS_PORT = 6379;$/;"	f	class:DefaultConnectionSpec
DEFAULT_SND_BUFF_SIZE	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	private static final int DEFAULT_SND_BUFF_SIZE = 1024 * 48;$/;"	f	class:DefaultConnectionSpec	file:
DEFAULT_SO_PREF_BANDWIDTH	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	private static final int DEFAULT_SO_PREF_BANDWIDTH = 0;$/;"	f	class:DefaultConnectionSpec	file:
DEFAULT_SO_PREF_CONN_TIME	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	private static final int DEFAULT_SO_PREF_CONN_TIME = 2;$/;"	f	class:DefaultConnectionSpec	file:
DEFAULT_SO_PREF_LATENCY	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	private static final int DEFAULT_SO_PREF_LATENCY = 1;$/;"	f	class:DefaultConnectionSpec	file:
DEL	src/api/src/main/java/org/jredis/protocol/Command.java	/^	DEL			(RequestType.MULTI_KEY, 	ResponseType.NUMBER), $/;"	e	enum:Command	file:
DELIMETER_LEN	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public static final int 	DELIMETER_LEN = SPACE.length;$/;"	f	class:ProtocolBase
DESC	src/api/src/main/java/org/jredis/Sort.java	/^	Sort DESC  ();$/;"	m	interface:Sort
DESC	src/api/src/main/java/org/jredis/protocol/Command.java	/^		DESC,$/;"	e	enum:Command.Option	file:
DESC	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	public Sort DESC() { sortSpec = String.format("%s%s", Command.Option.DESC.name(), PAD); return this;}$/;"	m	class:SortSupport
DISCARD	src/api/src/main/java/org/jredis/protocol/Command.java	/^	DISCARD		(RequestType.NO_ARG, 		ResponseType.STATUS),$/;"	e	enum:Command	file:
DISCONNECTED	src/api/src/main/java/org/jredis/connector/Connection.java	/^			DISCONNECTED,$/;"	e	enum:Connection.Event.Type	file:
DISCONNECTED	src/api/src/main/java/org/jredis/connector/Connection.java	/^		DISCONNECTED,$/;"	e	enum:Connection.State	file:
DISCONNECTING	src/api/src/main/java/org/jredis/connector/Connection.java	/^			DISCONNECTING,$/;"	e	enum:Connection.Event.Type	file:
DefaultCodec	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^public class DefaultCodec {$/;"	c
DefaultConnectionFactory	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionFactory.java	/^public class DefaultConnectionFactory implements Connection.Factory {$/;"	c
DefaultConnectionSpec	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	public DefaultConnectionSpec () throws ClientRuntimeException {$/;"	m	class:DefaultConnectionSpec
DefaultConnectionSpec	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	public DefaultConnectionSpec (InetAddress address, int port) throws ClientRuntimeException {$/;"	m	class:DefaultConnectionSpec
DefaultConnectionSpec	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	public DefaultConnectionSpec (InetAddress address, int port, int database, byte[] credentials) throws ClientRuntimeException {$/;"	m	class:DefaultConnectionSpec
DefaultConnectionSpec	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^final public class DefaultConnectionSpec extends ConnectionSpec.RefImpl {$/;"	c
DefaultKeyCodec	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultKeyCodec.java	/^public class DefaultKeyCodec implements KeyCodec {$/;"	c
DefaultProtocolFactory	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/DefaultProtocolFactory.java	/^public class DefaultProtocolFactory implements Protocol.Factory {$/;"	c
DefaultStringCodec	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultStringCodec.java	/^	public DefaultStringCodec() {$/;"	m	class:DefaultStringCodec
DefaultStringCodec	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultStringCodec.java	/^	public DefaultStringCodec(Charset charset){$/;"	m	class:DefaultStringCodec
DefaultStringCodec	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultStringCodec.java	/^public class DefaultStringCodec implements Codec<String> {$/;"	c
Deprecated	src/api/src/main/java/org/jredis/connector/Connection.java	/^		@Deprecated$/;"	e	enum:Connection.Property	file:
ECHO	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ECHO    	(RequestType.VALUE,     	ResponseType.BULK),$/;"	e	enum:Command	file:
ERROR	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	public enum Code { OK, ERROR, CIAO }$/;"	e	enum:ResponseStatus.Code	file:
ERROR	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public enum Category { INFO, DEBUG, ERROR, PROBLEM, BUG }$/;"	e	enum:Log.Category	file:
ERR_BYTE	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public static final byte	ERR_BYTE 	= (byte) 45; \/\/ -$/;"	f	class:ProtocolBase
EXEC	src/api/src/main/java/org/jredis/protocol/Command.java	/^	EXEC		(RequestType.NO_ARG, 		ResponseType.RESULT_SET), \/\/ NEED NEW RESPONSE TYPE$/;"	e	enum:Command	file:
EXISTS	src/api/src/main/java/org/jredis/protocol/Command.java	/^	EXISTS		(RequestType.KEY, 			ResponseType.BOOLEAN), $/;"	e	enum:Command	file:
EXPIRE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	EXPIRE		(RequestType.KEY_NUM,		ResponseType.BOOLEAN), $/;"	e	enum:Command	file:
EXPIREAT	src/api/src/main/java/org/jredis/protocol/Command.java	/^	EXPIREAT	(RequestType.KEY_NUM,		ResponseType.BOOLEAN), $/;"	e	enum:Command	file:
Event	src/api/src/main/java/org/jredis/Event.java	/^	protected Event(SRC src, ETYPE eType){$/;"	m	class:Event
Event	src/api/src/main/java/org/jredis/Event.java	/^	protected Event(SRC src, ETYPE eType, INFO info){$/;"	m	class:Event
Event	src/api/src/main/java/org/jredis/Event.java	/^public class Event <SRC, ETYPE, INFO> implements Serializable{$/;"	c
Event	src/api/src/main/java/org/jredis/connector/Connection.java	/^        public Event (Connection src, Type type) {$/;"	m	class:Connection.Event
Event	src/api/src/main/java/org/jredis/connector/Connection.java	/^        public Event (Connection src, Type type, Object eventInfo) {$/;"	m	class:Connection.Event
Event	src/api/src/main/java/org/jredis/connector/Connection.java	/^    final public static class Event extends org.jredis.Event<Connection, Event.Type, Object>{$/;"	c	interface:Connection
FAULTED	src/api/src/main/java/org/jredis/connector/Connection.java	/^			FAULTED,$/;"	e	enum:Connection.Event.Type	file:
FINAL	src/ri/src/main/java/org/jredis/ri/RI.java	/^		FINAL$/;"	e	enum:RI.Release	file:
FLUSHALL	src/api/src/main/java/org/jredis/protocol/Command.java	/^	FLUSHALL	(RequestType.NO_ARG,		ResponseType.STATUS),$/;"	e	enum:Command	file:
FLUSHDB	src/api/src/main/java/org/jredis/protocol/Command.java	/^	FLUSHDB		(RequestType.NO_ARG,		ResponseType.STATUS), $/;"	e	enum:Command	file:
FOO	src/api/src/main/java/org/jredis/protocol/Command.java	/^		FOO,$/;"	e	enum:Command.Flag	file:
Factory	src/api/src/main/java/org/jredis/connector/Connection.java	/^    public interface Factory {$/;"	i	interface:Connection
Factory	src/api/src/main/java/org/jredis/protocol/Protocol.java	/^	public interface Factory {$/;"	i	interface:Protocol
FastBufferedInputStream	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^	public FastBufferedInputStream (InputStream in, int bufferSize) {$/;"	m	class:FastBufferedInputStream
FastBufferedInputStream	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^public final class FastBufferedInputStream extends java.io.InputStream {$/;"	c
FaultedConnection	src/api/src/main/java/org/jredis/connector/FaultedConnection.java	/^	public FaultedConnection (ConnectionSpec connSpec, String errMsg) {$/;"	m	class:FaultedConnection
FaultedConnection	src/api/src/main/java/org/jredis/connector/FaultedConnection.java	/^public class FaultedConnection implements Connection {$/;"	c
Flag	src/api/src/main/java/org/jredis/connector/Connection.java	/^		Flag (){$/;"	m	class:Connection.Flag
Flag	src/api/src/main/java/org/jredis/connector/Connection.java	/^    	public enum Flag {$/;"	g	interface:Connection.Socket
Flag	src/api/src/main/java/org/jredis/connector/Connection.java	/^    public enum Flag {  	$/;"	g	interface:Connection
Flag	src/api/src/main/java/org/jredis/protocol/Command.java	/^		Flag (){$/;"	m	class:Command.Flag
Flag	src/api/src/main/java/org/jredis/protocol/Command.java	/^	public enum Flag {$/;"	g	class:Command
FutureBoolean	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureBoolean extends FutureResultBase implements Future<Boolean>{$/;"	c	class:JRedisFutureSupport
FutureBoolean	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureBoolean (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureBoolean
FutureByteArray	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureByteArray extends FutureResultBase implements Future<byte[]>{$/;"	c	class:JRedisFutureSupport
FutureByteArray	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureByteArray (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureByteArray
FutureByteArrayList	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureByteArrayList extends FutureResultBase implements Future<List<byte[]>>{$/;"	c	class:JRedisFutureSupport
FutureByteArrayList	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureByteArrayList (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureByteArrayList
FutureDataDictionary	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureDataDictionary extends FutureResultBase implements Future<Map<String, byte[]>>{$/;"	c	class:JRedisFutureSupport
FutureDataDictionary	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureDataDictionary (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureDataDictionary
FutureDouble	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureDouble extends FutureResultBase implements Future<Double>{$/;"	c	class:JRedisFutureSupport
FutureDouble	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureDouble (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureDouble
FutureInfo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureInfo extends FutureResultBase implements Future<Map<String, String>>{$/;"	c	class:JRedisFutureSupport
FutureInfo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureInfo (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureInfo
FutureKeyList	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureKeyList extends FutureResultBase implements Future<List<String>>{$/;"	c	class:JRedisFutureSupport
FutureKeyList	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureKeyList (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureKeyList
FutureLong	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureLong extends FutureResultBase implements Future<Long>{$/;"	c	class:JRedisFutureSupport
FutureLong	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureLong (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureLong
FutureObjectInfo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureObjectInfo extends FutureResultBase implements Future<ObjectInfo>{$/;"	c	class:JRedisFutureSupport
FutureObjectInfo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureObjectInfo (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureObjectInfo
FutureRedisType	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureRedisType extends FutureResultBase implements Future<RedisType>{$/;"	c	class:JRedisFutureSupport
FutureRedisType	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureRedisType (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureRedisType
FutureResultBase	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^		protected FutureResultBase(Future<Response> pendingRequest){ this.pendingRequest = pendingRequest;}$/;"	m	class:JRedisFutureSupport.FutureResultBase
FutureResultBase	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureResultBase {$/;"	c	class:JRedisFutureSupport
FutureSortStoreResp	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureSortStoreResp extends FutureResultBase implements Future<List<byte[]>>{$/;"	c	class:JRedisFutureSupport
FutureSortStoreResp	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureSortStoreResp (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureSortStoreResp
FutureStatus	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureStatus extends FutureResultBase implements Future<ResponseStatus>  {$/;"	c	class:JRedisFutureSupport
FutureStatus	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureStatus (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureStatus
FutureString	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureString extends FutureResultBase implements Future<String>{$/;"	c	class:JRedisFutureSupport
FutureString	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureString (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureString
FutureZSetList	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public static class FutureZSetList extends FutureResultBase implements Future<List<ZSetEntry>>{$/;"	c	class:JRedisFutureSupport
FutureZSetList	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        protected FutureZSetList (Future<Response> pendingRequest) { super(pendingRequest); }$/;"	m	class:JRedisFutureSupport.FutureZSetList
GET	src/api/src/main/java/org/jredis/Sort.java	/^	Sort GET   (String pattern);$/;"	m	interface:Sort
GET	src/api/src/main/java/org/jredis/protocol/Command.java	/^		GET,$/;"	e	enum:Command.Option	file:
GET	src/api/src/main/java/org/jredis/protocol/Command.java	/^	GET 		(RequestType.KEY, 			ResponseType.BULK), $/;"	e	enum:Command	file:
GET	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	public Sort GET(String pattern) { getSpec = String.format("%s %s%s", Command.Option.GET.name(), pattern, PAD); return this; }$/;"	m	class:SortSupport
GETSET	src/api/src/main/java/org/jredis/protocol/Command.java	/^	GETSET		(RequestType.KEY_VALUE, 	ResponseType.BULK), $/;"	e	enum:Command	file:
GZip	src/ri/src/main/java/org/jredis/ri/alphazero/support/GZip.java	/^public class GZip {$/;"	c
GZipCompressedStringCodec	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/GZipCompressedStringCodec.java	/^public class GZipCompressedStringCodec extends DefaultStringCodec {$/;"	c
GZipTest	src/ri/src/test/java/org/jredis/ri/alphazero/support/GZipTest.java	/^public class GZipTest {$/;"	c
HASHTABLE	src/api/src/main/java/org/jredis/ObjectEncoding.java	/^		HASHTABLE$/;"	e	enum:ObjectEncoding	file:
HDEL	src/api/src/main/java/org/jredis/protocol/Command.java	/^	HDEL 		(RequestType.KEY_VALUE, 	ResponseType.BOOLEAN),$/;"	e	enum:Command	file:
HEXISTS	src/api/src/main/java/org/jredis/protocol/Command.java	/^	HEXISTS 	(RequestType.KEY_VALUE, 	ResponseType.BOOLEAN),$/;"	e	enum:Command	file:
HGET	src/api/src/main/java/org/jredis/protocol/Command.java	/^	HGET 		(RequestType.KEY_VALUE, 	ResponseType.BULK),$/;"	e	enum:Command	file:
HGETALL	src/api/src/main/java/org/jredis/protocol/Command.java	/^	HGETALL 	(RequestType.KEY, 			ResponseType.MULTI_BULK),$/;"	e	enum:Command	file:
HKEYS	src/api/src/main/java/org/jredis/protocol/Command.java	/^	HKEYS 		(RequestType.KEY, 			ResponseType.MULTI_BULK),$/;"	e	enum:Command	file:
HLEN	src/api/src/main/java/org/jredis/protocol/Command.java	/^	HLEN 		(RequestType.KEY, 			ResponseType.NUMBER),$/;"	e	enum:Command	file:
HOST	src/api/src/main/java/org/jredis/connector/Connection.java	/^		HOST,$/;"	e	enum:Connection.Property	file:
HSET	src/api/src/main/java/org/jredis/protocol/Command.java	/^	HSET 		(RequestType.KEY_KEY_VALUE, ResponseType.BOOLEAN),$/;"	e	enum:Command	file:
HVALS	src/api/src/main/java/org/jredis/protocol/Command.java	/^	HVALS 		(RequestType.KEY, 			ResponseType.MULTI_BULK),$/;"	e	enum:Command	file:
HeartbeatJinn	src/ri/src/main/java/org/jredis/ri/alphazero/connection/HeartbeatJinn.java	/^	public HeartbeatJinn (Connection conn, int periodInSecs, String name) {$/;"	m	class:HeartbeatJinn
HeartbeatJinn	src/ri/src/main/java/org/jredis/ri/alphazero/connection/HeartbeatJinn.java	/^public class HeartbeatJinn extends Thread implements Connection.Listener{$/;"	c
INCR	src/api/src/main/java/org/jredis/protocol/Command.java	/^	INCR		(RequestType.KEY, 			ResponseType.NUMBER), $/;"	e	enum:Command	file:
INCRBY	src/api/src/main/java/org/jredis/protocol/Command.java	/^	INCRBY		(RequestType.KEY_NUM,		ResponseType.NUMBER),  $/;"	e	enum:Command	file:
INFO	src/api/src/main/java/org/jredis/protocol/Command.java	/^	INFO		(RequestType.NO_ARG, 		ResponseType.BULK), $/;"	e	enum:Command	file:
INFO	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public enum Category { INFO, DEBUG, ERROR, PROBLEM, BUG }$/;"	e	enum:Log.Category	file:
INITIALIZED	src/api/src/main/java/org/jredis/connector/Connection.java	/^		INITIALIZED,$/;"	e	enum:Connection.State	file:
INPUT_STREAM_BUFFER_SIZE	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	protected static final int			INPUT_STREAM_BUFFER_SIZE = 1024 * 128;$/;"	f	class:SynchProtocol
INT	src/api/src/main/java/org/jredis/ObjectEncoding.java	/^		INT (),$/;"	e	enum:ObjectEncoding	file:
INT_N_65535	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	public static final int 		INT_N_65535 = 0 - INT_P_65535;$/;"	f	class:Convert
INT_P_65535	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	public static final int 		INT_P_65535 = 65535;$/;"	f	class:Convert
JAVA_HOME	debian/rules	/^export JAVA_HOME=\/usr\/lib\/jvm\/default-java$/;"	m
JRedis	src/api/src/main/java/org/jredis/JRedis.java	/^public interface JRedis {$/;"	i
JRedisAsynchClient	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisAsynchClient.java	/^	public JRedisAsynchClient (ConnectionSpec connectionSpec) {$/;"	m	class:JRedisAsynchClient
JRedisAsynchClient	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisAsynchClient.java	/^public class JRedisAsynchClient extends JRedisFutureSupport {$/;"	c
JRedisAsynchClientTest	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisAsynchClientTest.java	/^public class JRedisAsynchClientTest extends JRedisFutureProviderTestsBase {$/;"	c
JRedisClient	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisClient.java	/^	public JRedisClient ( ) throws ClientRuntimeException {$/;"	m	class:JRedisClient
JRedisClient	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisClient.java	/^	public JRedisClient (ConnectionSpec connectionSpec){$/;"	m	class:JRedisClient
JRedisClient	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisClient.java	/^	public JRedisClient (String host, int port, String password, int database) $/;"	m	class:JRedisClient
JRedisClient	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisClient.java	/^	public JRedisClient(String host, int port) throws ClientRuntimeException {$/;"	m	class:JRedisClient
JRedisClient	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisClient.java	/^    public JRedisClient (String password) throws ClientRuntimeException {$/;"	m	class:JRedisClient
JRedisClient	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisClient.java	/^public class JRedisClient extends SynchJRedisBase  {$/;"	c
JRedisClientTest	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisClientTest.java	/^public class JRedisClientTest extends JRedisProviderTestsBase {$/;"	c
JRedisFuture	src/api/src/main/java/org/jredis/JRedisFuture.java	/^public interface JRedisFuture {$/;"	i
JRedisFutureProviderTestsBase	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^public abstract class JRedisFutureProviderTestsBase extends JRedisTestSuiteBase<JRedisFuture> {$/;"	c
JRedisFutureSupport	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^public abstract class JRedisFutureSupport implements JRedisFuture {$/;"	c
JRedisPipeline	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipeline.java	/^	public JRedisPipeline (ConnectionSpec connectionSpec) {$/;"	m	class:JRedisPipeline
JRedisPipeline	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipeline.java	/^public class JRedisPipeline extends JRedisFutureSupport {$/;"	c
JRedisPipelineService	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipelineService.java	/^	public JRedisPipelineService (ConnectionSpec connectionSpec) {$/;"	m	class:JRedisPipelineService
JRedisPipelineService	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipelineService.java	/^	public JRedisPipelineService (String host, int port, String password, int database) {$/;"	m	class:JRedisPipelineService
JRedisPipelineService	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipelineService.java	/^public class JRedisPipelineService extends SynchJRedisBase {$/;"	c
JRedisPipelineServiceTest	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisPipelineServiceTest.java	/^public class JRedisPipelineServiceTest extends ConcurrentJRedisProviderTestsBase {$/;"	c
JRedisPipelineTest	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisPipelineTest.java	/^public class JRedisPipelineTest extends JRedisFutureProviderTestsBase {$/;"	c
JRedisProviderTestsBase	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^public abstract class JRedisProviderTestsBase extends JRedisTestSuiteBase<JRedis>{$/;"	c
JRedisService	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	public JRedisService (ConnectionSpec connectionSpec, int connectionCount) {$/;"	m	class:JRedisService
JRedisService	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	public JRedisService (String host, int port) {$/;"	m	class:JRedisService
JRedisService	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	public JRedisService (String host, int port, String password, int database, int connectionCount) {$/;"	m	class:JRedisService
JRedisService	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^public class JRedisService extends SynchJRedisBase {$/;"	c
JRedisServiceTest	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisServiceTest.java	/^public class JRedisServiceTest extends ConcurrentJRedisProviderTestsBase {$/;"	c
JRedisSupport	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^public abstract class JRedisSupport implements JRedis {$/;"	c
JRedisTestSuiteBase	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^public abstract class JRedisTestSuiteBase<T> extends ProviderTestBase<T>{$/;"	c
KEY	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	KEY,$/;"	e	enum:Command.RequestType	file:
KEYS	src/api/src/main/java/org/jredis/protocol/Command.java	/^	KEYS		(RequestType.KEY, 			ResponseType.MULTI_BULK), $/;"	e	enum:Command	file:
KEY_CNT_VALUE	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	KEY_CNT_VALUE,  \/\/ TODO: this should be key value cnt ...$/;"	e	enum:Command.RequestType	file:
KEY_IDX_VALUE	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	KEY_IDX_VALUE,$/;"	e	enum:Command.RequestType	file:
KEY_KEY	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	KEY_KEY,$/;"	e	enum:Command.RequestType	file:
KEY_KEY_VALUE	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	KEY_KEY_VALUE,$/;"	e	enum:Command.RequestType	file:
KEY_NUM	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	KEY_NUM,$/;"	e	enum:Command.RequestType	file:
KEY_NUM_NUM	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	KEY_NUM_NUM,$/;"	e	enum:Command.RequestType	file:
KEY_NUM_NUM_OPTS	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	KEY_NUM_NUM_OPTS,$/;"	e	enum:Command.RequestType	file:
KEY_SPEC	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	KEY_SPEC,$/;"	e	enum:Command.RequestType	file:
KEY_VALUE	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	KEY_VALUE,$/;"	e	enum:Command.RequestType	file:
KeyCodec	src/api/src/main/java/org/jredis/semantics/KeyCodec.java	/^public interface KeyCodec extends Codec<String> {$/;"	i
KeyValueSet	src/api/src/main/java/org/jredis/KeyValueSet.java	/^public interface KeyValueSet <T> {$/;"	i
LARGE_CNT	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected int	LARGE_CNT = 100000;$/;"	f	class:JRedisTestSuiteBase
LARGE_DATA	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected int	LARGE_DATA =  1024 * 512;$/;"	f	class:JRedisTestSuiteBase
LASTSAVE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	LASTSAVE	(RequestType.NO_ARG,		ResponseType.NUMBER),$/;"	e	enum:Command	file:
LIMIT	src/api/src/main/java/org/jredis/Sort.java	/^	Sort LIMIT (long from, long count);$/;"	m	interface:Sort
LIMIT	src/api/src/main/java/org/jredis/protocol/Command.java	/^		LIMIT,$/;"	e	enum:Command.Option	file:
LIMIT	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	public Sort LIMIT(long from, long count) {$/;"	m	class:SortSupport
LINDEX	src/api/src/main/java/org/jredis/protocol/Command.java	/^	LINDEX		(RequestType.KEY_NUM,		ResponseType.BULK), $/;"	e	enum:Command	file:
LLEN	src/api/src/main/java/org/jredis/protocol/Command.java	/^	LLEN		(RequestType.KEY,			ResponseType.NUMBER), $/;"	e	enum:Command	file:
LPOP	src/api/src/main/java/org/jredis/protocol/Command.java	/^	LPOP		(RequestType.KEY,			ResponseType.BULK), $/;"	e	enum:Command	file:
LPUSH	src/api/src/main/java/org/jredis/protocol/Command.java	/^	LPUSH		(RequestType.KEY_VALUE,		ResponseType.STATUS),$/;"	e	enum:Command	file:
LRANGE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	LRANGE		(RequestType.KEY_NUM_NUM,	ResponseType.MULTI_BULK), $/;"	e	enum:Command	file:
LREM	src/api/src/main/java/org/jredis/protocol/Command.java	/^	LREM		(RequestType.KEY_CNT_VALUE,	ResponseType.NUMBER),$/;"	e	enum:Command	file:
LSET	src/api/src/main/java/org/jredis/protocol/Command.java	/^	LSET		(RequestType.KEY_IDX_VALUE,	ResponseType.STATUS), $/;"	e	enum:Command	file:
LTRIM	src/api/src/main/java/org/jredis/protocol/Command.java	/^	LTRIM		(RequestType.KEY_NUM_NUM,	ResponseType.STATUS),$/;"	e	enum:Command	file:
Listener	src/api/src/main/java/org/jredis/connector/Connection.java	/^	public interface Listener {$/;"	i	interface:Connection
Log	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^public class Log {$/;"	c
MAX_CONNECT_ATTEMPT	src/api/src/main/java/org/jredis/connector/Connection.java	/^		MAX_CONNECT_ATTEMPT,$/;"	e	enum:Connection.Property	file:
MAX_CONNECT_WAIT	src/api/src/main/java/org/jredis/connector/Connection.java	/^		MAX_CONNECT_WAIT,$/;"	e	enum:Connection.Property	file:
MAX_POSITIVE_32_BIT_DIGITS	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	private static final int	MAX_POSITIVE_32_BIT_DIGITS	= 10;$/;"	f	class:Convert	file:
MAX_POSITIVE_64_BIT_DIGITS	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	private static final int	MAX_POSITIVE_64_BIT_DIGITS	= 19;$/;"	f	class:Convert	file:
MEDIUM_CNT	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected int	MEDIUM_CNT = 1000;$/;"	f	class:JRedisTestSuiteBase
MEDIUM_DATA	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected int	MEDIUM_DATA = 1024 * 2;$/;"	f	class:JRedisTestSuiteBase
MGET	src/api/src/main/java/org/jredis/protocol/Command.java	/^	MGET		(RequestType.MULTI_KEY, 	ResponseType.MULTI_BULK), $/;"	e	enum:Command	file:
MODALITY	src/api/src/main/java/org/jredis/connector/Connection.java	/^		MODALITY,$/;"	e	enum:Connection.Property	file:
MONITOR	src/api/src/main/java/org/jredis/protocol/Command.java	/^	MONITOR	    (RequestType.NO_ARG, 		ResponseType.VIRTUAL), $/;"	e	enum:Command	file:
MOVE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	MOVE		(RequestType.KEY_NUM,		ResponseType.BOOLEAN),$/;"	e	enum:Command	file:
MSET	src/api/src/main/java/org/jredis/protocol/Command.java	/^	MSET		(RequestType.BULK_SET, 		ResponseType.STATUS), $/;"	e	enum:Command	file:
MSETNX	src/api/src/main/java/org/jredis/protocol/Command.java	/^	MSETNX		(RequestType.BULK_SET, 		ResponseType.BOOLEAN), $/;"	e	enum:Command	file:
MULTI	src/api/src/main/java/org/jredis/protocol/Command.java	/^	MULTI		(RequestType.NO_ARG, 		ResponseType.STATUS),$/;"	e	enum:Command	file:
MULTI_BULK	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	MULTI_BULK (MultiBulkResponse.class),$/;"	e	enum:Command.ResponseType	file:
MULTI_KEY	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	MULTI_KEY,$/;"	e	enum:Command.RequestType	file:
Message	src/api/src/main/java/org/jredis/connector/Message.java	/^public interface Message {$/;"	i
Modality	src/api/src/main/java/org/jredis/connector/Connection.java	/^	public enum Modality {$/;"	g	interface:Connection
Monitor	src/api/src/main/java/org/jredis/connector/Connection.java	/^		Monitor,$/;"	e	enum:Connection.Modality	file:
MultiBulk	src/api/src/main/java/org/jredis/protocol/Response.java	/^		MultiBulk (List.class);$/;"	e	enum:Response.Type	file:
MultiBulkResponse	src/api/src/main/java/org/jredis/protocol/MultiBulkResponse.java	/^public interface MultiBulkResponse extends Response {$/;"	i
NONE	src/api/src/main/java/org/jredis/RedisType.java	/^	NONE, $/;"	e	enum:RedisType	file:
NO_ARG	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	NO_ARG,$/;"	e	enum:Command.RequestType	file:
NO_OP_SPEC	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	private static final String NO_OP_SPEC = "";$/;"	f	class:SortSupport	file:
NUMBER	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	NUMBER (ValueResponse.class),$/;"	e	enum:Command.ResponseType	file:
NUMBER64	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		NUMBER64,$/;"	e	enum:SynchProtocol.ValueType	file:
NUM_BYTE	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public static final byte	NUM_BYTE 	= (byte) 58; \/\/ :$/;"	f	class:ProtocolBase
NotConnectedException	src/api/src/main/java/org/jredis/connector/NotConnectedException.java	/^	public NotConnectedException (String msg) {$/;"	m	class:NotConnectedException
NotConnectedException	src/api/src/main/java/org/jredis/connector/NotConnectedException.java	/^public class NotConnectedException extends ClientRuntimeException {$/;"	c
NotSupportedException	src/api/src/main/java/org/jredis/NotSupportedException.java	/^	public NotSupportedException(String string) {$/;"	m	class:NotSupportedException
NotSupportedException	src/api/src/main/java/org/jredis/NotSupportedException.java	/^	public NotSupportedException(String string, Throwable cause) {$/;"	m	class:NotSupportedException
NotSupportedException	src/api/src/main/java/org/jredis/NotSupportedException.java	/^public class NotSupportedException extends ProviderException {$/;"	c
Numbers	src/api/src/main/java/org/jredis/KeyValueSet.java	/^	public interface Numbers extends KeyValueSet<Number>{}$/;"	i	interface:KeyValueSet
Numbers	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^	final static class Numbers extends BulkSetMapping<Number> implements  KeyValueSet.Numbers {$/;"	c	class:BulkSetMapping
OK	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	public enum Code { OK, ERROR, CIAO }$/;"	e	enum:ResponseStatus.Code	file:
OK_BYTE	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public static final byte	OK_BYTE 	= (byte) 43; \/\/ +$/;"	f	class:ProtocolBase
OPAQUE_BITMASK	src/api/src/main/java/org/jredis/connector/Connection.java	/^		static final int OPAQUE_BITMASK = 0x0000;$/;"	f	class:Connection.Flag
OPAQUE_BITMASK_32	src/api/src/main/java/org/jredis/protocol/Command.java	/^		private static final int OPAQUE_BITMASK_32 = 0x0000;$/;"	f	class:Command.Flag	file:
OPTCODE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	static final public String OPTCODE = "$";$/;"	f	class:Command
ObjectEncoding	src/api/src/main/java/org/jredis/ObjectEncoding.java	/^public enum ObjectEncoding {$/;"	g
ObjectInfo	src/api/src/main/java/org/jredis/ObjectInfo.java	/^	public ObjectInfo($/;"	m	class:ObjectInfo
ObjectInfo	src/api/src/main/java/org/jredis/ObjectInfo.java	/^public class ObjectInfo {$/;"	c
Objects	src/api/src/main/java/org/jredis/KeyValueSet.java	/^	public interface Objects <T extends Serializable> extends KeyValueSet<T>{}$/;"	i	interface:KeyValueSet
Objects	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^	final static class  Objects <T extends Serializable> extends BulkSetMapping<T> implements  KeyValueSet.Objects<T> {$/;"	c	class:BulkSetMapping
Option	src/api/src/main/java/org/jredis/protocol/Command.java	/^		Option () {$/;"	m	class:Command.Option
Option	src/api/src/main/java/org/jredis/protocol/Command.java	/^	public enum Option {$/;"	g	class:Command
PAD	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	private static final String PAD = " ";$/;"	f	class:SortSupport	file:
PING	src/api/src/main/java/org/jredis/protocol/Command.java	/^	PING 		(RequestType.NO_ARG, 		ResponseType.STATUS), $/;"	e	enum:Command	file:
PIPELINE	src/api/src/main/java/org/jredis/connector/Connection.java	/^    	PIPELINE,$/;"	e	enum:Connection.Flag	file:
PORT	src/api/src/main/java/org/jredis/connector/Connection.java	/^		PORT,$/;"	e	enum:Connection.Property	file:
PREFERRED_LINE_BUFFER_SIZE	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	protected static final int			PREFERRED_LINE_BUFFER_SIZE = 128;$/;"	f	class:SynchProtocol
PREFERRED_REQUEST_BUFFER_SIZE	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	protected static final int			PREFERRED_REQUEST_BUFFER_SIZE	= 1024 * 48;$/;"	f	class:SynchProtocol
PROBLEM	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public enum Category { INFO, DEBUG, ERROR, PROBLEM, BUG }$/;"	e	enum:Log.Category	file:
PROTOCOL_CLASS	src/api/src/main/java/org/jredis/connector/Connection.java	/^		PROTOCOL_CLASS,$/;"	e	enum:Connection.Property	file:
PROTOCOL_FACTORY	src/api/src/main/java/org/jredis/connector/Connection.java	/^		PROTOCOL_FACTORY,$/;"	e	enum:Connection.Property	file:
Pair	src/ri/src/main/java/org/jredis/ri/alphazero/Pair.java	/^	public Pair(T1 t1, T2 t2){$/;"	m	class:Pair
Pair	src/ri/src/main/java/org/jredis/ri/alphazero/Pair.java	/^class Pair<T1, T2> {$/;"	c
PendingRequest	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	public PendingRequest(Command cmd, byte[]... args){$/;"	m	class:PendingRequest
PendingRequest	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	public PendingRequest(Request request, Command cmd){$/;"	m	class:PendingRequest
PendingRequest	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^public final class PendingRequest implements Future<Response> {$/;"	c
PipelineConnectionBase	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^	protected PipelineConnectionBase (ConnectionSpec spec) throws ClientRuntimeException {$/;"	m	class:PipelineConnectionBase
PipelineConnectionBase	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^public abstract class PipelineConnectionBase extends ConnectionBase {$/;"	c
Property	src/api/src/main/java/org/jredis/connector/Connection.java	/^	public enum Property {$/;"	g	interface:Connection
Property	src/api/src/main/java/org/jredis/connector/Connection.java	/^    	public enum Property {$/;"	g	interface:Connection.Socket
Protocol	src/api/src/main/java/org/jredis/protocol/Protocol.java	/^public interface Protocol {$/;"	i
ProtocolBase	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	protected ProtocolBase () {}$/;"	m	class:ProtocolBase
ProtocolBase	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^public abstract class ProtocolBase implements Protocol {$/;"	c
ProviderException	src/api/src/main/java/org/jredis/ProviderException.java	/^	public ProviderException(String message) {$/;"	m	class:ProviderException
ProviderException	src/api/src/main/java/org/jredis/ProviderException.java	/^	public ProviderException(String message, Throwable cause) {$/;"	m	class:ProviderException
ProviderException	src/api/src/main/java/org/jredis/ProviderException.java	/^public class ProviderException extends ClientRuntimeException {$/;"	c
ProviderTestBase	src/ri/src/test/java/org/jredis/ri/ProviderTestBase.java	/^public abstract class ProviderTestBase <T> {$/;"	c
PubSub	src/api/src/main/java/org/jredis/connector/Connection.java	/^		PubSub,$/;"	e	enum:Connection.Modality	file:
QUEUED	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	QUEUED (StatusResponse.class),$/;"	e	enum:Command.ResponseType	file:
QUIT	src/api/src/main/java/org/jredis/protocol/Command.java	/^	QUIT 		(RequestType.NO_ARG, 		ResponseType.VIRTUAL), $/;"	e	enum:Command	file:
Query	src/api/src/main/java/org/jredis/Query.java	/^public interface Query {$/;"	i
RANDOMKEY	src/api/src/main/java/org/jredis/protocol/Command.java	/^	RANDOMKEY	(RequestType.NO_ARG,		ResponseType.BULK),$/;"	e	enum:Command	file:
RAW	src/api/src/main/java/org/jredis/ObjectEncoding.java	/^		RAW (),$/;"	e	enum:ObjectEncoding	file:
RELIABLE	src/api/src/main/java/org/jredis/connector/Connection.java	/^    	RELIABLE,$/;"	e	enum:Connection.Flag	file:
RENAME	src/api/src/main/java/org/jredis/protocol/Command.java	/^	RENAME		(RequestType.KEY_KEY, 		ResponseType.STATUS), $/;"	e	enum:Command	file:
RENAMENX	src/api/src/main/java/org/jredis/protocol/Command.java	/^	RENAMENX	(RequestType.KEY_KEY, 		ResponseType.BOOLEAN), $/;"	e	enum:Command	file:
RESULT_SET	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	RESULT_SET (Response.class),$/;"	e	enum:Command.ResponseType	file:
RI	src/ri/src/main/java/org/jredis/ri/RI.java	/^public interface RI {$/;"	i
RPOP	src/api/src/main/java/org/jredis/protocol/Command.java	/^	RPOP		(RequestType.KEY,			ResponseType.BULK),$/;"	e	enum:Command	file:
RPOPLPUSH	src/api/src/main/java/org/jredis/protocol/Command.java	/^	RPOPLPUSH	(RequestType.KEY_KEY,		ResponseType.BULK),$/;"	e	enum:Command	file:
RPUSH	src/api/src/main/java/org/jredis/protocol/Command.java	/^	RPUSH		(RequestType.KEY_VALUE,		ResponseType.STATUS), $/;"	e	enum:Command	file:
Redis	src/api/src/main/java/org/jredis/Redis.java	/^public @interface Redis {$/;"	i
RedisException	src/api/src/main/java/org/jredis/RedisException.java	/^	public RedisException (Command command, String message){$/;"	m	class:RedisException
RedisException	src/api/src/main/java/org/jredis/RedisException.java	/^public final class RedisException extends Exception {$/;"	c
RedisInfo	src/api/src/main/java/org/jredis/RedisInfo.java	/^public enum RedisInfo {$/;"	g
RedisType	src/api/src/main/java/org/jredis/RedisType.java	/^public enum RedisType {$/;"	g
RefImpl	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public static class RefImpl implements ConnectionSpec {$/;"	c	interface:ConnectionSpec
Release	src/ri/src/main/java/org/jredis/ri/RI.java	/^	public enum Release {$/;"	g	interface:RI
Release.ALPHA	src/ri/src/main/java/org/jredis/ri/RI.java	/^		Release release() default Release.ALPHA;$/;"	f	interface:RI.Version
Request	src/api/src/main/java/org/jredis/protocol/Request.java	/^public interface Request extends Message {}$/;"	i
RequestListener	src/api/src/main/java/org/jredis/connector/RequestListener.java	/^public interface RequestListener {$/;"	i
RequestProcessor	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^    public final class RequestProcessor implements Runnable {$/;"	c	class:AsynchConnection
RequestType	src/api/src/main/java/org/jredis/protocol/Command.java	/^    public enum RequestType {$/;"	g	class:Command
Resource	src/api/src/main/java/org/jredis/resource/Resource.java	/^public interface Resource <T> {$/;"	i
ResourceException	src/api/src/main/java/org/jredis/resource/ResourceException.java	/^	public ResourceException(String message) {$/;"	m	class:ResourceException
ResourceException	src/api/src/main/java/org/jredis/resource/ResourceException.java	/^	public ResourceException(String message, Throwable cause) {$/;"	m	class:ResourceException
ResourceException	src/api/src/main/java/org/jredis/resource/ResourceException.java	/^public class ResourceException extends ClientRuntimeException {$/;"	c
Response	src/api/src/main/java/org/jredis/protocol/Response.java	/^public interface Response extends Message {$/;"	i
ResponseHandler	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^        public ResponseHandler () {$/;"	m	class:PipelineConnectionBase.ResponseHandler
ResponseHandler	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^    public final class ResponseHandler implements Runnable, Connection.Listener {$/;"	c	class:PipelineConnectionBase
ResponseStatus	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	public ResponseStatus(ResponseStatus.Code code) {$/;"	m	class:ResponseStatus
ResponseStatus	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	public ResponseStatus(ResponseStatus.Code code, String msg) {$/;"	m	class:ResponseStatus
ResponseStatus	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^public final class ResponseStatus {$/;"	c
ResponseSupport	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		public ResponseSupport (Command cmd, Type type) {$/;"	m	class:ResponseSupport
ResponseSupport	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^	public abstract class ResponseSupport implements Response {$/;"	c
ResponseType	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	ResponseType (Class<? extends Response> respClass){$/;"	m	class:Command.ResponseType
ResponseType	src/api/src/main/java/org/jredis/protocol/Command.java	/^    public enum ResponseType {$/;"	g	class:Command
SADD	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SADD		(RequestType.KEY_VALUE,		ResponseType.BOOLEAN), $/;"	e	enum:Command	file:
SAVE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SAVE		(RequestType.NO_ARG,		ResponseType.STATUS), $/;"	e	enum:Command	file:
SCARD	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SCARD		(RequestType.KEY,			ResponseType.NUMBER), $/;"	e	enum:Command	file:
SDIFF	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SDIFF		(RequestType.MULTI_KEY,		ResponseType.MULTI_BULK), $/;"	e	enum:Command	file:
SDIFFSTORE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SDIFFSTORE  (RequestType.MULTI_KEY,		ResponseType.STATUS),$/;"	e	enum:Command	file:
SELECT	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SELECT		(RequestType.KEY,			ResponseType.STATUS),$/;"	e	enum:Command	file:
SET	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SET 		(RequestType.KEY_VALUE, 	ResponseType.STATUS), $/;"	e	enum:Command	file:
SETNX	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SETNX		(RequestType.KEY_VALUE, 	ResponseType.BOOLEAN),$/;"	e	enum:Command	file:
SHARED	src/api/src/main/java/org/jredis/connector/Connection.java	/^    	SHARED,$/;"	e	enum:Connection.Flag	file:
SHUTDOWN	src/api/src/main/java/org/jredis/connector/Connection.java	/^			SHUTDOWN$/;"	e	enum:Connection.Event.Type	file:
SHUTDOWN	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SHUTDOWN	(RequestType.NO_ARG, 		ResponseType.VIRTUAL),$/;"	e	enum:Command	file:
SINTER	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SINTER		(RequestType.MULTI_KEY,		ResponseType.MULTI_BULK), $/;"	e	enum:Command	file:
SINTERSTORE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SINTERSTORE (RequestType.MULTI_KEY,		ResponseType.STATUS),$/;"	e	enum:Command	file:
SISMEMBER	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SISMEMBER	(RequestType.KEY_VALUE,		ResponseType.BOOLEAN), $/;"	e	enum:Command	file:
SIZE_BYTE	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public static final byte	SIZE_BYTE 	= (byte) 36; \/\/ \$$/;"	f	class:ProtocolBase
SLAVEOF	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SLAVEOF		(RequestType.KEY_KEY, 		ResponseType.STATUS),$/;"	e	enum:Command	file:
SMALL_CNT	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected int	SMALL_CNT = 10;$/;"	f	class:JRedisTestSuiteBase
SMALL_DATA	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected int	SMALL_DATA =  128;$/;"	f	class:JRedisTestSuiteBase
SMEMBERS	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SMEMBERS	(RequestType.KEY,			ResponseType.MULTI_BULK), $/;"	e	enum:Command	file:
SMOVE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SMOVE		(RequestType.KEY_KEY_VALUE,	ResponseType.BOOLEAN),$/;"	e	enum:Command	file:
SORT	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SORT		(RequestType.KEY_SPEC,		ResponseType.MULTI_BULK),$/;"	e	enum:Command	file:
SORT$STORE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SORT$STORE  (RequestType.KEY_SPEC,		ResponseType.NUMBER),$/;"	e	enum:Command	file:
SO_KEEP_ALIVE	src/api/src/main/java/org/jredis/connector/Connection.java	/^    		SO_KEEP_ALIVE,$/;"	e	enum:Connection.Socket.Flag	file:
SO_PREF_BANDWIDTH	src/api/src/main/java/org/jredis/connector/Connection.java	/^    		SO_PREF_BANDWIDTH,$/;"	e	enum:Connection.Socket.Property	file:
SO_PREF_CONN_TIME	src/api/src/main/java/org/jredis/connector/Connection.java	/^    		SO_PREF_CONN_TIME,$/;"	e	enum:Connection.Socket.Property	file:
SO_PREF_LATENCY	src/api/src/main/java/org/jredis/connector/Connection.java	/^    		SO_PREF_LATENCY,$/;"	e	enum:Connection.Socket.Property	file:
SO_RCVBUF	src/api/src/main/java/org/jredis/connector/Connection.java	/^    		SO_RCVBUF,$/;"	e	enum:Connection.Socket.Property	file:
SO_SNDBUF	src/api/src/main/java/org/jredis/connector/Connection.java	/^    		SO_SNDBUF,$/;"	e	enum:Connection.Socket.Property	file:
SO_TIMEOUT	src/api/src/main/java/org/jredis/connector/Connection.java	/^    		SO_TIMEOUT,$/;"	e	enum:Connection.Socket.Property	file:
SPACE	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public static final byte[] 	SPACE = {(byte) 32};$/;"	f	class:ProtocolBase
SPOP	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SPOP     	(RequestType.KEY,        	ResponseType.BULK),$/;"	e	enum:Command	file:
SRANDMEMBER	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SRANDMEMBER (RequestType.KEY,  			ResponseType.BULK),$/;"	e	enum:Command	file:
SREM	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SREM		(RequestType.KEY_VALUE,		ResponseType.BOOLEAN), $/;"	e	enum:Command	file:
STATEFUL	src/api/src/main/java/org/jredis/connector/Connection.java	/^    	STATEFUL,$/;"	e	enum:Connection.Flag	file:
STATUS	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	STATUS (StatusResponse.class),$/;"	e	enum:Command.ResponseType	file:
STATUS	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		STATUS,$/;"	e	enum:SynchProtocol.ValueType	file:
STATUS_CIAO	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	public static final ResponseStatus	STATUS_CIAO	= new ResponseStatus (ResponseStatus.Code.CIAO);$/;"	f	class:ResponseStatus
STATUS_OK	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	public static final ResponseStatus STATUS_OK = new ResponseStatus (ResponseStatus.Code.OK);$/;"	f	class:ResponseStatus
STOPPING	src/api/src/main/java/org/jredis/connector/Connection.java	/^			STOPPING,$/;"	e	enum:Connection.Event.Type	file:
STORE	src/api/src/main/java/org/jredis/Sort.java	/^	Sort STORE (String destKey);$/;"	m	interface:Sort
STORE	src/api/src/main/java/org/jredis/protocol/Command.java	/^		STORE;$/;"	e	enum:Command.Option	file:
STORE	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	public Sort STORE (String destKey) {$/;"	m	class:SortSupport
STRING	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	STRING (ValueResponse.class),$/;"	e	enum:Command.ResponseType	file:
STRING	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		STRING$/;"	e	enum:SynchProtocol.ValueType	file:
SUBSTR	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SUBSTR		(RequestType.KEY_NUM_NUM,	ResponseType.BULK),$/;"	e	enum:Command	file:
SUNION	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SUNION		(RequestType.MULTI_KEY,		ResponseType.MULTI_BULK), $/;"	e	enum:Command	file:
SUNIONSTORE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	SUNIONSTORE (RequestType.MULTI_KEY,		ResponseType.STATUS), $/;"	e	enum:Command	file:
SUPPORTED_CHARSET	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^	public final static Charset SUPPORTED_CHARSET = Charset.forName ("UTF-8");$/;"	f	class:DefaultCodec
SUPPORTED_CHARSET	src/ri/src/test/java/org/jredis/ri/alphazero/support/GZipTest.java	/^	public final static Charset SUPPORTED_CHARSET = Charset.forName ("UTF-8");$/;"	f	class:GZipTest
SUPPORTED_CHARSET_NAME	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^	public final static String SUPPORTED_CHARSET_NAME = "UTF-8";	\/\/ this is for jdk 1.5 compliance$/;"	f	class:DefaultCodec
SemanticJRedis	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^public interface SemanticJRedis <T> \/* extends JRedis *\/$/;"	i
SemanticQuery	src/api/src/main/java/org/jredis/semantics/SemanticQuery.java	/^public interface SemanticQuery <T> \/*extends Query*\/ {$/;"	i
SemanticSort	src/api/src/main/java/org/jredis/semantics/SemanticSort.java	/^public interface SemanticSort <T> extends Sort {$/;"	i
Semantics	src/api/src/main/java/org/jredis/Semantics.java	/^public interface Semantics {$/;"	i
Semantics	src/api/src/main/java/org/jredis/semantics/Semantics.java	/^public interface Semantics extends CodecManager{$/;"	i
Signal	src/ri/src/main/java/org/jredis/ri/alphazero/support/Signal.java	/^public class Signal {$/;"	c
Socket	src/api/src/main/java/org/jredis/connector/Connection.java	/^    public interface Socket {$/;"	i	interface:Connection
Sort	src/api/src/main/java/org/jredis/Sort.java	/^public interface Sort extends Query {$/;"	i
SortSupport	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	protected SortSupport (String key, byte[] validatedKeyBytes){$/;"	m	class:SortSupport
SortSupport	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^public abstract class SortSupport implements Sort {$/;"	c
State	src/api/src/main/java/org/jredis/connector/Connection.java	/^	public enum State {$/;"	g	interface:Connection
Status	src/api/src/main/java/org/jredis/protocol/Response.java	/^		Status 	  (ResponseStatus.class),$/;"	e	enum:Response.Type	file:
StatusResponse	src/api/src/main/java/org/jredis/protocol/StatusResponse.java	/^public interface StatusResponse extends Response {$/;"	i
StreamBufferRequest	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^		public StreamBufferRequest (ByteArrayOutputStream	buffer) {$/;"	m	class:ProtocolBase.StreamBufferRequest
StreamBufferRequest	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public static class StreamBufferRequest implements Request {$/;"	c	class:ProtocolBase
Strings	src/api/src/main/java/org/jredis/KeyValueSet.java	/^	public interface Strings extends KeyValueSet<String>{}$/;"	i	interface:KeyValueSet
Strings	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^	final static class Strings extends BulkSetMapping<String> implements  KeyValueSet.Strings {$/;"	c	class:BulkSetMapping
Support	src/api/src/main/java/org/jredis/Query.java	/^	public static class Support {$/;"	c	interface:Query
SynchBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		private SynchBulkResponse(Command cmd) {$/;"	m	class:SynchProtocol.SynchBulkResponse	file:
SynchBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		public SynchBulkResponse(byte[] buff, Command cmd) {$/;"	m	class:SynchProtocol.SynchBulkResponse
SynchBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	public class SynchBulkResponse extends SynchMultiLineResponseBase implements BulkResponse {$/;"	c	class:SynchProtocol
SynchConnection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/SynchConnection.java	/^	public SynchConnection ($/;"	m	class:SynchConnection
SynchConnection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/SynchConnection.java	/^public class SynchConnection extends ConnectionBase implements Connection {$/;"	c
SynchJRedisBase	src/ri/src/main/java/org/jredis/ri/alphazero/SynchJRedisBase.java	/^public abstract class SynchJRedisBase extends JRedisSupport implements Resource<JRedis> {$/;"	c
SynchLineResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		private SynchLineResponse(Command cmd, ValueType flavor) {$/;"	m	class:SynchProtocol.SynchLineResponse	file:
SynchLineResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		public  SynchLineResponse(byte[] buff, Command cmd, ValueType flavor) {$/;"	m	class:SynchProtocol.SynchLineResponse
SynchLineResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	public class SynchLineResponse extends SynchResponseBase implements StatusResponse, ValueResponse {$/;"	c	class:SynchProtocol
SynchMultiBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		private SynchMultiBulkResponse(Command cmd) {$/;"	m	class:SynchProtocol.SynchMultiBulkResponse	file:
SynchMultiBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		public SynchMultiBulkResponse(byte[] buff, Command cmd) {$/;"	m	class:SynchProtocol.SynchMultiBulkResponse
SynchMultiBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	public class SynchMultiBulkResponse extends SynchMultiLineResponseBase implements MultiBulkResponse {$/;"	c	class:SynchProtocol
SynchMultiLineResponseBase	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	public abstract class SynchMultiLineResponseBase extends SynchResponseBase {$/;"	c	class:SynchProtocol
SynchMultiLineResponseBase	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^        protected SynchMultiLineResponseBase (byte[] buffer, Command cmd, Type type) {$/;"	m	class:SynchProtocol.SynchMultiLineResponseBase
SynchPipelineConnection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/SynchPipelineConnection.java	/^    public SynchPipelineConnection (ConnectionSpec spec) throws ClientRuntimeException {$/;"	m	class:SynchPipelineConnection
SynchPipelineConnection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/SynchPipelineConnection.java	/^public class SynchPipelineConnection extends PipelineConnectionBase {$/;"	c
SynchProtocol	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	public SynchProtocol() {$/;"	m	class:SynchProtocol
SynchProtocol	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^public class SynchProtocol extends ProtocolBase {$/;"	c
SynchResponseBase	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		protected SynchResponseBase(byte[] buffer, Command cmd, Type type) {$/;"	m	class:SynchProtocol.SynchResponseBase
SynchResponseBase	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	public abstract class SynchResponseBase extends ResponseSupport {$/;"	c	class:SynchProtocol
Synchronous	src/api/src/main/java/org/jredis/connector/Connection.java	/^		Synchronous,$/;"	e	enum:Connection.Modality	file:
TERMINATED	src/api/src/main/java/org/jredis/connector/Connection.java	/^		TERMINATED$/;"	e	enum:Connection.State	file:
TEST	src/api/src/main/java/org/jredis/protocol/Command.java	/^		TEST,$/;"	e	enum:Command.Flag	file:
TRACE	src/api/src/main/java/org/jredis/connector/Connection.java	/^    	TRACE,$/;"	e	enum:Connection.Flag	file:
TTL	src/api/src/main/java/org/jredis/protocol/Command.java	/^	TTL			(RequestType.KEY,			ResponseType.NUMBER),$/;"	e	enum:Command	file:
TYPE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	TYPE		(RequestType.KEY, 			ResponseType.STRING),$/;"	e	enum:Command	file:
TestBase	src/api/src/test/java/org/jredis/TestBase.java	/^public class TestBase {$/;"	c
TestBean	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		public TestBean() {$/;"	m	class:JRedisTestSuiteBase.TestBean
TestBean	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		public TestBean(String string) { $/;"	m	class:JRedisTestSuiteBase.TestBean
TestBean	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	public static class TestBean implements Serializable {$/;"	c	class:JRedisTestSuiteBase
TestCommand	src/api/src/test/java/org/jredis/protocol/TestCommand.java	/^public class TestCommand extends TestBase {$/;"	c
TestSpecElements	src/api/src/test/java/org/jredis/connector/TestSpecElements.java	/^public class TestSpecElements extends TestBase{$/;"	c
Type	src/api/src/main/java/org/jredis/connector/Connection.java	/^		public enum Type {$/;"	g	class:Connection.Event
Type	src/api/src/main/java/org/jredis/protocol/Response.java	/^		Type (Class<?> clazz){$/;"	m	class:Response.Type
Type	src/api/src/main/java/org/jredis/protocol/Response.java	/^	public enum Type{$/;"	g	interface:Response
UnexpectedEOFException	src/ri/src/main/java/org/jredis/ri/alphazero/connection/UnexpectedEOFException.java	/^	public UnexpectedEOFException(String msg) {$/;"	m	class:UnexpectedEOFException
UnexpectedEOFException	src/ri/src/main/java/org/jredis/ri/alphazero/connection/UnexpectedEOFException.java	/^public class UnexpectedEOFException extends ConnectionException {$/;"	c
VALUE	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	VALUE,$/;"	e	enum:Command.RequestType	file:
VIRTUAL	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	VIRTUAL (StatusResponse.class),$/;"	e	enum:Command.ResponseType	file:
Value	src/api/src/main/java/org/jredis/protocol/Response.java	/^		Value 	  (Integer.class),$/;"	e	enum:Response.Type	file:
ValueResponse	src/api/src/main/java/org/jredis/protocol/ValueResponse.java	/^public interface ValueResponse extends Response {$/;"	i
ValueType	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	protected enum ValueType {$/;"	g	class:SynchProtocol
Version	src/api/src/main/java/org/jredis/_specification.java	/^	public interface Version {$/;"	i	interface:_specification
Version	src/api/src/main/java/org/jredis/resource/_specification.java	/^	public interface Version {$/;"	i	interface:_specification
Version	src/ri/src/main/java/org/jredis/ri/RI.java	/^	public @interface Version {$/;"	i	interface:RI
Version	src/ri/src/main/java/org/jredis/ri/alphazero/_specification.java	/^	public interface Version {$/;"	i	interface:_specification
VirtualResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/VirtualResponse.java	/^	public VirtualResponse () { $/;"	m	class:VirtualResponse
VirtualResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/VirtualResponse.java	/^	public VirtualResponse (ResponseStatus status) { $/;"	m	class:VirtualResponse
VirtualResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/VirtualResponse.java	/^public final class VirtualResponse implements Response {$/;"	c
WITHSCORES	src/api/src/main/java/org/jredis/protocol/Command.java	/^		WITHSCORES,$/;"	e	enum:Command.Option	file:
ZADD	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZADD		(RequestType.KEY_IDX_VALUE,	ResponseType.BOOLEAN), $/;"	e	enum:Command	file:
ZCARD	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZCARD		(RequestType.KEY,			ResponseType.NUMBER), $/;"	e	enum:Command	file:
ZCOUNT	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZCOUNT		(RequestType.KEY_NUM_NUM, ResponseType.NUMBER),$/;"	e	enum:Command	file:
ZINCRBY	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZINCRBY		(RequestType.KEY_IDX_VALUE, ResponseType.BULK),$/;"	e	enum:Command	file:
ZIPMAP	src/api/src/main/java/org/jredis/ObjectEncoding.java	/^		ZIPMAP(),$/;"	e	enum:ObjectEncoding	file:
ZRANGE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZRANGE			(RequestType.KEY_NUM_NUM,	ResponseType.MULTI_BULK),$/;"	e	enum:Command	file:
ZRANGE$OPTS	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZRANGE$OPTS		(RequestType.KEY_NUM_NUM_OPTS,	ResponseType.MULTI_BULK),$/;"	e	enum:Command	file:
ZRANGEBYSCORE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZRANGEBYSCORE		(RequestType.KEY_NUM_NUM,	ResponseType.MULTI_BULK),$/;"	e	enum:Command	file:
ZRANK	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZRANK		(RequestType.KEY_VALUE,		ResponseType.NUMBER),$/;"	e	enum:Command	file:
ZREM	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZREM		(RequestType.KEY_VALUE,		ResponseType.BOOLEAN),$/;"	e	enum:Command	file:
ZREMRANGEBYRANK	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZREMRANGEBYRANK	(RequestType.KEY_NUM_NUM,	ResponseType.NUMBER),$/;"	e	enum:Command	file:
ZREMRANGEBYSCORE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZREMRANGEBYSCORE	(RequestType.KEY_NUM_NUM,	ResponseType.NUMBER),$/;"	e	enum:Command	file:
ZREVRANGE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZREVRANGE		(RequestType.KEY_NUM_NUM,		ResponseType.MULTI_BULK),$/;"	e	enum:Command	file:
ZREVRANGE$OPTS	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZREVRANGE$OPTS	(RequestType.KEY_NUM_NUM_OPTS,	ResponseType.MULTI_BULK),$/;"	e	enum:Command	file:
ZREVRANK	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZREVRANK	(RequestType.KEY_VALUE,		ResponseType.NUMBER),$/;"	e	enum:Command	file:
ZSCORE	src/api/src/main/java/org/jredis/protocol/Command.java	/^	ZSCORE		(RequestType.KEY_VALUE,		ResponseType.BULK),$/;"	e	enum:Command	file:
ZSetEntry	src/api/src/main/java/org/jredis/ZSetEntry.java	/^public interface ZSetEntry{$/;"	i
ZSetEntryImpl	src/ri/src/main/java/org/jredis/ri/alphazero/ZSetEntryImpl.java	/^    public ZSetEntryImpl (byte[] valueBytes, byte[] scoreBytes) {$/;"	m	class:ZSetEntryImpl
ZSetEntryImpl	src/ri/src/main/java/org/jredis/ri/alphazero/ZSetEntryImpl.java	/^class ZSetEntryImpl extends Pair<byte[], byte[]> implements ZSetEntry {$/;"	c
_error	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	private static final void _error (Category cat, String msg, Object...args) {$/;"	m	class:Log	file:
_specification	src/api/src/main/java/org/jredis/_specification.java	/^public interface _specification {$/;"	i
_specification	src/api/src/main/java/org/jredis/resource/_specification.java	/^public interface _specification {$/;"	i
_specification	src/ri/src/main/java/org/jredis/ri/alphazero/_specification.java	/^public interface _specification {$/;"	i
acquireLock	src/ri/src/main/java/org/jredis/ri/alphazero/connection/SynchConnection.java	/^    private Lock acquireLock() {$/;"	m	class:SynchConnection	file:
add	src/api/src/main/java/org/jredis/KeyValueSet.java	/^	public KeyValueSet<T> add(String key, T value);$/;"	m	interface:KeyValueSet
add	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^    public KeyValueSet<T> add (String key, T value) {$/;"	m	class:BulkSetMapping
addListener	src/api/src/main/java/org/jredis/connector/Connection.java	/^	 	public boolean addListener(Listener connListener);$/;"	m	interface:Connection
addListener	src/api/src/main/java/org/jredis/connector/FaultedConnection.java	/^    final public boolean addListener (Listener connListener) {$/;"	m	class:FaultedConnection
addListener	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	final public boolean addListener(Listener connListener){$/;"	m	class:ConnectionBase
alphaSpec	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	private String alphaSpec = NO_OP_SPEC;$/;"	f	class:SortSupport	file:
append	src/api/src/main/java/org/jredis/JRedis.java	/^		   long append (String key, T object) throws RedisException;$/;"	m	interface:JRedis
append	src/api/src/main/java/org/jredis/JRedis.java	/^	public long append (String key, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
append	src/api/src/main/java/org/jredis/JRedis.java	/^	public long append (String key, String stringValue) throws RedisException;$/;"	m	interface:JRedis
append	src/api/src/main/java/org/jredis/JRedis.java	/^	public long append (String key, byte[] value) throws RedisException;$/;"	m	interface:JRedis
append	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		   Future<Long> append (String key, T object);$/;"	m	interface:JRedisFuture
append	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> append (String key, Number numberValue);$/;"	m	interface:JRedisFuture
append	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> append (String key, String stringValue);$/;"	m	interface:JRedisFuture
append	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> append (String key, byte[] value);$/;"	m	interface:JRedisFuture
append	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> Future<Long> append (String key, T value) {$/;"	m	class:JRedisFutureSupport
append	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> append (String key, byte[] value){$/;"	m	class:JRedisFutureSupport
append	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> append(String key, Number value) {$/;"	m	class:JRedisFutureSupport
append	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> append(String key, String value) {$/;"	m	class:JRedisFutureSupport
append	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> long append (String key, T value) throws RedisException {$/;"	m	class:JRedisSupport
append	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long append(String key, Number value) throws RedisException {$/;"	m	class:JRedisSupport
append	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long append(String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
append	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long append(String key, byte[] value) throws RedisException{$/;"	m	class:JRedisSupport
arch_bits	src/api/src/main/java/org/jredis/RedisInfo.java	/^	arch_bits,$/;"	e	enum:RedisInfo	file:
args	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	final byte[][] args;$/;"	f	class:PendingRequest
assertDidRaiseRuntimeError	src/api/src/test/java/org/jredis/TestBase.java	/^	protected final <T extends RuntimeException> void assertDidRaiseRuntimeError (Runnable test, Class<T> errtype){$/;"	m	class:TestBase
assertDidRaiseRuntimeError	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final <FAULT extends RuntimeException> void assertDidRaiseRuntimeError (Runnable test, Class<FAULT> errtype){$/;"	m	class:JRedisTestSuiteBase
assertEquals	src/api/src/test/java/org/jredis/TestBase.java	/^	public static final void assertEquals(Object actual, Object expected, String msgfmt, Object...optionalFmtArgs){$/;"	m	class:TestBase
assertEquals	src/api/src/test/java/org/jredis/TestBase.java	/^	public static final void assertEquals(byte[] actual, byte[] expected, String msgfmt, Object...optionalFmtArgs){$/;"	m	class:TestBase
assertFalse	src/api/src/test/java/org/jredis/TestBase.java	/^	public static final void assertFalse(boolean condition, String msgfmt, Object...optionalFmtArgs){$/;"	m	class:TestBase
assertNotNull	src/api/src/test/java/org/jredis/TestBase.java	/^	public static final void assertNotNull(Object object, String msgfmt, Object...optionalFmtArgs){$/;"	m	class:TestBase
assertNull	src/api/src/test/java/org/jredis/TestBase.java	/^	public static final void assertNull(Object object, String msgfmt, Object...optionalFmtArgs){$/;"	m	class:TestBase
assertResponseRead	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		protected final void assertResponseRead () {$/;"	m	class:ResponseSupport
assertTrue	src/api/src/test/java/org/jredis/TestBase.java	/^	public static final void assertTrue(boolean condition, String msgfmt, Object...optionalFmtArgs){$/;"	m	class:TestBase
auth	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public JRedis auth (String authorization) throws RedisException;$/;"	m	interface:SemanticJRedis
available	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^	public int available () throws IOException {$/;"	m	class:FastBufferedInputStream
await	src/ri/src/main/java/org/jredis/ri/alphazero/support/Signal.java	/^	public boolean await (long time, TimeUnit unit) throws InterruptedException {$/;"	m	class:Signal
await	src/ri/src/main/java/org/jredis/ri/alphazero/support/Signal.java	/^	public void await () throws InterruptedException {$/;"	m	class:Signal
bgrewriteaof	src/api/src/main/java/org/jredis/JRedis.java	/^	public String bgrewriteaof () throws RedisException;$/;"	m	interface:JRedis
bgrewriteaof	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<String> bgrewriteaof ();$/;"	m	interface:JRedisFuture
bgrewriteaof	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureString bgrewriteaof() {$/;"	m	class:JRedisFutureSupport
bgrewriteaof	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public String bgrewriteaof() throws RedisException {$/;"	m	class:JRedisSupport
bgrewriteaof_in_progress	src/api/src/main/java/org/jredis/RedisInfo.java	/^	bgrewriteaof_in_progress,$/;"	e	enum:RedisInfo	file:
bgsave	src/api/src/main/java/org/jredis/JRedis.java	/^	public void bgsave () throws RedisException;$/;"	m	interface:JRedis
bgsave	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> bgsave ();$/;"	m	interface:JRedisFuture
bgsave	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public void bgsave () throws RedisException;$/;"	m	interface:SemanticJRedis
bgsave	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus bgsave() {$/;"	m	class:JRedisFutureSupport
bgsave	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void bgsave() throws RedisException {$/;"	m	class:JRedisSupport
bgsave_in_progress	src/api/src/main/java/org/jredis/RedisInfo.java	/^	bgsave_in_progress,$/;"	e	enum:RedisInfo	file:
bind	src/api/src/main/java/org/jredis/resource/Context.java	/^	public void bind   (String name, Object value);$/;"	m	interface:Context
bitclear	src/api/src/main/java/org/jredis/connector/Connection.java	/^		static final public int bitclear(int bitset, Flag...flags){$/;"	m	class:Connection.Flag
bitclear	src/api/src/main/java/org/jredis/protocol/Command.java	/^		static final public int bitclear(int bitset, Flag...flags){$/;"	m	class:Command.Flag
bitmask	src/api/src/main/java/org/jredis/connector/Connection.java	/^		public final int bitmask;$/;"	f	class:Connection.Flag
bitmask	src/api/src/main/java/org/jredis/protocol/Command.java	/^		public final int bitmask;$/;"	f	class:Command.Flag
bitset	src/api/src/main/java/org/jredis/connector/Connection.java	/^		static final public int bitset(Flag...flags){$/;"	m	class:Connection.Flag
bitset	src/api/src/main/java/org/jredis/connector/Connection.java	/^		static final public int bitset(int bitset, Flag...flags){$/;"	m	class:Connection.Flag
bitset	src/api/src/main/java/org/jredis/protocol/Command.java	/^		static final public int bitset(Flag...flags){$/;"	m	class:Command.Flag
bitset	src/api/src/main/java/org/jredis/protocol/Command.java	/^		static final public int bitset(int bitset, Flag...flags){$/;"	m	class:Command.Flag
blocked_clients	src/api/src/main/java/org/jredis/RedisInfo.java	/^	blocked_clients,$/;"	e	enum:RedisInfo	file:
booleanValue	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		private boolean		booleanValue;$/;"	f	class:SynchProtocol.SynchLineResponse	file:
buffer	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^		ByteArrayOutputStream buffer;$/;"	f	class:ProtocolBase.StreamBufferRequest
buffer	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		byte[]		buffer;$/;"	f	class:SynchProtocol.SynchResponseBase
buffer	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^	private byte[] buffer;$/;"	f	class:FastBufferedInputStream	file:
bug	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public static final void bug (String msg)     { _error (Category.BUG, msg); }$/;"	m	class:Log
bug	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public static final void bug (String msg, Object...args) { _error (Category.BUG, msg, args); }$/;"	m	class:Log
bySpec	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	private String bySpec = NO_OP_SPEC;$/;"	f	class:SortSupport	file:
bytes	src/api/src/main/java/org/jredis/protocol/Command.java	/^		public final byte[] bytes;$/;"	f	class:Command.Option
bytes	src/api/src/main/java/org/jredis/protocol/Command.java	/^	public final byte[] bytes;$/;"	f	class:Command
bytevalue	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	private byte   		bytevalue;$/;"	f	class:JRedisTestSuiteBase	file:
cache_synchBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	SynchBulkResponse  cache_synchBulkResponse = null;$/;"	f	class:SynchProtocol
cache_synchLineResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	SynchLineResponse cache_synchLineResponse = null;$/;"	f	class:SynchProtocol
cache_synchMultiBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	SynchMultiBulkResponse  cache_synchMultiBulkResponse = null;$/;"	f	class:SynchProtocol
cancel	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^		public boolean cancel (boolean mayInterruptIfRunning) {$/;"	m	class:JRedisFutureSupport.FutureResultBase
cancel	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	public boolean cancel (boolean mayInterruptIfRunning) { return false; }$/;"	m	class:PendingRequest
cast	src/ri/src/main/java/org/jredis/ri/alphazero/support/Assert.java	/^	T cast$/;"	m	class:Assert
changes_since_last_save	src/api/src/main/java/org/jredis/RedisInfo.java	/^	changes_since_last_save,$/;"	e	enum:RedisInfo	file:
charSet	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultStringCodec.java	/^    private final Charset charSet; \/\/ java 1.6$/;"	f	class:DefaultStringCodec	file:
checkStatus	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	private final void checkStatus () throws ExecutionException $/;"	m	class:PendingRequest	file:
cmd	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	final Command cmd;$/;"	f	class:PendingRequest
cmd	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		protected Command 			cmd;$/;"	f	class:ResponseSupport
cmd	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	private String cmd;$/;"	f	class:JRedisFutureProviderTestsBase	file:
cmd	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	private String cmd;$/;"	f	class:JRedisProviderTestsBase	file:
cnt	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected int	 		cnt;$/;"	f	class:JRedisTestSuiteBase
code	src/api/src/main/java/org/jredis/protocol/Command.java	/^	public final String code;$/;"	f	class:Command
code	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	private final Code	code;$/;"	f	class:ResponseStatus	file:
code	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	public ResponseStatus.Code code() { return code; }$/;"	m	class:ResponseStatus
command	src/api/src/main/java/org/jredis/RedisException.java	/^	private final Command command;$/;"	f	class:RedisException	file:
commonSet	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final Set<String>		commonSet = new HashSet<String> ();$/;"	f	class:JRedisTestSuiteBase
completion	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	final Signal completion = new Signal();$/;"	f	class:PendingRequest
compress	src/ri/src/main/java/org/jredis/ri/alphazero/support/GZip.java	/^    public static final byte[] compress(byte[] data){$/;"	m	class:GZip
conn	src/ri/src/main/java/org/jredis/ri/alphazero/connection/HeartbeatJinn.java	/^	private final Connection conn;$/;"	f	class:HeartbeatJinn	file:
connCount	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	private final int				connCount;$/;"	f	class:JRedisService	file:
connInUse	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	private boolean 				connInUse[];$/;"	f	class:JRedisService	file:
connPoolAccess	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	private Semaphore   			connPoolAccess;$/;"	f	class:JRedisService	file:
connSpec	src/api/src/main/java/org/jredis/connector/FaultedConnection.java	/^	final private ConnectionSpec connSpec;$/;"	f	class:FaultedConnection	file:
connSpec	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisAsynchClient.java	/^	final protected ConnectionSpec connSpec;$/;"	f	class:JRedisAsynchClient
connect	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	protected final void connect () throws IllegalStateException, ClientRuntimeException {$/;"	m	class:ConnectionBase
connected	src/ri/src/main/java/org/jredis/ri/alphazero/connection/HeartbeatJinn.java	/^	AtomicBoolean connected;$/;"	f	class:HeartbeatJinn
connected_clients	src/api/src/main/java/org/jredis/RedisInfo.java	/^	connected_clients,$/;"	e	enum:RedisInfo	file:
connected_slaves	src/api/src/main/java/org/jredis/RedisInfo.java	/^	connected_slaves,$/;"	e	enum:RedisInfo	file:
connection	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisAsynchClient.java	/^	final private Connection	connection;$/;"	f	class:JRedisAsynchClient	file:
connection	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisClient.java	/^	private Connection	connection;$/;"	f	class:JRedisClient	file:
connection	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipeline.java	/^	final private Connection	connection;$/;"	f	class:JRedisPipeline	file:
connection	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipelineService.java	/^	private final Connection connection;$/;"	f	class:JRedisPipelineService	file:
connectionCnt	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisServiceTest.java	/^	protected int connectionCnt = 1;$/;"	f	class:JRedisServiceTest
connectionEstablished	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^	private CountDownLatch		    connectionEstablished;$/;"	f	class:PipelineConnectionBase	file:
connectionFlagBitmask	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		int		connectionFlagBitmask;$/;"	f	class:ConnectionSpec.RefImpl
connectionProperties	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		Map<Connection.Property, Object> connectionProperties = new HashMap<Connection.Property, Object>();$/;"	f	class:ConnectionSpec.RefImpl
connectionSpec	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipelineService.java	/^    private final ConnectionSpec 	connectionSpec;$/;"	f	class:JRedisPipelineService	file:
connectionSpec	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	private final ConnectionSpec 	connectionSpec;$/;"	f	class:JRedisService	file:
conns	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	private Connection 				conns[];$/;"	f	class:JRedisService	file:
context	src/ri/src/main/java/org/jredis/ri/alphazero/SynchJRedisBase.java	/^	private Context context;$/;"	f	class:SynchJRedisBase	file:
convert	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        private static final List<ZSetEntry> convert (List<byte[]> mbulkdata) {$/;"	m	class:JRedisFutureSupport.FutureZSetList	file:
convert	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        private static final Map<String, byte[]> convert (List<byte[]> bulkdata) {$/;"	m	class:JRedisFutureSupport.FutureDataDictionary	file:
cre	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	private ClientRuntimeException cre = null;$/;"	f	class:PendingRequest	file:
createAsynchConnection	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisAsynchClient.java	/^	final private Connection createAsynchConnection() {$/;"	m	class:JRedisAsynchClient	file:
createBooleanResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ConcurrentSynchProtocol.java	/^	protected Response createBooleanResponse(Command cmd) {$/;"	m	class:ConcurrentSynchProtocol
createBooleanResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	protected abstract Response createBooleanResponse(Command cmd) ;$/;"	m	class:ProtocolBase
createBooleanResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	protected Response createBooleanResponse(Command cmd) {$/;"	m	class:SynchProtocol
createBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ConcurrentSynchProtocol.java	/^	protected Response createBulkResponse(Command cmd) {$/;"	m	class:ConcurrentSynchProtocol
createBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	protected abstract Response createBulkResponse(Command cmd) ;$/;"	m	class:ProtocolBase
createBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	protected Response createBulkResponse(Command cmd) {$/;"	m	class:SynchProtocol
createMultiBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ConcurrentSynchProtocol.java	/^	protected Response createMultiBulkResponse(Command cmd) {$/;"	m	class:ConcurrentSynchProtocol
createMultiBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	protected abstract Response createMultiBulkResponse(Command cmd) ;$/;"	m	class:ProtocolBase
createMultiBulkResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	protected Response createMultiBulkResponse(Command cmd) {$/;"	m	class:SynchProtocol
createNumberResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ConcurrentSynchProtocol.java	/^	protected Response createNumberResponse(Command cmd \/*, boolean isBigNum*\/) {$/;"	m	class:ConcurrentSynchProtocol
createNumberResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	protected abstract Response createNumberResponse(Command cmd \/*, boolean bigNum*\/) ;$/;"	m	class:ProtocolBase
createNumberResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	protected Response createNumberResponse(Command cmd \/*, boolean isBigNum*\/) {$/;"	m	class:SynchProtocol
createRequest	src/api/src/main/java/org/jredis/protocol/Protocol.java	/^	public Request createRequest (Command cmd, byte[]...args) throws ProviderException, IllegalArgumentException;$/;"	m	interface:Protocol
createRequest	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	protected abstract Request createRequest (ByteArrayOutputStream buffer);$/;"	m	class:ProtocolBase
createRequest	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public Request createRequest(Command cmd, byte[]... args) throws ProviderException, IllegalArgumentException {$/;"	m	class:ProtocolBase
createRequest	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	protected Request createRequest (ByteArrayOutputStream buffer) {$/;"	m	class:SynchProtocol
createRequestBufffer	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	protected abstract ByteArrayOutputStream createRequestBufffer(Command cmd);$/;"	m	class:ProtocolBase
createRequestBufffer	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	protected ByteArrayOutputStream createRequestBufffer(Command cmd) {$/;"	m	class:SynchProtocol
createResponse	src/api/src/main/java/org/jredis/protocol/Protocol.java	/^	public Response createResponse (Command cmd) throws ProviderException, ClientRuntimeException ;$/;"	m	interface:Protocol
createResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public Response createResponse(Command cmd) throws ProviderException, ClientRuntimeException {$/;"	m	class:ProtocolBase
createStatusResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ConcurrentSynchProtocol.java	/^	protected Response createStatusResponse(Command cmd) {$/;"	m	class:ConcurrentSynchProtocol
createStatusResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	protected abstract Response createStatusResponse(Command cmd);$/;"	m	class:ProtocolBase
createStatusResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	protected Response createStatusResponse(Command cmd) {$/;"	m	class:SynchProtocol
createStringResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ConcurrentSynchProtocol.java	/^	protected Response createStringResponse(Command cmd) {$/;"	m	class:ConcurrentSynchProtocol
createStringResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	protected abstract Response createStringResponse(Command cmd) ;$/;"	m	class:ProtocolBase
createStringResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	protected Response createStringResponse(Command cmd) {$/;"	m	class:SynchProtocol
createSynchConnection	src/ri/src/main/java/org/jredis/ri/alphazero/SynchJRedisBase.java	/^	protected Connection createSynchConnection(ConnectionSpec connSpec){$/;"	m	class:SynchJRedisBase
d	src/ri/src/main/java/org/jredis/ri/RI.java	/^		int		minor() default 0;$/;"	f	interface:RI.Version
d	src/ri/src/main/java/org/jredis/ri/RI.java	/^		int	  	major() default 2;$/;"	f	interface:RI.Version
data	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		byte[] data = null;$/;"	f	class:SynchProtocol.SynchBulkResponse
data	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		private byte[] data;$/;"	f	class:JRedisTestSuiteBase.TestBean	file:
dataClass	src/api/src/main/java/org/jredis/protocol/Response.java	/^		public final Class<?>	dataClass;$/;"	f	class:Response.Type
dataList	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final List<byte[]>	dataList = new ArrayList<byte[]>();$/;"	f	class:JRedisTestSuiteBase
datalist	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		List<byte[]>   datalist;$/;"	f	class:SynchProtocol.SynchMultiBulkResponse
db1	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected int db1 = 13;$/;"	f	class:JRedisTestSuiteBase
db2	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected int db2 = 10;$/;"	f	class:JRedisTestSuiteBase
dbsize	src/api/src/main/java/org/jredis/JRedis.java	/^	public long dbsize () throws RedisException;$/;"	m	interface:JRedis
dbsize	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> dbsize ();$/;"	m	interface:JRedisFuture
dbsize	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public long dbsize () throws RedisException;$/;"	m	interface:SemanticJRedis
dbsize	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> dbsize() {$/;"	m	class:JRedisFutureSupport
dbsize	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long dbsize() throws RedisException {$/;"	m	class:JRedisSupport
debug	src/api/src/main/java/org/jredis/JRedis.java	/^	public ObjectInfo debug (String key) throws RedisException;$/;"	m	interface:JRedis
debug	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ObjectInfo> debug (String key);$/;"	m	interface:JRedisFuture
debug	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<ObjectInfo> debug (String key) {$/;"	m	class:JRedisFutureSupport
debug	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public ObjectInfo debug (String key) throws RedisException {$/;"	m	class:JRedisSupport
debug	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public static final void debug (String format, Object...args) { $/;"	m	class:Log
debug	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public static final void debug (String msg) { debug(msg, (Object[])null); }$/;"	m	class:Log
decode	src/api/src/main/java/org/jredis/Codec.java	/^	public T decode (byte[] bytes);$/;"	m	interface:Codec
decode	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultKeyCodec.java	/^	public String decode (byte[] bytes) { throw new NotSupportedException("key decode not supported."); }$/;"	m	class:DefaultKeyCodec
decode	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultStringCodec.java	/^    public String decode (byte[] bytes) {$/;"	m	class:DefaultStringCodec
decode	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/GZipCompressedStringCodec.java	/^    public String decode (byte[] bytes) {$/;"	m	class:GZipCompressedStringCodec
decode	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^	List<T> decode (List<byte[]> byteList) {$/;"	m	class:DefaultCodec
decode	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^	T  decode(byte [] bytes) $/;"	m	class:DefaultCodec
decompress	src/ri/src/main/java/org/jredis/ri/alphazero/support/GZip.java	/^    public static final byte[] decompress(byte[] data){$/;"	m	class:GZip
decr	src/api/src/main/java/org/jredis/JRedis.java	/^	public long decr (String key) throws RedisException;$/;"	m	interface:JRedis
decr	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> decr (String key);$/;"	m	interface:JRedisFuture
decr	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public long decr (String key) throws RedisException;$/;"	m	interface:SemanticJRedis
decr	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> decr(String key) {$/;"	m	class:JRedisFutureSupport
decr	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long decr(String key) throws RedisException {$/;"	m	class:JRedisSupport
decrby	src/api/src/main/java/org/jredis/JRedis.java	/^	public long decrby (String key, int delta) throws RedisException;$/;"	m	interface:JRedis
decrby	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> decrby (String key, int delta);$/;"	m	interface:JRedisFuture
decrby	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public long decrby (String key, int delta) throws RedisException;$/;"	m	interface:SemanticJRedis
decrby	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> decrby(String key, int delta) {$/;"	m	class:JRedisFutureSupport
decrby	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long decrby(String key, int delta) throws RedisException {$/;"	m	class:JRedisSupport
default_connection_count	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	public static final int 	default_connection_count = 5;$/;"	f	class:JRedisService
del	src/api/src/main/java/org/jredis/JRedis.java	/^	public long del (String ... keys) throws RedisException;$/;"	m	interface:JRedis
del	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> del (String ... keys);$/;"	m	interface:JRedisFuture
del	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public boolean del (String key) throws RedisException;$/;"	m	interface:SemanticJRedis
del	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> del(String ... keys) {$/;"	m	class:JRedisFutureSupport
del	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long del(String ...keys ) throws RedisException {$/;"	m	class:JRedisSupport
didRead	src/api/src/main/java/org/jredis/protocol/Response.java	/^	public boolean didRead ();$/;"	m	interface:Response
didRead	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		protected boolean 			didRead = false;$/;"	f	class:ResponseSupport
didRead	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		protected final boolean didRead (boolean value) { return didRead = value;}$/;"	m	class:ResponseSupport
didRead	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		public boolean didRead() { return didRead;  }$/;"	m	class:ResponseSupport
didRead	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/VirtualResponse.java	/^	public boolean didRead() {return true;}$/;"	m	class:VirtualResponse
discard	src/api/src/main/java/org/jredis/JRedis.java	/^	public JRedis discard () throws RedisException;$/;"	m	interface:JRedis
discard	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public JRedis discard () throws RedisException {$/;"	m	class:JRedisSupport
disconnect	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	protected final void disconnect () throws IllegalStateException {$/;"	m	class:ConnectionBase
doubleList	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final List<Double>	doubleList= new ArrayList<Double>();$/;"	f	class:JRedisTestSuiteBase
echo	src/api/src/main/java/org/jredis/JRedis.java	/^		byte[] echo (T msg) throws RedisException;$/;"	m	interface:JRedis
echo	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] echo (Number msg) throws RedisException;$/;"	m	interface:JRedis
echo	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] echo (String msg) throws RedisException;$/;"	m	interface:JRedis
echo	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] echo (byte[] msg) throws RedisException;$/;"	m	interface:JRedis
echo	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<byte[]> echo (T msg);$/;"	m	interface:JRedisFuture
echo	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> echo (Number msg);$/;"	m	interface:JRedisFuture
echo	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> echo (String msg);$/;"	m	interface:JRedisFuture
echo	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> echo (byte[] msg);$/;"	m	interface:JRedisFuture
echo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^		Future<byte[]> echo (T msg) {$/;"	m	class:JRedisFutureSupport
echo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> echo (Number msg) {$/;"	m	class:JRedisFutureSupport
echo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> echo (String msg) {$/;"	m	class:JRedisFutureSupport
echo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> echo (byte[] msg) {$/;"	m	class:JRedisFutureSupport
echo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	byte[] echo (T value) throws RedisException$/;"	m	class:JRedisSupport
echo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] echo (byte[] value) throws RedisException {$/;"	m	class:JRedisSupport
echo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] echo(Number value) throws RedisException {$/;"	m	class:JRedisSupport
echo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] echo(String value) throws RedisException {$/;"	m	class:JRedisSupport
emptyBytes	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final byte[]			emptyBytes = new byte[0];$/;"	f	class:JRedisTestSuiteBase
emptyString	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final String			emptyString = "";$/;"	f	class:JRedisTestSuiteBase
encode	src/api/src/main/java/org/jredis/Codec.java	/^	public byte[] encode (T object);$/;"	m	interface:Codec
encode	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultKeyCodec.java	/^	public byte[] encode (String key) {$/;"	m	class:DefaultKeyCodec
encode	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultStringCodec.java	/^    public byte[] encode (String value) {$/;"	m	class:DefaultStringCodec
encode	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/GZipCompressedStringCodec.java	/^    public byte[] encode (String value) {$/;"	m	class:GZipCompressedStringCodec
encode	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^	public static final <T extends Serializable>  byte[]  encode(T obj) {$/;"	m	class:DefaultCodec
encode	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^	public static final byte[] encode(String value) {$/;"	m	class:DefaultCodec
encoding	src/api/src/main/java/org/jredis/ObjectInfo.java	/^	private final ObjectEncoding encoding;$/;"	f	class:ObjectInfo	file:
equals	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		@Override public boolean equals (Object o) {$/;"	m	class:JRedisTestSuiteBase.TestBean
error	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public static final void error (String msg)   { _error (Category.ERROR, msg); }$/;"	m	class:Log
error	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public static final void error (String msg, Object...args) { _error (Category.ERROR, msg, args); }$/;"	m	class:Log
errorMsg	src/api/src/main/java/org/jredis/connector/FaultedConnection.java	/^	final private String	errorMsg;$/;"	f	class:FaultedConnection	file:
excepted	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	private boolean excepted = false;$/;"	f	class:PendingRequest	file:
exec	src/api/src/main/java/org/jredis/Query.java	/^	public List<byte[]> exec () throws IllegalStateException, RedisException;	$/;"	m	interface:Query
exec	src/api/src/main/java/org/jredis/semantics/SemanticQuery.java	/^	public List <T> exec () throws IllegalStateException, RedisException;	$/;"	m	interface:SemanticQuery
exec	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	public List<byte[]> exec() throws IllegalStateException, RedisException {$/;"	m	class:SortSupport
execAsynch	src/api/src/main/java/org/jredis/Query.java	/^	public Future<List<byte[]>> execAsynch ();	$/;"	m	interface:Query
execAsynch	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	public Future<List<byte[]>> execAsynch() {$/;"	m	class:SortSupport
execAsynchSort	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	protected abstract Future<List<byte[]>> execAsynchSort (byte[] keyBytes, byte[] sortSpecBytes);$/;"	m	class:SortSupport
execAsynchSortStore	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	protected abstract Future<List<byte[]>> execAsynchSortStore (byte[] keyBytes, byte[] sortSpecBytes);$/;"	m	class:SortSupport
execSort	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	protected abstract List<byte[]> execSort (byte[] keyBytes, byte[] sortSpecBytes) throws IllegalStateException, RedisException;$/;"	m	class:SortSupport
execSortStore	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	protected abstract List<byte[]> execSortStore (byte[] keyBytes, byte[] sortSpecBytes) throws IllegalStateException, RedisException;$/;"	m	class:SortSupport
exists	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean exists(String key) throws RedisException;$/;"	m	interface:JRedis
exists	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> exists(String key);$/;"	m	interface:JRedisFuture
exists	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public boolean exists(String key) throws RedisException;$/;"	m	interface:SemanticJRedis
exists	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> exists(String key) {$/;"	m	class:JRedisFutureSupport
exists	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean exists(String key) throws RedisException {$/;"	m	class:JRedisSupport
expire	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean expire (String key, int ttlseconds) throws RedisException; $/;"	m	interface:JRedis
expire	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> expire (String key, int ttlseconds); $/;"	m	interface:JRedisFuture
expire	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public boolean expire (String key, int ttlseconds) throws RedisException; $/;"	m	interface:SemanticJRedis
expire	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> expire(String key, int ttlseconds) {$/;"	m	class:JRedisFutureSupport
expire	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean expire(String key, int ttlseconds) throws RedisException {$/;"	m	class:JRedisSupport
expire_secs	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected int	expire_secs = 1;$/;"	f	class:JRedisTestSuiteBase
expire_wait_millisecs	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected long	expire_wait_millisecs = 1;$/;"	f	class:JRedisTestSuiteBase
expireat	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean expireat (String key, long epochtimeMillisecs) throws RedisException; $/;"	m	interface:JRedis
expireat	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> expireat (String key, long epochtimeMillisecs); $/;"	m	interface:JRedisFuture
expireat	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> expireat(String key, long epochtime) {$/;"	m	class:JRedisFutureSupport
expireat	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean expireat(String key, long epochtime) throws RedisException {$/;"	m	class:JRedisSupport
flags_bitset	src/api/src/main/java/org/jredis/protocol/Command.java	/^	private final int flags_bitset;$/;"	f	class:Command	file:
flavor	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		private ValueType 	flavor;$/;"	f	class:SynchProtocol.SynchLineResponse	file:
flushall	src/api/src/main/java/org/jredis/JRedis.java	/^	public JRedis flushall () throws RedisException;$/;"	m	interface:JRedis
flushall	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> flushall ();$/;"	m	interface:JRedisFuture
flushall	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public JRedis flushall () throws RedisException;$/;"	m	interface:SemanticJRedis
flushall	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus flushall() {$/;"	m	class:JRedisFutureSupport
flushall	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public JRedis flushall() throws RedisException {$/;"	m	class:JRedisSupport
flushdb	src/api/src/main/java/org/jredis/JRedis.java	/^	public JRedis flushdb () throws RedisException;$/;"	m	interface:JRedis
flushdb	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> flushdb ();$/;"	m	interface:JRedisFuture
flushdb	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public JRedis flushdb () throws RedisException;$/;"	m	interface:SemanticJRedis
flushdb	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus flushdb() {$/;"	m	class:JRedisFutureSupport
flushdb	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public JRedis flushdb() throws RedisException {$/;"	m	class:JRedisSupport
foo	src/api/src/main/java/org/jredis/semantics/BasicCodecManager.java	/^	public void foo () {$/;"	m	class:BasicCodecManager
forType	src/api/src/main/java/org/jredis/semantics/Semantics.java	/^	public <T> SemanticJRedis<T>  forType (Class<T>  type) throws NotSupportedException;$/;"	m	interface:Semantics
get	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] get (String key)  throws RedisException;$/;"	m	interface:JRedis
get	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> get (String key) ;$/;"	m	interface:JRedisFuture
get	src/api/src/main/java/org/jredis/resource/Context.java	/^	public Object get (String name);$/;"	m	interface:Context
get	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public T get (String key)  throws RedisException;$/;"	m	interface:SemanticJRedis
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> get(String key) {$/;"	m	class:JRedisFutureSupport
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public Boolean get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureBoolean
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public Boolean get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureBoolean
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public Double get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureDouble
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public Double get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureDouble
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public List<String> get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureKeyList
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public List<String> get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureKeyList
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public List<ZSetEntry> get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureZSetList
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public List<ZSetEntry> get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureZSetList
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public List<byte[]> get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureByteArrayList
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public List<byte[]> get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureSortStoreResp
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public List<byte[]> get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureByteArrayList
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public List<byte[]> get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureSortStoreResp
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public Long get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureLong
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public Long get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureLong
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public Map<String, String> get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureInfo
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public Map<String, String> get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureInfo
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public Map<String, byte[]> get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureDataDictionary
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public Map<String, byte[]> get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureDataDictionary
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public ObjectInfo get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureObjectInfo
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public ObjectInfo get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureObjectInfo
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public RedisType get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureRedisType
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public RedisType get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureRedisType
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public ResponseStatus get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureStatus
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public ResponseStatus get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureStatus
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public String get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureString
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public String get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureString
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public byte[] get () throws InterruptedException, ExecutionException {$/;"	m	class:JRedisFutureSupport.FutureByteArray
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public byte[] get (long timeout, TimeUnit unit)$/;"	m	class:JRedisFutureSupport.FutureByteArray
get	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] get(String key) throws RedisException {$/;"	m	class:JRedisSupport
get	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	public Response get () throws InterruptedException, ExecutionException {$/;"	m	class:PendingRequest
get	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	public Response get (long timeout, TimeUnit unit)$/;"	m	class:PendingRequest
getAddress	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public InetAddress getAddress () {$/;"	m	class:ConnectionSpec.RefImpl
getAddress	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public InetAddress getAddress();$/;"	m	interface:ConnectionSpec
getBooleanValue	src/api/src/main/java/org/jredis/protocol/ValueResponse.java	/^	public boolean getBooleanValue () throws IllegalStateException;$/;"	m	interface:ValueResponse
getBooleanValue	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		public boolean getBooleanValue() throws IllegalStateException {$/;"	m	class:SynchProtocol.SynchLineResponse
getBulkData	src/api/src/main/java/org/jredis/protocol/BulkResponse.java	/^	public byte[] getBulkData ();$/;"	m	interface:BulkResponse
getBulkData	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		public byte[] getBulkData() {$/;"	m	class:SynchProtocol.SynchBulkResponse
getCodec	src/api/src/main/java/org/jredis/semantics/BasicCodecManager.java	/^	public <T> Codec<T> getCodec(Class<T> type) {$/;"	m	class:BasicCodecManager
getCodec	src/api/src/main/java/org/jredis/semantics/CodecManager.java	/^	public <T> Codec<T>		getCodec(Class<T> type);$/;"	m	interface:CodecManager
getCommand	src/api/src/main/java/org/jredis/RedisException.java	/^	public Command getCommand () { return command; }$/;"	m	class:RedisException
getCommand	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	final Command getCommand () {$/;"	m	class:PendingRequest
getConnectionFlag	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public boolean getConnectionFlag (Connection.Flag flag){$/;"	m	class:ConnectionSpec.RefImpl
getConnectionFlag	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public boolean getConnectionFlag (Connection.Flag flag);$/;"	m	interface:ConnectionSpec
getConnectionProperty	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public Object getConnectionProperty(Property prop);$/;"	m	interface:ConnectionSpec
getConnectionProperty	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^        final public Object getConnectionProperty(Property prop){$/;"	m	class:ConnectionSpec.RefImpl
getContext	src/api/src/main/java/org/jredis/resource/Resource.java	/^	public Context getContext () throws ResourceException;$/;"	m	interface:Resource
getContext	src/ri/src/main/java/org/jredis/ri/alphazero/SynchJRedisBase.java	/^	public final Context getContext() throws ResourceException {$/;"	m	class:SynchJRedisBase
getCreated_on	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		public final long getCreated_on() {return named_on;}$/;"	m	class:JRedisTestSuiteBase.TestBean
getCredentialBytes	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisClient.java	/^	private static byte[] getCredentialBytes (String password){$/;"	m	class:JRedisClient	file:
getCredentials	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public byte[] getCredentials () {$/;"	m	class:ConnectionSpec.RefImpl
getCredentials	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public byte[] getCredentials();$/;"	m	interface:ConnectionSpec
getData	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		public final byte[] getData() { return data;}$/;"	m	class:JRedisTestSuiteBase.TestBean
getDataClass	src/api/src/main/java/org/jredis/protocol/Response.java	/^		public Class<?>   getDataClass() { return dataClass; }$/;"	m	class:Response.Type
getDatabase	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public int getDatabase () {$/;"	m	class:ConnectionSpec.RefImpl
getDatabase	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public int getDatabase ();$/;"	m	interface:ConnectionSpec
getEncoding	src/api/src/main/java/org/jredis/ObjectInfo.java	/^    public ObjectEncoding getEncoding () {$/;"	m	class:ObjectInfo
getHeartbeat	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public int	getHeartbeat() {$/;"	m	class:ConnectionSpec.RefImpl
getHeartbeat	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^    public int	getHeartbeat();$/;"	m	interface:ConnectionSpec
getInfo	src/api/src/main/java/org/jredis/Event.java	/^	public INFO getInfo () {$/;"	m	class:Event
getInputStream	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	final protected InputStream getInputStream() {$/;"	m	class:ConnectionBase
getInterface	src/api/src/main/java/org/jredis/resource/Resource.java	/^	public T getInterface();$/;"	m	interface:Resource
getInterface	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisClient.java	/^	public JRedis getInterface() {$/;"	m	class:JRedisClient
getInterface	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipelineService.java	/^	public JRedis getInterface () {$/;"	m	class:JRedisPipelineService
getInterface	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	public JRedis getInterface() {$/;"	m	class:JRedisService
getKeyAddress	src/api/src/main/java/org/jredis/ObjectInfo.java	/^    public String getKeyAddress () {$/;"	m	class:ObjectInfo
getKeyBytes	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	private byte[] getKeyBytes(String key) throws IllegalArgumentException {$/;"	m	class:JRedisFutureSupport	file:
getKeyBytes	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	private byte[] getKeyBytes(String key) throws IllegalArgumentException {$/;"	m	class:JRedisSupport	file:
getKeyCodec	src/api/src/main/java/org/jredis/Semantics.java	/^	public <T> Codec<T> getKeyCodec(Class<T> keyClass);$/;"	m	interface:Semantics
getKeyRefCount	src/api/src/main/java/org/jredis/ObjectInfo.java	/^    public long getKeyRefCount () {$/;"	m	class:ObjectInfo
getLocalizedMessage	src/api/src/main/java/org/jredis/ClientRuntimeException.java	/^    final public String getLocalizedMessage () {$/;"	m	class:ClientRuntimeException
getLongValue	src/api/src/main/java/org/jredis/protocol/ValueResponse.java	/^	public long getLongValue () throws IllegalStateException;$/;"	m	interface:ValueResponse
getLongValue	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		public long getLongValue() throws IllegalStateException {$/;"	m	class:SynchProtocol.SynchLineResponse
getMappings	src/api/src/main/java/org/jredis/KeyValueSet.java	/^	byte[][] getMappings ();$/;"	m	interface:KeyValueSet
getMappings	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^	public byte[][] getMappings () {$/;"	m	class:BulkSetMapping
getMaxConnectWait	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public int getMaxConnectWait () {$/;"	m	class:ConnectionSpec.RefImpl
getMaxConnectWait	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public int	getMaxConnectWait ();$/;"	m	interface:ConnectionSpec
getMessage	src/api/src/main/java/org/jredis/ClientRuntimeException.java	/^    final public String getMessage () {$/;"	m	class:ClientRuntimeException
getModality	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public Modality getModality () { $/;"	m	class:ConnectionSpec.RefImpl
getModality	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public Modality getModality ();$/;"	m	interface:ConnectionSpec
getModality	src/api/src/main/java/org/jredis/connector/FaultedConnection.java	/^	public Modality getModality() $/;"	m	class:FaultedConnection
getModality	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^	public final Modality getModality() {$/;"	m	class:AsynchConnection
getModality	src/ri/src/main/java/org/jredis/ri/alphazero/connection/SynchConnection.java	/^	public final Modality getModality() {$/;"	m	class:SynchConnection
getMoreBytes	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^	private final int getMoreBytes (int len) throws IOException {$/;"	m	class:FastBufferedInputStream	file:
getMultiBulkData	src/api/src/main/java/org/jredis/protocol/MultiBulkResponse.java	/^	public List<byte[]>		getMultiBulkData () throws ClientRuntimeException, ProviderException;$/;"	m	interface:MultiBulkResponse
getMultiBulkData	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		public List<byte[]> getMultiBulkData() throws ClientRuntimeException, ProviderException {$/;"	m	class:SynchProtocol.SynchMultiBulkResponse
getName	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		public final String getName() {return name;}$/;"	m	class:JRedisTestSuiteBase.TestBean
getObjectInfo	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        private final ObjectInfo getObjectInfo(ValueResponse resp){$/;"	m	class:JRedisFutureSupport.FutureObjectInfo	file:
getOutputStream	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	final protected OutputStream getOutputStream() {$/;"	m	class:ConnectionBase
getParam	src/api/src/main/java/org/jredis/resource/Context.java	/^	public String getParam (String key);$/;"	m	interface:Context
getParamsKeys	src/api/src/main/java/org/jredis/resource/Context.java	/^	Set<String> getParamsKeys();$/;"	m	interface:Context
getPort	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public int getPort () {$/;"	m	class:ConnectionSpec.RefImpl
getPort	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public int getPort ();$/;"	m	interface:ConnectionSpec
getProtocolHandler	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	final protected Protocol getProtocolHandler() {$/;"	m	class:ConnectionBase
getProviderInstance	src/ri/src/test/java/org/jredis/ri/ProviderTestBase.java	/^	protected final T getProviderInstance() {$/;"	m	class:ProviderTestBase
getRandomAsciiString	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected String getRandomAsciiString (int length) {$/;"	m	class:JRedisTestSuiteBase
getRandomBytes	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected byte[] getRandomBytes(int size) {$/;"	m	class:JRedisTestSuiteBase
getRandomString	src/ri/src/test/java/org/jredis/ri/alphazero/support/GZipTest.java	/^	public String getRandomString (int size) {$/;"	m	class:GZipTest
getReconnectCnt	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public int getReconnectCnt () {$/;"	m	class:ConnectionSpec.RefImpl
getReconnectCnt	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public int	getReconnectCnt ();$/;"	m	interface:ConnectionSpec
getRedisType	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        private final RedisType getRedisType(ValueResponse resp){$/;"	m	class:JRedisFutureSupport.FutureRedisType	file:
getResultMap	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        private Map<String, String>  getResultMap (BulkResponse resp) {$/;"	m	class:JRedisFutureSupport.FutureInfo	file:
getScore	src/api/src/main/java/org/jredis/ZSetEntry.java	/^	double getScore();$/;"	m	interface:ZSetEntry
getScore	src/ri/src/main/java/org/jredis/ri/alphazero/ZSetEntryImpl.java	/^	public double getScore () { return DefaultCodec.toDouble(t2); }$/;"	m	class:ZSetEntryImpl
getSignedNumberBytes	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	private static final byte[] getSignedNumberBytes(byte[] unsigned, boolean negative){$/;"	m	class:Convert	file:
getSocketFlag	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public boolean getSocketFlag (Connection.Socket.Flag flag) {$/;"	m	class:ConnectionSpec.RefImpl
getSocketFlag	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public boolean getSocketFlag (Connection.Socket.Flag flag);$/;"	m	interface:ConnectionSpec
getSocketProperty	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public Integer getSocketProperty (Connection.Socket.Property property) {$/;"	m	class:ConnectionSpec.RefImpl
getSocketProperty	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public Integer getSocketProperty (Connection.Socket.Property property);$/;"	m	interface:ConnectionSpec
getSortSpec	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	private final byte[] getSortSpec() {$/;"	m	class:SortSupport	file:
getSource	src/api/src/main/java/org/jredis/Event.java	/^	public SRC getSource () {$/;"	m	class:Event
getSpec	src/api/src/main/java/org/jredis/connector/Connection.java	/^	public ConnectionSpec getSpec();$/;"	m	interface:Connection
getSpec	src/api/src/main/java/org/jredis/connector/FaultedConnection.java	/^	public ConnectionSpec getSpec() {$/;"	m	class:FaultedConnection
getSpec	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	public ConnectionSpec getSpec () {$/;"	m	class:ConnectionBase
getSpec	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	private String getSpec = NO_OP_SPEC;$/;"	f	class:SortSupport	file:
getStatus	src/api/src/main/java/org/jredis/protocol/Response.java	/^	public ResponseStatus getStatus();$/;"	m	interface:Response
getStatus	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		public ResponseStatus getStatus() {return status; }$/;"	m	class:ResponseSupport
getStatus	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/VirtualResponse.java	/^	public ResponseStatus getStatus() { return status;}$/;"	m	class:VirtualResponse
getStringValue	src/api/src/main/java/org/jredis/protocol/ValueResponse.java	/^	public String getStringValue () throws IllegalStateException;$/;"	m	interface:ValueResponse
getStringValue	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		public String getStringValue() throws IllegalStateException {$/;"	m	class:SynchProtocol.SynchLineResponse
getType	src/api/src/main/java/org/jredis/Event.java	/^	public ETYPE getType () {$/;"	m	class:Event
getType	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		public Type getType() { return type;}$/;"	m	class:ResponseSupport
getType	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/VirtualResponse.java	/^	public Type getType() { return Type.Status;}$/;"	m	class:VirtualResponse
getValue	src/api/src/main/java/org/jredis/ZSetEntry.java	/^	byte[] getValue();$/;"	m	interface:ZSetEntry
getValue	src/ri/src/main/java/org/jredis/ri/alphazero/ZSetEntryImpl.java	/^	public byte[] getValue () { return t1;}$/;"	m	class:ZSetEntryImpl
getValueAddress	src/api/src/main/java/org/jredis/ObjectInfo.java	/^    public String getValueAddress () {$/;"	m	class:ObjectInfo
getValueCodec	src/api/src/main/java/org/jredis/Semantics.java	/^	public <T> Codec<T> getValueCodec(Class<T> valueClass);$/;"	m	interface:Semantics
getValueRefCount	src/api/src/main/java/org/jredis/ObjectInfo.java	/^    public long getValueRefCount () {$/;"	m	class:ObjectInfo
getset	src/api/src/main/java/org/jredis/JRedis.java	/^		byte[] getset (String key, T object) throws RedisException;$/;"	m	interface:JRedis
getset	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] getset (String key, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
getset	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] getset (String key, String stringValue) throws RedisException;$/;"	m	interface:JRedis
getset	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] getset (String key, byte[] value) throws RedisException;$/;"	m	interface:JRedis
getset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<byte[]> getset (String key, T object);$/;"	m	interface:JRedisFuture
getset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> getset (String key, Number numberValue);$/;"	m	interface:JRedisFuture
getset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> getset (String key, String stringValue);$/;"	m	interface:JRedisFuture
getset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> getset (String key, byte[] value);$/;"	m	interface:JRedisFuture
getset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	Future<byte[]> getset (String key, T value)$/;"	m	class:JRedisFutureSupport
getset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> getset(String key, Number value) {$/;"	m	class:JRedisFutureSupport
getset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> getset(String key, String value) {$/;"	m	class:JRedisFutureSupport
getset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> getset(String key, byte[] value) {$/;"	m	class:JRedisFutureSupport
getset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	byte[] getset (String key, T value) throws RedisException$/;"	m	class:JRedisSupport
getset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] getset(String key, Number value) throws RedisException {$/;"	m	class:JRedisSupport
getset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] getset(String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
getset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] getset(String key, byte[] value) throws RedisException {$/;"	m	class:JRedisSupport
hash	src/api/src/main/java/org/jredis/RedisType.java	/^	hash$/;"	e	enum:RedisType	file:
hash_max_zipmap_entries	src/api/src/main/java/org/jredis/RedisInfo.java	/^	hash_max_zipmap_entries,$/;"	e	enum:RedisInfo	file:
hash_max_zipmap_value	src/api/src/main/java/org/jredis/RedisInfo.java	/^	hash_max_zipmap_value,$/;"	e	enum:RedisInfo	file:
hdel	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean hdel(String key, String field)  throws RedisException;$/;"	m	interface:JRedis
hdel	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> hdel(String key, String field);$/;"	m	interface:JRedisFuture
hdel	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> hdel(String hashKey, String hashField) {$/;"	m	class:JRedisFutureSupport
hdel	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean hdel(String hashKey, String hashField)  throws RedisException {$/;"	m	class:JRedisSupport
heartbeat	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		private int heartbeat;$/;"	f	class:ConnectionSpec.RefImpl	file:
hexists	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean hexists(String key, String field)  throws RedisException;$/;"	m	interface:JRedis
hexists	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> hexists(String key, String field);$/;"	m	interface:JRedisFuture
hexists	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> hexists(String hashKey, String hashField) {$/;"	m	class:JRedisFutureSupport
hexists	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean hexists(String hashKey, String hashField)  throws RedisException {$/;"	m	class:JRedisSupport
hget	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] hget(String key, String field)  throws RedisException;$/;"	m	interface:JRedis
hget	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> hget(String key, String field);$/;"	m	interface:JRedisFuture
hget	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> hget(String hashKey, String hashField) {$/;"	m	class:JRedisFutureSupport
hget	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] hget(String hashKey, String hashField)  throws RedisException {$/;"	m	class:JRedisSupport
hgetall	src/api/src/main/java/org/jredis/JRedis.java	/^	public Map<String, byte[]> hgetall(String key)  throws RedisException;$/;"	m	interface:JRedis
hgetall	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Map<String, byte[]>> hgetall(String key);$/;"	m	interface:JRedisFuture
hgetall	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Map<String, byte[]>> hgetall(String hashKey) {$/;"	m	class:JRedisFutureSupport
hgetall	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public Map<String, byte[]> hgetall(String hashKey)  throws RedisException {$/;"	m	class:JRedisSupport
hkeys	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<String> hkeys(String key)  throws RedisException;$/;"	m	interface:JRedis
hkeys	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<String>> hkeys(String key);$/;"	m	interface:JRedisFuture
hkeys	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<String>> hkeys(String hashKey) {$/;"	m	class:JRedisFutureSupport
hkeys	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<String> hkeys(String hashKey)  throws RedisException {$/;"	m	class:JRedisSupport
hlen	src/api/src/main/java/org/jredis/JRedis.java	/^	public long hlen(String key)  throws RedisException;$/;"	m	interface:JRedis
hlen	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> hlen(String key);$/;"	m	interface:JRedisFuture
hlen	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> hlen(String hashKey) {$/;"	m	class:JRedisFutureSupport
hlen	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long hlen(String hashKey)  throws RedisException {$/;"	m	class:JRedisSupport
host	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected String host = "localhost";$/;"	f	class:JRedisTestSuiteBase
hset	src/api/src/main/java/org/jredis/JRedis.java	/^		boolean hset(String key, String field, T object)  throws RedisException;$/;"	m	interface:JRedis
hset	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean hset(String key, String field, Number number)  throws RedisException;$/;"	m	interface:JRedis
hset	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean hset(String key, String field, String string)  throws RedisException;$/;"	m	interface:JRedis
hset	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean hset(String key, String field, byte[] value)  throws RedisException;$/;"	m	interface:JRedis
hset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<Boolean> hset(String key, String field, T object);$/;"	m	interface:JRedisFuture
hset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> hset(String key, String field, Number number);$/;"	m	interface:JRedisFuture
hset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> hset(String key, String field, String string);$/;"	m	interface:JRedisFuture
hset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> hset(String key, String field, byte[] value);$/;"	m	interface:JRedisFuture
hset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^		Future<Boolean> hset(String key, String field, T object) {$/;"	m	class:JRedisFutureSupport
hset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> hset(String key, String field, Number numberValue) {$/;"	m	class:JRedisFutureSupport
hset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> hset(String key, String field, String stringValue) {$/;"	m	class:JRedisFutureSupport
hset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> hset(String key, String field, byte[] value) {$/;"	m	class:JRedisFutureSupport
hset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	boolean hset(String key, String field, T object)  throws RedisException {$/;"	m	class:JRedisSupport
hset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean hset(String hashKey, String hashField, byte[] value)  throws RedisException {$/;"	m	class:JRedisSupport
hset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean hset(String key, String field, Number numberValue)  throws RedisException {$/;"	m	class:JRedisSupport
hset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean hset(String key, String field, String stringValue)  throws RedisException {$/;"	m	class:JRedisSupport
hvals	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<byte[]> hvals(String key)  throws RedisException;$/;"	m	interface:JRedis
hvals	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<byte[]>> hvals(String key);$/;"	m	interface:JRedisFuture
hvals	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<byte[]>> hvals(String hashKey) {$/;"	m	class:JRedisFutureSupport
hvals	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<byte[]> hvals(String hashKey)  throws RedisException {$/;"	m	class:JRedisSupport
i2b_65535	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	private static final byte[][]   i2b_65535 = new byte[INT_P_65535+1][];$/;"	f	class:Convert	file:
in	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^	private InputStream in;$/;"	f	class:FastBufferedInputStream	file:
inRange	src/ri/src/main/java/org/jredis/ri/alphazero/support/Assert.java	/^	int inRange$/;"	m	class:Assert
inRange	src/ri/src/main/java/org/jredis/ri/alphazero/support/Assert.java	/^	long inRange$/;"	m	class:Assert
incr	src/api/src/main/java/org/jredis/JRedis.java	/^	public long incr (String key) throws RedisException;$/;"	m	interface:JRedis
incr	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> incr (String key);$/;"	m	interface:JRedisFuture
incr	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public long incr (String key) throws RedisException;$/;"	m	interface:SemanticJRedis
incr	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> incr(String key) {$/;"	m	class:JRedisFutureSupport
incr	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long incr(String key) throws RedisException {$/;"	m	class:JRedisSupport
incrby	src/api/src/main/java/org/jredis/JRedis.java	/^	public long incrby (String key, int delta) throws RedisException;$/;"	m	interface:JRedis
incrby	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> incrby (String key, int delta);$/;"	m	interface:JRedisFuture
incrby	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public long incrby (String key, int delta) throws RedisException;$/;"	m	interface:SemanticJRedis
incrby	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> incrby(String key, int delta) {$/;"	m	class:JRedisFutureSupport
incrby	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long incrby(String key, int delta) throws RedisException {$/;"	m	class:JRedisSupport
info	src/api/src/main/java/org/jredis/Event.java	/^	private final INFO info;$/;"	f	class:Event	file:
info	src/api/src/main/java/org/jredis/JRedis.java	/^	public Map<String, String>	info ()  throws RedisException;$/;"	m	interface:JRedis
info	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Map<String, String>>	info () ;$/;"	m	interface:JRedisFuture
info	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public Map<String, String>	info ()  throws RedisException;$/;"	m	interface:SemanticJRedis
info	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Map<String, String>> info() {$/;"	m	class:JRedisFutureSupport
info	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public Map<String, String> info() throws RedisException {$/;"	m	class:JRedisSupport
initialize	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	private final void initialize () {$/;"	m	class:JRedisService	file:
initializeAsynchConnection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^    protected final void initializeAsynchConnection () throws ProviderException, ClientRuntimeException, RedisException{$/;"	m	class:ConnectionBase
initializeComponents	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^    protected void initializeComponents () {$/;"	m	class:AsynchConnection
initializeComponents	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^    protected void initializeComponents () {$/;"	m	class:ConnectionBase
initializeComponents	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^    protected void initializeComponents () {$/;"	m	class:PipelineConnectionBase
initializeOnConnect	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^    protected final void initializeOnConnect () throws ProviderException, ClientRuntimeException, RedisException{$/;"	m	class:ConnectionBase
initializeSocketStreams	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	protected final void initializeSocketStreams() throws IllegalArgumentException, IOException {$/;"	m	class:ConnectionBase
initializeSynchConnection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^    protected final void initializeSynchConnection () throws ProviderException, ClientRuntimeException, RedisException{$/;"	m	class:ConnectionBase
instance	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultKeyCodec.java	/^	private static final KeyCodec instance;$/;"	f	class:DefaultKeyCodec	file:
instream	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	private InputStream		    instream;$/;"	f	class:ConnectionBase	file:
intList	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final List<Integer>	intList = new ArrayList<Integer>();$/;"	f	class:JRedisTestSuiteBase
intValue	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	private int			intValue;$/;"	f	class:JRedisTestSuiteBase	file:
iobuffer	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^	private byte[] iobuffer;;$/;"	f	class:FastBufferedInputStream	file:
isActive	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^	private AtomicBoolean			isActive;$/;"	f	class:PipelineConnectionBase	file:
isCancelled	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public boolean isCancelled () {$/;"	m	class:JRedisFutureSupport.FutureResultBase
isCancelled	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	public boolean isCancelled () { return false; }$/;"	m	class:PendingRequest
isCompatibleWithVersion	src/api/src/main/java/org/jredis/protocol/Protocol.java	/^	public boolean isCompatibleWithVersion (String version);$/;"	m	interface:Protocol
isCompatibleWithVersion	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^	public boolean isCompatibleWithVersion(String version) {$/;"	m	class:ProtocolBase
isConnected	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	private boolean 			isConnected = false;$/;"	f	class:ConnectionBase	file:
isConnected	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	protected final boolean isConnected () { return isConnected; }$/;"	m	class:ConnectionBase
isDone	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        public boolean isDone () {$/;"	m	class:JRedisFutureSupport.FutureResultBase
isDone	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	public boolean isDone () { $/;"	m	class:PendingRequest
isEquivalent	src/ri/src/main/java/org/jredis/ri/alphazero/support/Assert.java	/^	void isEquivalent (byte[] a, byte[] b) {$/;"	m	class:Assert
isEquivalent	src/ri/src/main/java/org/jredis/ri/alphazero/support/Assert.java	/^	void isEquivalent (byte[] a, byte[] b, Class<E> clazz) {$/;"	m	class:Assert
isError	src/api/src/main/java/org/jredis/protocol/Response.java	/^	public boolean isError ();$/;"	m	interface:Response
isError	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	public boolean isError () { return this.code==Code.ERROR; }$/;"	m	class:ResponseStatus
isError	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		protected boolean 			isError = false;$/;"	f	class:ResponseSupport
isError	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		public boolean isError() {$/;"	m	class:ResponseSupport
isError	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/VirtualResponse.java	/^	public boolean isError() { return false;}$/;"	m	class:VirtualResponse
isSet	src/api/src/main/java/org/jredis/connector/Connection.java	/^		public static boolean isSet(int bitset, Flag flag) {$/;"	m	class:Connection.Flag
isSet	src/api/src/main/java/org/jredis/protocol/Command.java	/^		public static boolean isSet(long bitset, Flag flag) {$/;"	m	class:Command.Flag
isSet	src/api/src/main/java/org/jredis/protocol/Command.java	/^	final public boolean isSet(Flag flag) {$/;"	m	class:Command
isSignalled	src/ri/src/main/java/org/jredis/ri/alphazero/support/Signal.java	/^	boolean isSignalled = false;$/;"	f	class:Signal
isSignalled	src/ri/src/main/java/org/jredis/ri/alphazero/support/Signal.java	/^	public boolean isSignalled() {$/;"	m	class:Signal
isTrue	src/ri/src/main/java/org/jredis/ri/alphazero/support/Assert.java	/^	void isTrue$/;"	m	class:Assert
key	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	protected final String key;$/;"	f	class:SortSupport
key	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected String 		key = null;$/;"	f	class:JRedisTestSuiteBase
keyAddress	src/api/src/main/java/org/jredis/ObjectInfo.java	/^	private final String keyAddress;$/;"	f	class:ObjectInfo	file:
keyByteCache	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	static final private Map<String, byte[]>	keyByteCache = new ConcurrentHashMap<String, byte[]>();$/;"	f	class:JRedisFutureSupport	file:
keyByteCache	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	static final private Map<String, byte[]>	keyByteCache = new ConcurrentHashMap<String, byte[]>();$/;"	f	class:JRedisSupport	file:
keyByteCache	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultKeyCodec.java	/^	static final private Map<String, byte[]>	keyByteCache = new ConcurrentHashMap<String, byte[]>();$/;"	f	class:DefaultKeyCodec	file:
keyBytes	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	protected final byte[] keyBytes;$/;"	f	class:SortSupport
keyRefCount	src/api/src/main/java/org/jredis/ObjectInfo.java	/^	private final long keyRefCount;$/;"	f	class:ObjectInfo	file:
keys	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<String> keys () throws RedisException;$/;"	m	interface:JRedis
keys	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<String> keys (String pattern) throws RedisException;$/;"	m	interface:JRedis
keys	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<String>> keys ();$/;"	m	interface:JRedisFuture
keys	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<String>> keys (String pattern);$/;"	m	interface:JRedisFuture
keys	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public List<String> keys () throws RedisException;$/;"	m	interface:SemanticJRedis
keys	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public List<String> keys (String pattern) throws RedisException;$/;"	m	interface:SemanticJRedis
keys	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<String>> keys() {$/;"	m	class:JRedisFutureSupport
keys	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<String>> keys(String pattern) {$/;"	m	class:JRedisFutureSupport
keys	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<String> keys() throws RedisException {$/;"	m	class:JRedisSupport
keys	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<String> keys(String pattern) throws RedisException {$/;"	m	class:JRedisSupport
keys	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final List<String>	keys = new ArrayList<String>();$/;"	f	class:JRedisTestSuiteBase
largeData	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final byte[]			largeData = getRandomBytes(LARGE_DATA);$/;"	f	class:JRedisTestSuiteBase
last_save_time	src/api/src/main/java/org/jredis/RedisInfo.java	/^	last_save_time,$/;"	e	enum:RedisInfo	file:
lastsave	src/api/src/main/java/org/jredis/JRedis.java	/^	public long lastsave () throws RedisException;$/;"	m	interface:JRedis
lastsave	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> lastsave ();$/;"	m	interface:JRedisFuture
lastsave	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public long lastsave () throws RedisException;$/;"	m	interface:SemanticJRedis
lastsave	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> lastsave() {$/;"	m	class:JRedisFutureSupport
lastsave	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long lastsave() throws RedisException {$/;"	m	class:JRedisSupport
limitSpec	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	private String limitSpec = NO_OP_SPEC;$/;"	f	class:SortSupport	file:
lindex	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] lindex (String listkey, long index) throws RedisException;$/;"	m	interface:JRedis
lindex	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> lindex (String listkey, long index);$/;"	m	interface:JRedisFuture
lindex	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public T lindex (String listkey, int index) throws RedisException;$/;"	m	interface:SemanticJRedis
lindex	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> lindex(String key, long index) {$/;"	m	class:JRedisFutureSupport
lindex	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] lindex(String key, long index) throws RedisException {$/;"	m	class:JRedisSupport
list	src/api/src/main/java/org/jredis/RedisType.java	/^	list,$/;"	e	enum:RedisType	file:
listeners	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	final private Set<Connection.Listener> listeners = new HashSet<Connection.Listener>();$/;"	f	class:ConnectionBase	file:
llen	src/api/src/main/java/org/jredis/JRedis.java	/^	public long llen (String listkey) throws RedisException;$/;"	m	interface:JRedis
llen	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> llen (String listkey);$/;"	m	interface:JRedisFuture
llen	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public long llen (String listkey) throws RedisException;$/;"	m	interface:SemanticJRedis
llen	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> llen(String key) {$/;"	m	class:JRedisFutureSupport
llen	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long llen(String key) throws RedisException {$/;"	m	class:JRedisSupport
lock	src/ri/src/main/java/org/jredis/ri/alphazero/connection/SynchConnection.java	/^	final private Lock lock;$/;"	f	class:SynchConnection	file:
lock	src/ri/src/main/java/org/jredis/ri/alphazero/support/Signal.java	/^	final Lock lock = new ReentrantLock();$/;"	f	class:Signal
log	src/api/src/test/java/org/jredis/TestBase.java	/^	final protected Log log = LogFactory.getLog(TestBase.class);$/;"	f	class:TestBase
log	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public static final void log (String format, Object...args)   { $/;"	m	class:Log
log	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public static final void log (String msg)   { log (msg, (Object[])null); }$/;"	m	class:Log
logger	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public static org.apache.commons.logging.Log logger = LogFactory.getLog("JREDIS");$/;"	f	class:Log
longList	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final List<Long>		longList= new ArrayList<Long>();$/;"	f	class:JRedisTestSuiteBase
longValue	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		private long		longValue;$/;"	f	class:SynchProtocol.SynchLineResponse	file:
longValue	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	private long		longValue;$/;"	f	class:JRedisTestSuiteBase	file:
lpop	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] lpop (String listKey) throws RedisException;$/;"	m	interface:JRedis
lpop	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> lpop (String listKey);$/;"	m	interface:JRedisFuture
lpop	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public T lpop (String listKey) throws RedisException;$/;"	m	interface:SemanticJRedis
lpop	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> lpop(String key) {$/;"	m	class:JRedisFutureSupport
lpop	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] lpop(String key) throws RedisException {$/;"	m	class:JRedisSupport
lpush	src/api/src/main/java/org/jredis/JRedis.java	/^		   void lpush (String listkey, T object) throws RedisException;$/;"	m	interface:JRedis
lpush	src/api/src/main/java/org/jredis/JRedis.java	/^	public void lpush (String listkey, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
lpush	src/api/src/main/java/org/jredis/JRedis.java	/^	public void lpush (String listkey, String stringValue) throws RedisException;$/;"	m	interface:JRedis
lpush	src/api/src/main/java/org/jredis/JRedis.java	/^	public void lpush (String listkey, byte[] value) throws RedisException;$/;"	m	interface:JRedis
lpush	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<ResponseStatus> lpush (String listkey, T object);$/;"	m	interface:JRedisFuture
lpush	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> lpush (String listkey, Number numberValue);$/;"	m	interface:JRedisFuture
lpush	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> lpush (String listkey, String stringValue);$/;"	m	interface:JRedisFuture
lpush	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> lpush (String listkey, byte[] value);$/;"	m	interface:JRedisFuture
lpush	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public void lpush (String listkey, T value) throws RedisException;$/;"	m	interface:SemanticJRedis
lpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> FutureStatus lpush (String key, T value)$/;"	m	class:JRedisFutureSupport
lpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus lpush(String key, Number value) {$/;"	m	class:JRedisFutureSupport
lpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus lpush(String key, String value) {$/;"	m	class:JRedisFutureSupport
lpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus lpush(String key, byte[] value) {$/;"	m	class:JRedisFutureSupport
lpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> void lpush (String key, T value) throws RedisException$/;"	m	class:JRedisSupport
lpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void lpush(String key, Number value) throws RedisException {$/;"	m	class:JRedisSupport
lpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void lpush(String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
lpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void lpush(String key, byte[] value) throws RedisException {$/;"	m	class:JRedisSupport
lrange	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<byte[]> lrange (String listkey, long from, long to) throws RedisException; $/;"	m	interface:JRedis
lrange	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<byte[]>> lrange (String listkey, long from, long to); $/;"	m	interface:JRedisFuture
lrange	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public List<T> lrange (String listkey, int from, int to) throws RedisException; $/;"	m	interface:SemanticJRedis
lrange	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<byte[]>> lrange(String key, long from, long to) {$/;"	m	class:JRedisFutureSupport
lrange	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<byte[]> lrange(String key, long from, long to) throws RedisException {$/;"	m	class:JRedisSupport
lrem	src/api/src/main/java/org/jredis/JRedis.java	/^		   long lrem (String listKey, T object, int count) throws RedisException;$/;"	m	interface:JRedis
lrem	src/api/src/main/java/org/jredis/JRedis.java	/^	public long lrem (String listKey, Number numberValue, int count) throws RedisException;$/;"	m	interface:JRedis
lrem	src/api/src/main/java/org/jredis/JRedis.java	/^	public long lrem (String listKey, String stringValue, int count) throws RedisException;$/;"	m	interface:JRedis
lrem	src/api/src/main/java/org/jredis/JRedis.java	/^	public long lrem (String listKey, byte[] value,       int count) throws RedisException;$/;"	m	interface:JRedis
lrem	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<Long> lrem (String listKey, T object, int count);$/;"	m	interface:JRedisFuture
lrem	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> lrem (String listKey, Number numberValue, int count);$/;"	m	interface:JRedisFuture
lrem	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> lrem (String listKey, String stringValue, int count);$/;"	m	interface:JRedisFuture
lrem	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> lrem (String listKey, byte[] value,       int count);$/;"	m	interface:JRedisFuture
lrem	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public long lrem (String listKey, T value,       int count) throws RedisException;$/;"	m	interface:SemanticJRedis
lrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	Future<Long> lrem (String listKey, T object, int count){$/;"	m	class:JRedisFutureSupport
lrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> lrem (String listKey, Number numberValue, int count) {$/;"	m	class:JRedisFutureSupport
lrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> lrem (String listKey, String value, int count){$/;"	m	class:JRedisFutureSupport
lrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> lrem(String key, byte[] value, int count) {$/;"	m	class:JRedisFutureSupport
lrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	long lrem (String listKey, T object, int count) throws RedisException{$/;"	m	class:JRedisSupport
lrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long lrem (String listKey, Number numberValue, int count) throws RedisException {$/;"	m	class:JRedisSupport
lrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long lrem (String listKey, String value, int count) throws RedisException{$/;"	m	class:JRedisSupport
lrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long lrem(String key, byte[] value, int count) throws RedisException {$/;"	m	class:JRedisSupport
lset	src/api/src/main/java/org/jredis/JRedis.java	/^		   void lset (String key, long index, T object) throws RedisException;$/;"	m	interface:JRedis
lset	src/api/src/main/java/org/jredis/JRedis.java	/^	public void lset (String key, long index, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
lset	src/api/src/main/java/org/jredis/JRedis.java	/^	public void lset (String key, long index, String stringValue) throws RedisException;$/;"	m	interface:JRedis
lset	src/api/src/main/java/org/jredis/JRedis.java	/^	public void lset (String key, long index, byte[] value) throws RedisException;$/;"	m	interface:JRedis
lset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<ResponseStatus> lset (String key, long index, T object);$/;"	m	interface:JRedisFuture
lset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> lset (String key, long index, Number numberValue);$/;"	m	interface:JRedisFuture
lset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> lset (String key, long index, String stringValue);$/;"	m	interface:JRedisFuture
lset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> lset (String key, long index, byte[] value);$/;"	m	interface:JRedisFuture
lset	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public void lset (String key, int index, T value) throws RedisException;$/;"	m	interface:SemanticJRedis
lset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> FutureStatus lset (String key, long index, T object){$/;"	m	class:JRedisFutureSupport
lset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus lset (String key, long index, Number numberValue){$/;"	m	class:JRedisFutureSupport
lset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus lset (String key, long index, String value) {$/;"	m	class:JRedisFutureSupport
lset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus lset(String key, long index, byte[] value) {$/;"	m	class:JRedisFutureSupport
lset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> void lset (String key, long index, T object) throws RedisException{$/;"	m	class:JRedisSupport
lset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void lset (String key, long index, Number numberValue) throws RedisException{$/;"	m	class:JRedisSupport
lset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void lset (String key, long index, String value) throws RedisException {$/;"	m	class:JRedisSupport
lset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void lset(String key, long index, byte[] value) throws RedisException {$/;"	m	class:JRedisSupport
ltrim	src/api/src/main/java/org/jredis/JRedis.java	/^	public void ltrim (String listkey, long keepFrom, long keepTo) throws RedisException;$/;"	m	interface:JRedis
ltrim	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> ltrim (String listkey, long keepFrom, long keepTo);$/;"	m	interface:JRedisFuture
ltrim	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public void ltrim (String listkey, int keepFrom, int keepTo) throws RedisException;$/;"	m	interface:SemanticJRedis
ltrim	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus ltrim(String key, long keepFrom, long keepTo) {$/;"	m	class:JRedisFutureSupport
ltrim	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void ltrim(String key, long keepFrom, long keepTo) throws RedisException {$/;"	m	class:JRedisSupport
major	src/api/src/main/java/org/jredis/_specification.java	/^		long	major	= 0xA;$/;"	f	interface:_specification.Version
major	src/api/src/main/java/org/jredis/resource/_specification.java	/^		long	major	= org.jredis._specification.Version.major;$/;"	f	interface:_specification.Version
major	src/ri/src/main/java/org/jredis/ri/alphazero/_specification.java	/^		long	major	= 0xA;$/;"	f	interface:_specification.Version
map	src/api/src/main/java/org/jredis/semantics/BasicCodecManager.java	/^	Map<Class<?>, Codec<?>> map;$/;"	f	class:BasicCodecManager
map	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^	private final Map<String, T> map = new HashMap<String, T>();$/;"	f	class:BulkSetMapping	file:
markSupported	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^	public boolean markSupported () { return false; }$/;"	m	class:FastBufferedInputStream
maxRead	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^	int maxRead = 0;$/;"	f	class:FastBufferedInputStream
mediumData	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final byte[]			mediumData = getRandomBytes(MEDIUM_DATA);$/;"	f	class:JRedisTestSuiteBase
message	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	public String message() {return msg; }$/;"	m	class:ResponseStatus
mget	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<byte[]> mget(String...keys) throws RedisException;$/;"	m	interface:JRedis
mget	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<byte[]>> mget(String ... keys);$/;"	m	interface:JRedisFuture
mget	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public List<T> mget(String key, String...moreKeys) throws RedisException;$/;"	m	interface:SemanticJRedis
mget	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<byte[]>> mget(String ... keys) {$/;"	m	class:JRedisFutureSupport
mget	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<byte[]> mget(String...keys) throws RedisException {$/;"	m	class:JRedisSupport
minor	src/api/src/main/java/org/jredis/_specification.java	/^	    long 	minor	= 0x1;$/;"	f	interface:_specification.Version
minor	src/api/src/main/java/org/jredis/resource/_specification.java	/^	    long 	minor	= org.jredis._specification.Version.minor;$/;"	f	interface:_specification.Version
minor	src/ri/src/main/java/org/jredis/ri/alphazero/_specification.java	/^	    long 	minor	= 0x0;$/;"	f	interface:_specification.Version
modality	src/ri/src/main/java/org/jredis/ri/alphazero/connection/HeartbeatJinn.java	/^	private final Modality modality;$/;"	f	class:HeartbeatJinn	file:
move	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean move (String key, int dbIndex) throws RedisException;$/;"	m	interface:JRedis
move	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> move (String key, int dbIndex);$/;"	m	interface:JRedisFuture
move	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public boolean move (String key, int dbIndex) throws RedisException;$/;"	m	interface:SemanticJRedis
move	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> move(String key, int dbIndex) {$/;"	m	class:JRedisFutureSupport
move	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean move(String key, int dbIndex) throws RedisException {$/;"	m	class:JRedisSupport
mset	src/api/src/main/java/org/jredis/JRedis.java	/^	public <T extends Serializable> void mset(KeyValueSet.Objects<T> mappings) throws RedisException;$/;"	m	interface:JRedis
mset	src/api/src/main/java/org/jredis/JRedis.java	/^	public void mset(KeyValueSet.ByteArrays mappings) throws RedisException;$/;"	m	interface:JRedis
mset	src/api/src/main/java/org/jredis/JRedis.java	/^	public void mset(KeyValueSet.Numbers mappings) throws RedisException;$/;"	m	interface:JRedis
mset	src/api/src/main/java/org/jredis/JRedis.java	/^	public void mset(KeyValueSet.Strings mappings) throws RedisException;$/;"	m	interface:JRedis
mset	src/api/src/main/java/org/jredis/JRedis.java	/^	public void mset(Map<String, byte[]> keyValueMap) throws RedisException;$/;"	m	interface:JRedis
mset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public <T extends Serializable> Future<ResponseStatus> mset(KeyValueSet.Objects<T> mappings);$/;"	m	interface:JRedisFuture
mset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> mset(KeyValueSet.ByteArrays mappings);$/;"	m	interface:JRedisFuture
mset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> mset(KeyValueSet.Numbers mappings);$/;"	m	interface:JRedisFuture
mset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> mset(KeyValueSet.Strings mappings);$/;"	m	interface:JRedisFuture
mset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> mset(Map<String, byte[]> keyValueMap);$/;"	m	interface:JRedisFuture
mset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	private FutureStatus mset(byte[][] mappings){$/;"	m	class:JRedisFutureSupport	file:
mset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> FutureStatus mset(KeyValueSet.Objects<T> keyValueMap){$/;"	m	class:JRedisFutureSupport
mset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus mset(KeyValueSet.ByteArrays keyValueMap){$/;"	m	class:JRedisFutureSupport
mset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus mset(KeyValueSet.Numbers keyValueMap){$/;"	m	class:JRedisFutureSupport
mset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus mset(KeyValueSet.Strings keyValueMap){$/;"	m	class:JRedisFutureSupport
mset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus mset(Map<String, byte[]> keyValueMap){$/;"	m	class:JRedisFutureSupport
mset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	private void mset(byte[][] mappings) throws RedisException {$/;"	m	class:JRedisSupport	file:
mset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> void mset(KeyValueSet.Objects<T> keyValueMap) throws RedisException{$/;"	m	class:JRedisSupport
mset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void mset(KeyValueSet.ByteArrays keyValueMap) throws RedisException {$/;"	m	class:JRedisSupport
mset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void mset(KeyValueSet.Numbers keyValueMap) throws RedisException{$/;"	m	class:JRedisSupport
mset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void mset(KeyValueSet.Strings keyValueMap) throws RedisException{$/;"	m	class:JRedisSupport
mset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void mset(Map<String, byte[]> keyValueMap) throws RedisException {$/;"	m	class:JRedisSupport
msetnx	src/api/src/main/java/org/jredis/JRedis.java	/^	public <T extends Serializable> boolean msetnx(KeyValueSet.Objects<T> mappings) throws RedisException;$/;"	m	interface:JRedis
msetnx	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean msetnx(KeyValueSet.ByteArrays mappings) throws RedisException;$/;"	m	interface:JRedis
msetnx	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean msetnx(KeyValueSet.Numbers mappings) throws RedisException;$/;"	m	interface:JRedis
msetnx	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean msetnx(KeyValueSet.Strings mappings) throws RedisException;$/;"	m	interface:JRedis
msetnx	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean msetnx(Map<String, byte[]> keyValueMap) throws RedisException;$/;"	m	interface:JRedis
msetnx	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public <T extends Serializable> Future<Boolean> msetnx(KeyValueSet.Objects<T> mappings);$/;"	m	interface:JRedisFuture
msetnx	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> msetnx(KeyValueSet.ByteArrays mappings);$/;"	m	interface:JRedisFuture
msetnx	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> msetnx(KeyValueSet.Numbers mappings);$/;"	m	interface:JRedisFuture
msetnx	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> msetnx(KeyValueSet.Strings mappings);$/;"	m	interface:JRedisFuture
msetnx	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> msetnx(Map<String, byte[]> keyValueMap);$/;"	m	interface:JRedisFuture
msetnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	private Future<Boolean> msetnx(byte[][] mappings){$/;"	m	class:JRedisFutureSupport	file:
msetnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> Future<Boolean> msetnx(KeyValueSet.Objects<T> keyValueMap){$/;"	m	class:JRedisFutureSupport
msetnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> msetnx(KeyValueSet.ByteArrays keyValueMap){$/;"	m	class:JRedisFutureSupport
msetnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> msetnx(KeyValueSet.Numbers keyValueMap){$/;"	m	class:JRedisFutureSupport
msetnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> msetnx(KeyValueSet.Strings keyValueMap){$/;"	m	class:JRedisFutureSupport
msetnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> msetnx(Map<String, byte[]> keyValueMap){$/;"	m	class:JRedisFutureSupport
msetnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	private boolean msetnx(byte[][] mappings) throws RedisException {$/;"	m	class:JRedisSupport	file:
msetnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> boolean msetnx(KeyValueSet.Objects<T> keyValueMap) throws RedisException{$/;"	m	class:JRedisSupport
msetnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean msetnx(KeyValueSet.ByteArrays keyValueMap) throws RedisException {$/;"	m	class:JRedisSupport
msetnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean msetnx(KeyValueSet.Numbers keyValueMap) throws RedisException{$/;"	m	class:JRedisSupport
msetnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean msetnx(KeyValueSet.Strings keyValueMap) throws RedisException{$/;"	m	class:JRedisSupport
msetnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean msetnx(Map<String, byte[]> keyValueMap) throws RedisException {$/;"	m	class:JRedisSupport
msg	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^	private		  String msg;$/;"	f	class:ResponseStatus	file:
multi	src/api/src/main/java/org/jredis/JRedis.java	/^	public JRedis multi() throws RedisException;$/;"	m	interface:JRedis
multi	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public JRedis multi() throws RedisException {$/;"	m	class:JRedisSupport
multiplexing_api	src/api/src/main/java/org/jredis/RedisInfo.java	/^	multiplexing_api,$/;"	e	enum:RedisInfo	file:
mustBeat	src/ri/src/main/java/org/jredis/ri/alphazero/connection/HeartbeatJinn.java	/^	AtomicBoolean mustBeat;$/;"	f	class:HeartbeatJinn
name	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		private String name;$/;"	f	class:JRedisTestSuiteBase.TestBean	file:
named_on	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		private long   named_on;$/;"	f	class:JRedisTestSuiteBase.TestBean	file:
newAsynchConnection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionFactory.java	/^    private Connection newAsynchConnection (ConnectionSpec spec) {$/;"	m	class:DefaultConnectionFactory	file:
newByteArrayKVSet	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^    public static KeyValueSet.ByteArrays newByteArrayKVSet() { return new BulkSetMapping.Bytes(); }$/;"	m	class:BulkSetMapping
newConnection	src/api/src/main/java/org/jredis/connector/Connection.java	/^    	public Connection newConnection (ConnectionSpec spec) throws ClientRuntimeException, NotSupportedException;$/;"	m	interface:Connection.Factory
newConnection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionFactory.java	/^    public Connection newConnection (ConnectionSpec spec)$/;"	m	class:DefaultConnectionFactory
newInputStream	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^	protected final InputStream newInputStream (InputStream socketInputStream) throws IllegalArgumentException {$/;"	m	class:AsynchConnection
newInputStream	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^    protected InputStream newInputStream(InputStream socketInputStream) { $/;"	m	class:ConnectionBase
newInputStream	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^	protected final InputStream newInputStream (InputStream socketInputStream) throws IllegalArgumentException {$/;"	m	class:PipelineConnectionBase
newNumberKVSet	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^    public static KeyValueSet.Numbers newNumberKVSet() { return new BulkSetMapping.Numbers(); }$/;"	m	class:BulkSetMapping
newObjectKVSet	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^    public static KeyValueSet.Numbers newObjectKVSet() { return new BulkSetMapping.Numbers(); }$/;"	m	class:BulkSetMapping
newOutputStream	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^    protected OutputStream newOutputStream(OutputStream socketOutputStream) { return socketOutputStream; }$/;"	m	class:ConnectionBase
newProtocol	src/api/src/main/java/org/jredis/protocol/Protocol.java	/^		public Protocol newProtocol(ConnectionSpec connSpec) throws NotSupportedException;$/;"	m	interface:Protocol.Factory
newProtocol	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/DefaultProtocolFactory.java	/^    public Protocol newProtocol (ConnectionSpec connSpec) throws NotSupportedException {$/;"	m	class:DefaultProtocolFactory
newProtocolHandler	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^    protected Protocol newProtocolHandler () {$/;"	m	class:AsynchConnection
newProtocolHandler	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^    protected Protocol newProtocolHandler () {$/;"	m	class:ConnectionBase
newProtocolHandler	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^    protected Protocol newProtocolHandler () {$/;"	m	class:PipelineConnectionBase
newProviderInstance	src/ri/src/test/java/org/jredis/ri/ProviderTestBase.java	/^	protected abstract T newProviderInstance () ;$/;"	m	class:ProviderTestBase
newProviderInstance	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisAsynchClientTest.java	/^	protected JRedisFuture newProviderInstance () {$/;"	m	class:JRedisAsynchClientTest
newProviderInstance	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisClientTest.java	/^	protected JRedis newProviderInstance () {$/;"	m	class:JRedisClientTest
newProviderInstance	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisPipelineServiceTest.java	/^	protected JRedis newProviderInstance () {$/;"	m	class:JRedisPipelineServiceTest
newProviderInstance	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisPipelineTest.java	/^	protected JRedisFuture newProviderInstance () {$/;"	m	class:JRedisPipelineTest
newProviderInstance	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisServiceTest.java	/^	protected JRedis newProviderInstance () {$/;"	m	class:JRedisServiceTest
newSocketConnect	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	private final void newSocketConnect () $/;"	m	class:ConnectionBase	file:
newSpec	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	public static final ConnectionSpec newSpec ($/;"	m	class:DefaultConnectionSpec
newSpec	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^	public static final ConnectionSpec newSpec () $/;"	m	class:DefaultConnectionSpec
newStringKVSet	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^    public static KeyValueSet.Strings newStringKVSet() { return new BulkSetMapping.Strings(); }$/;"	m	class:BulkSetMapping
notNull	src/ri/src/main/java/org/jredis/ri/alphazero/support/Assert.java	/^	T notNull$/;"	m	class:Assert
notifyConnected	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^    protected void notifyConnected () {$/;"	m	class:ConnectionBase
notifyConnected	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^    protected void notifyConnected () {$/;"	m	class:PipelineConnectionBase
notifyDisconnected	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^    protected void notifyDisconnected () {$/;"	m	class:ConnectionBase
notifyDisconnected	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^    protected void notifyDisconnected () {$/;"	m	class:PipelineConnectionBase
notifyFaulted	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^    protected void notifyFaulted (String info) {$/;"	m	class:ConnectionBase
notifyListeners	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	final protected void notifyListeners(Connection.Event e) {$/;"	m	class:ConnectionBase
notifyShutingDown	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^    protected void notifyShutingDown () {$/;"	m	class:ConnectionBase
objectList	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final List<TestBean>	objectList = new ArrayList<TestBean>();$/;"	f	class:JRedisTestSuiteBase
objectvalue	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	private TestBean 	objectvalue;$/;"	f	class:JRedisTestSuiteBase	file:
offset	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		int			offset;$/;"	f	class:SynchProtocol.SynchResponseBase
offset	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^	private int   offset = 0;$/;"	f	class:FastBufferedInputStream	file:
onConnectionFault	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	protected final void onConnectionFault (String fault) throws ClientRuntimeException {$/;"	m	class:ConnectionBase
onConnectionFault	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	protected final void onConnectionFault (String fault, boolean raiseEx) throws ClientRuntimeException {$/;"	m	class:ConnectionBase
onEvent	src/api/src/main/java/org/jredis/connector/Connection.java	/^		public void onEvent(Connection.Event event);$/;"	m	interface:Connection.Listener
onEvent	src/ri/src/main/java/org/jredis/ri/alphazero/connection/HeartbeatJinn.java	/^    public void onEvent (Event event) {$/;"	m	class:HeartbeatJinn
onEvent	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^        public void onEvent (Event event) {$/;"	m	class:PipelineConnectionBase.ResponseHandler
onResponse	src/api/src/main/java/org/jredis/connector/RequestListener.java	/^	public void onResponse (Object context, Request request, Response response);$/;"	m	interface:RequestListener
onResponseHandlerError	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^    private void onResponseHandlerError (ClientRuntimeException cre, PendingRequest request) {$/;"	m	class:PipelineConnectionBase	file:
org.jredis	src/api/src/main/java/org/jredis/ClientRuntimeException.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/Codec.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/Event.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/JRedis.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/JRedisFuture.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/KeyValueSet.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/NotSupportedException.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/ObjectEncoding.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/ObjectInfo.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/ProviderException.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/Query.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/Redis.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/RedisException.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/RedisInfo.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/RedisType.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/Semantics.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/Sort.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/ZSetEntry.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/_specification.java	/^package org.jredis;$/;"	p
org.jredis	src/api/src/main/java/org/jredis/package-info.java	/^package org.jredis;/;"	p
org.jredis	src/api/src/test/java/org/jredis/TestBase.java	/^package org.jredis;$/;"	p
org.jredis.connector	src/api/src/main/java/org/jredis/connector/Connection.java	/^package org.jredis.connector;$/;"	p
org.jredis.connector	src/api/src/main/java/org/jredis/connector/ConnectionException.java	/^package org.jredis.connector;$/;"	p
org.jredis.connector	src/api/src/main/java/org/jredis/connector/ConnectionFault.java	/^package org.jredis.connector;$/;"	p
org.jredis.connector	src/api/src/main/java/org/jredis/connector/ConnectionReset.java	/^package org.jredis.connector;$/;"	p
org.jredis.connector	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^package org.jredis.connector;$/;"	p
org.jredis.connector	src/api/src/main/java/org/jredis/connector/FaultedConnection.java	/^package org.jredis.connector;$/;"	p
org.jredis.connector	src/api/src/main/java/org/jredis/connector/Message.java	/^package org.jredis.connector;$/;"	p
org.jredis.connector	src/api/src/main/java/org/jredis/connector/NotConnectedException.java	/^package org.jredis.connector;$/;"	p
org.jredis.connector	src/api/src/main/java/org/jredis/connector/RequestListener.java	/^package org.jredis.connector;$/;"	p
org.jredis.connector	src/api/src/main/java/org/jredis/connector/package-info.java	/^package org.jredis.connector;/;"	p
org.jredis.connector	src/api/src/test/java/org/jredis/connector/TestSpecElements.java	/^package org.jredis.connector;$/;"	p
org.jredis.protocol	src/api/src/main/java/org/jredis/protocol/BulkResponse.java	/^package org.jredis.protocol;$/;"	p
org.jredis.protocol	src/api/src/main/java/org/jredis/protocol/Command.java	/^package org.jredis.protocol;$/;"	p
org.jredis.protocol	src/api/src/main/java/org/jredis/protocol/CommandNotImplemented.java	/^package org.jredis.protocol;$/;"	p
org.jredis.protocol	src/api/src/main/java/org/jredis/protocol/MultiBulkResponse.java	/^package org.jredis.protocol;$/;"	p
org.jredis.protocol	src/api/src/main/java/org/jredis/protocol/Protocol.java	/^package org.jredis.protocol;$/;"	p
org.jredis.protocol	src/api/src/main/java/org/jredis/protocol/Request.java	/^package org.jredis.protocol;$/;"	p
org.jredis.protocol	src/api/src/main/java/org/jredis/protocol/Response.java	/^package org.jredis.protocol;$/;"	p
org.jredis.protocol	src/api/src/main/java/org/jredis/protocol/ResponseStatus.java	/^package org.jredis.protocol;$/;"	p
org.jredis.protocol	src/api/src/main/java/org/jredis/protocol/StatusResponse.java	/^package org.jredis.protocol;$/;"	p
org.jredis.protocol	src/api/src/main/java/org/jredis/protocol/ValueResponse.java	/^package org.jredis.protocol;$/;"	p
org.jredis.protocol	src/api/src/main/java/org/jredis/protocol/package-info.java	/^package org.jredis.protocol;/;"	p
org.jredis.protocol	src/api/src/test/java/org/jredis/protocol/TestCommand.java	/^package org.jredis.protocol;$/;"	p
org.jredis.resource	src/api/src/main/java/org/jredis/resource/Context.java	/^package org.jredis.resource;$/;"	p
org.jredis.resource	src/api/src/main/java/org/jredis/resource/Resource.java	/^package org.jredis.resource;$/;"	p
org.jredis.resource	src/api/src/main/java/org/jredis/resource/ResourceException.java	/^package org.jredis.resource;$/;"	p
org.jredis.resource	src/api/src/main/java/org/jredis/resource/_specification.java	/^package org.jredis.resource;$/;"	p
org.jredis.resource	src/api/src/main/java/org/jredis/resource/package-info.java	/^package org.jredis.resource; /;"	p
org.jredis.ri	src/ri/src/main/java/org/jredis/ri/RI.java	/^package org.jredis.ri;$/;"	p
org.jredis.ri	src/ri/src/main/java/org/jredis/ri/package-info.java	/^package org.jredis.ri;/;"	p
org.jredis.ri	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^package org.jredis.ri;$/;"	p
org.jredis.ri	src/ri/src/test/java/org/jredis/ri/ProviderTestBase.java	/^package org.jredis.ri;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisAsynchClient.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisClient.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipeline.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipelineService.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/Pair.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/SynchJRedisBase.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/ZSetEntryImpl.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/_specification.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/main/java/org/jredis/ri/alphazero/package-info.java	/^package org.jredis.ri.alphazero;/;"	p
org.jredis.ri.alphazero	src/ri/src/test/java/org/jredis/ri/alphazero/ConcurrentJRedisProviderTestsBase.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisAsynchClientTest.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisClientTest.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisPipelineServiceTest.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisPipelineTest.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisServiceTest.java	/^package org.jredis.ri.alphazero;$/;"	p
org.jredis.ri.alphazero.connection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^package org.jredis.ri.alphazero.connection;$/;"	p
org.jredis.ri.alphazero.connection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchPipelineConnection.java	/^package org.jredis.ri.alphazero.connection;$/;"	p
org.jredis.ri.alphazero.connection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^package org.jredis.ri.alphazero.connection;$/;"	p
org.jredis.ri.alphazero.connection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionFactory.java	/^package org.jredis.ri.alphazero.connection;$/;"	p
org.jredis.ri.alphazero.connection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^package org.jredis.ri.alphazero.connection;$/;"	p
org.jredis.ri.alphazero.connection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/HeartbeatJinn.java	/^package org.jredis.ri.alphazero.connection;$/;"	p
org.jredis.ri.alphazero.connection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^package org.jredis.ri.alphazero.connection;$/;"	p
org.jredis.ri.alphazero.connection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^package org.jredis.ri.alphazero.connection;$/;"	p
org.jredis.ri.alphazero.connection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/SynchConnection.java	/^package org.jredis.ri.alphazero.connection;$/;"	p
org.jredis.ri.alphazero.connection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/SynchPipelineConnection.java	/^package org.jredis.ri.alphazero.connection;$/;"	p
org.jredis.ri.alphazero.connection	src/ri/src/main/java/org/jredis/ri/alphazero/connection/UnexpectedEOFException.java	/^package org.jredis.ri.alphazero.connection;$/;"	p
org.jredis.ri.alphazero.protocol	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ConcurrentSynchProtocol.java	/^package org.jredis.ri.alphazero.protocol;$/;"	p
org.jredis.ri.alphazero.protocol	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/DefaultProtocolFactory.java	/^package org.jredis.ri.alphazero.protocol;$/;"	p
org.jredis.ri.alphazero.protocol	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^package org.jredis.ri.alphazero.protocol;$/;"	p
org.jredis.ri.alphazero.protocol	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^package org.jredis.ri.alphazero.protocol;$/;"	p
org.jredis.ri.alphazero.protocol	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^package org.jredis.ri.alphazero.protocol;$/;"	p
org.jredis.ri.alphazero.protocol	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/VirtualResponse.java	/^package org.jredis.ri.alphazero.protocol;$/;"	p
org.jredis.ri.alphazero.semantics	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultKeyCodec.java	/^package org.jredis.ri.alphazero.semantics;$/;"	p
org.jredis.ri.alphazero.semantics	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultStringCodec.java	/^package org.jredis.ri.alphazero.semantics;$/;"	p
org.jredis.ri.alphazero.semantics	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/GZipCompressedStringCodec.java	/^package org.jredis.ri.alphazero.semantics;$/;"	p
org.jredis.ri.alphazero.support	src/ri/src/main/java/org/jredis/ri/alphazero/support/Assert.java	/^package org.jredis.ri.alphazero.support;$/;"	p
org.jredis.ri.alphazero.support	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^package org.jredis.ri.alphazero.support;$/;"	p
org.jredis.ri.alphazero.support	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^package org.jredis.ri.alphazero.support;$/;"	p
org.jredis.ri.alphazero.support	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^package org.jredis.ri.alphazero.support;$/;"	p
org.jredis.ri.alphazero.support	src/ri/src/main/java/org/jredis/ri/alphazero/support/GZip.java	/^package org.jredis.ri.alphazero.support;$/;"	p
org.jredis.ri.alphazero.support	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^package org.jredis.ri.alphazero.support;$/;"	p
org.jredis.ri.alphazero.support	src/ri/src/main/java/org/jredis/ri/alphazero/support/Signal.java	/^package org.jredis.ri.alphazero.support;$/;"	p
org.jredis.ri.alphazero.support	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^package org.jredis.ri.alphazero.support;$/;"	p
org.jredis.ri.alphazero.support	src/ri/src/main/java/org/jredis/ri/alphazero/support/package-info.java	/^package org.jredis.ri.alphazero.support;/;"	p
org.jredis.ri.alphazero.support	src/ri/src/test/java/org/jredis/ri/alphazero/support/ConvertTest.java	/^package org.jredis.ri.alphazero.support;$/;"	p
org.jredis.ri.alphazero.support	src/ri/src/test/java/org/jredis/ri/alphazero/support/GZipTest.java	/^package org.jredis.ri.alphazero.support;$/;"	p
org.jredis.semantics	src/api/src/main/java/org/jredis/semantics/BasicCodecManager.java	/^package org.jredis.semantics;$/;"	p
org.jredis.semantics	src/api/src/main/java/org/jredis/semantics/CodecManager.java	/^package org.jredis.semantics;$/;"	p
org.jredis.semantics	src/api/src/main/java/org/jredis/semantics/KeyCodec.java	/^package org.jredis.semantics;$/;"	p
org.jredis.semantics	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^package org.jredis.semantics;$/;"	p
org.jredis.semantics	src/api/src/main/java/org/jredis/semantics/SemanticQuery.java	/^package org.jredis.semantics;$/;"	p
org.jredis.semantics	src/api/src/main/java/org/jredis/semantics/SemanticSort.java	/^package org.jredis.semantics;$/;"	p
org.jredis.semantics	src/api/src/main/java/org/jredis/semantics/Semantics.java	/^package org.jredis.semantics;$/;"	p
org.jredis.semantics	src/api/src/main/java/org/jredis/semantics/package-info.java	/^package org.jredis.semantics;/;"	p
outstream	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	private OutputStream	    outstream;$/;"	f	class:ConnectionBase	file:
packValueResult	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^        private static List<byte[]> packValueResult(long number) {$/;"	m	class:JRedisFutureSupport.FutureSortStoreResp	file:
password	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected String password = "jredis";$/;"	f	class:JRedisTestSuiteBase
patternA	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final String			patternA = "_AAA_";$/;"	f	class:JRedisTestSuiteBase
patternList	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final List<String>	patternList = new ArrayList<String>();$/;"	f	class:JRedisTestSuiteBase
pendingQueue	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^	private BlockingQueue<PendingRequest>	pendingQueue;$/;"	f	class:AsynchConnection	file:
pendingQuit	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^	private boolean					pendingQuit = false;$/;"	f	class:PipelineConnectionBase	file:
pendingRequest	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^		final protected Future<Response> pendingRequest;$/;"	f	class:JRedisFutureSupport.FutureResultBase
pendingResponseQueue	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^	private BlockingQueue<PendingRequest>	pendingResponseQueue;$/;"	f	class:PipelineConnectionBase	file:
period	src/ri/src/main/java/org/jredis/ri/alphazero/connection/HeartbeatJinn.java	/^	private final int period;$/;"	f	class:HeartbeatJinn	file:
ping	src/api/src/main/java/org/jredis/JRedis.java	/^	public JRedis ping () throws RedisException;$/;"	m	interface:JRedis
ping	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> ping ();$/;"	m	interface:JRedisFuture
ping	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public JRedis ping () throws RedisException;$/;"	m	interface:SemanticJRedis
ping	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus ping() {$/;"	m	class:JRedisFutureSupport
ping	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public JRedis ping() throws RedisException {$/;"	m	class:JRedisSupport
port	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected int port = 6379;$/;"	f	class:JRedisTestSuiteBase
prepTestDBs	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final void prepTestDBs() {$/;"	m	class:JRedisTestSuiteBase
problem	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public static final void problem (String msg) { _error (Category.PROBLEM, msg); }$/;"	m	class:Log
problem	src/ri/src/main/java/org/jredis/ri/alphazero/support/Log.java	/^	public static final void problem (String msg, Object...args) { _error (Category.PROBLEM, msg, args); }$/;"	m	class:Log
process_id	src/api/src/main/java/org/jredis/RedisInfo.java	/^	process_id,$/;"	e	enum:RedisInfo	file:
processerThread	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^	private Thread 					processerThread;$/;"	f	class:AsynchConnection	file:
processor	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^	private RequestProcessor	   processor;$/;"	f	class:AsynchConnection	file:
protocol	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	protected Protocol 			protocol;$/;"	f	class:ConnectionBase
provider	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultKeyCodec.java	/^	public static final KeyCodec provider() { return instance; }$/;"	m	class:DefaultKeyCodec
provider	src/ri/src/test/java/org/jredis/ri/ProviderTestBase.java	/^	protected T provider = null;$/;"	f	class:ProviderTestBase
queueRequest	src/api/src/main/java/org/jredis/connector/Connection.java	/^	public Future<Response> queueRequest (Command cmd,  byte[]...args) throws ClientRuntimeException, ProviderException;$/;"	m	interface:Connection
queueRequest	src/api/src/main/java/org/jredis/connector/FaultedConnection.java	/^	public Future<Response> queueRequest(Command cmd, byte[]... args)$/;"	m	class:FaultedConnection
queueRequest	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisAsynchClient.java	/^	protected  Future<Response> queueRequest (Command cmd, byte[]...args) throws ClientRuntimeException, ProviderException {$/;"	m	class:JRedisAsynchClient
queueRequest	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	abstract protected  Future<Response> queueRequest (Command cmd, byte[]...args) throws ClientRuntimeException, ProviderException; $/;"	m	class:JRedisFutureSupport
queueRequest	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipeline.java	/^	protected  Future<Response> queueRequest (Command cmd, byte[]...args) throws ClientRuntimeException, ProviderException {$/;"	m	class:JRedisPipeline
queueRequest	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^    public Future<Response> queueRequest (Command cmd, byte[]... args)$/;"	m	class:AsynchConnection
queueRequest	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	public Future<Response> queueRequest(Command cmd, byte[]... args) $/;"	m	class:ConnectionBase
queueRequest	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^    public final Future<Response> queueRequest (Command cmd, byte[]... args) $/;"	m	class:PipelineConnectionBase
quit	src/api/src/main/java/org/jredis/JRedis.java	/^	public void quit ();$/;"	m	interface:JRedis
quit	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> quit ();$/;"	m	interface:JRedisFuture
quit	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public void quit ();$/;"	m	interface:SemanticJRedis
quit	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus quit()  {$/;"	m	class:JRedisFutureSupport
quit	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void quit()  {$/;"	m	class:JRedisSupport
random	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final Random random = new Random(System.currentTimeMillis());$/;"	f	class:JRedisTestSuiteBase
random	src/ri/src/test/java/org/jredis/ri/alphazero/support/GZipTest.java	/^	final static Random 		random = new Random(System.currentTimeMillis());$/;"	f	class:GZipTest
randomkey	src/api/src/main/java/org/jredis/JRedis.java	/^	public String randomkey() throws RedisException;$/;"	m	interface:JRedis
randomkey	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<String> randomkey();$/;"	m	interface:JRedisFuture
randomkey	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public String randomkey() throws RedisException;$/;"	m	interface:SemanticJRedis
randomkey	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<String> randomkey() {$/;"	m	class:JRedisFutureSupport
randomkey	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public String randomkey() throws RedisException {$/;"	m	class:JRedisSupport
read	src/api/src/main/java/org/jredis/connector/Message.java	/^	public void	read (InputStream    in) throws ClientRuntimeException, ProviderException; $/;"	m	interface:Message
read	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^		public void read(InputStream in) throws ClientRuntimeException, ProviderException {$/;"	m	class:ProtocolBase.StreamBufferRequest
read	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		public void read(InputStream in) throws ClientRuntimeException, ProviderException {$/;"	m	class:SynchProtocol.SynchBulkResponse
read	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		public void read(InputStream in) throws ClientRuntimeException, ProviderException {$/;"	m	class:SynchProtocol.SynchLineResponse
read	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		public void read(InputStream in) throws ClientRuntimeException, ProviderException {$/;"	m	class:SynchProtocol.SynchMultiBulkResponse
read	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/VirtualResponse.java	/^	public void read(InputStream in) throws ClientRuntimeException, ProviderException { return;}$/;"	m	class:VirtualResponse
read	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^	public int read () throws IOException { $/;"	m	class:FastBufferedInputStream
read	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^	public int read (byte[] b) throws IOException { return read (b, 0, b.length); }$/;"	m	class:FastBufferedInputStream
read	src/ri/src/main/java/org/jredis/ri/alphazero/support/FastBufferedInputStream.java	/^	public int read (byte[] b, int off, int len) throws IOException {$/;"	m	class:FastBufferedInputStream
readBulkData	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		public final byte[] readBulkData (InputStream in, int length)$/;"	m	class:SynchProtocol.SynchMultiLineResponseBase
readControlLine	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		int readControlLine (InputStream in, boolean checkForError, byte ctlByte){$/;"	m	class:SynchProtocol.SynchMultiLineResponseBase
readSingleLineResponse	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		void readSingleLineResponse (InputStream in) {$/;"	m	class:SynchProtocol.SynchResponseBase
rebind	src/api/src/main/java/org/jredis/resource/Context.java	/^	public void rebind   (String name, Object value);$/;"	m	interface:Context
reconnect	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	protected final void reconnect () {$/;"	m	class:ConnectionBase
redis_version	src/api/src/main/java/org/jredis/RedisInfo.java	/^	redis_version,$/;"	e	enum:RedisInfo	file:
register	src/api/src/main/java/org/jredis/semantics/BasicCodecManager.java	/^	public <T> boolean register(Codec<T> code, Class<T> type) {$/;"	m	class:BasicCodecManager
register	src/api/src/main/java/org/jredis/semantics/CodecManager.java	/^	public <T>	boolean 	register (Codec<T> code, Class<T> type);$/;"	m	interface:CodecManager
releaseLock	src/ri/src/main/java/org/jredis/ri/alphazero/connection/SynchConnection.java	/^    private void releaseLock() {$/;"	m	class:SynchConnection	file:
removeListener	src/api/src/main/java/org/jredis/connector/Connection.java	/^	public boolean removeListener(Listener connListener);$/;"	m	interface:Connection
removeListener	src/api/src/main/java/org/jredis/connector/FaultedConnection.java	/^    final public boolean removeListener (Listener connListener) {$/;"	m	class:FaultedConnection
removeListener	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	final public boolean removeListener(Listener connListener){$/;"	m	class:ConnectionBase
rename	src/api/src/main/java/org/jredis/JRedis.java	/^	public void rename (String oldkey, String newkey) throws RedisException;$/;"	m	interface:JRedis
rename	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> rename (String oldkey, String newkey);$/;"	m	interface:JRedisFuture
rename	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public String rename (String oldkey, String newkey) throws RedisException;$/;"	m	interface:SemanticJRedis
rename	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus rename(String oldkey, String newkey) {$/;"	m	class:JRedisFutureSupport
rename	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void rename(String oldkey, String newkey) throws RedisException {$/;"	m	class:JRedisSupport
renamenx	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean renamenx (String oldkey, String brandnewkey) throws RedisException;$/;"	m	interface:JRedis
renamenx	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> renamenx (String oldkey, String brandnewkey);$/;"	m	interface:JRedisFuture
renamenx	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public boolean renamenx (String oldkey, String brandnewkey) throws RedisException;$/;"	m	interface:SemanticJRedis
renamenx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> renamenx(String oldkey, String newkey){$/;"	m	class:JRedisFutureSupport
renamenx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean renamenx(String oldkey, String newkey) throws RedisException{$/;"	m	class:JRedisSupport
request	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^    final Request	request;$/;"	f	class:PendingRequest
requestType	src/api/src/main/java/org/jredis/protocol/Command.java	/^	public final RequestType requestType;$/;"	f	class:Command
reset	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^		public void reset (ByteArrayOutputStream	buffer) {$/;"	m	class:ProtocolBase.StreamBufferRequest
reset	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		protected void reset (Command cmd){$/;"	m	class:SynchProtocol.SynchBulkResponse
reset	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		protected void reset (Command cmd){$/;"	m	class:SynchProtocol.SynchLineResponse
reset	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		protected void reset (Command cmd){$/;"	m	class:SynchProtocol.SynchMultiBulkResponse
reset	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		protected void reset (Command cmd, Type type) {$/;"	m	class:SynchProtocol.SynchResponseBase
reset	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		protected void reset (Command cmd, ValueType flavor){$/;"	m	class:SynchProtocol.SynchLineResponse
respClass	src/api/src/main/java/org/jredis/protocol/Command.java	/^    	public Class<? extends Response> respClass;$/;"	f	class:Command.ResponseType
respHandler	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^	private ResponseHandler	    	respHandler;$/;"	f	class:PipelineConnectionBase	file:
respHandlerThread	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^	private Thread 					respHandlerThread;$/;"	f	class:PipelineConnectionBase	file:
response	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	Response response;$/;"	f	class:PendingRequest
responseType	src/api/src/main/java/org/jredis/protocol/Command.java	/^	public final ResponseType responseType;$/;"	f	class:Command
role	src/api/src/main/java/org/jredis/RedisInfo.java	/^	role$/;"	e	enum:RedisInfo	file:
rpop	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] rpop (String listKey) throws RedisException;$/;"	m	interface:JRedis
rpop	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> rpop (String listKey);$/;"	m	interface:JRedisFuture
rpop	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public T rpop (String listKey) throws RedisException;$/;"	m	interface:SemanticJRedis
rpop	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> rpop(String key) {$/;"	m	class:JRedisFutureSupport
rpop	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] rpop(String key) throws RedisException {$/;"	m	class:JRedisSupport
rpoplpush	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] rpoplpush (String srcList, String destList) throws RedisException;$/;"	m	interface:JRedis
rpoplpush	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> rpoplpush (String srcList, String destList);$/;"	m	interface:JRedisFuture
rpoplpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureByteArray rpoplpush (String srcList, String destList)  {$/;"	m	class:JRedisFutureSupport
rpoplpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] rpoplpush(String srcList, String destList) $/;"	m	class:JRedisSupport
rpush	src/api/src/main/java/org/jredis/JRedis.java	/^		   void rpush (String listkey, T object) throws RedisException;$/;"	m	interface:JRedis
rpush	src/api/src/main/java/org/jredis/JRedis.java	/^	public void rpush (String listkey, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
rpush	src/api/src/main/java/org/jredis/JRedis.java	/^	public void rpush (String listkey, String stringValue) throws RedisException;$/;"	m	interface:JRedis
rpush	src/api/src/main/java/org/jredis/JRedis.java	/^	public void rpush (String listkey, byte[] value) throws RedisException;$/;"	m	interface:JRedis
rpush	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<ResponseStatus> rpush (String listkey, T object);$/;"	m	interface:JRedisFuture
rpush	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> rpush (String listkey, Number numberValue);$/;"	m	interface:JRedisFuture
rpush	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> rpush (String listkey, String stringValue);$/;"	m	interface:JRedisFuture
rpush	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> rpush (String listkey, byte[] value);$/;"	m	interface:JRedisFuture
rpush	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public void rpush (String listkey, T value) throws RedisException;$/;"	m	interface:SemanticJRedis
rpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> FutureStatus rpush (String key, T value)$/;"	m	class:JRedisFutureSupport
rpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus rpush(String key, Number value) {$/;"	m	class:JRedisFutureSupport
rpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus rpush(String key, String value) {$/;"	m	class:JRedisFutureSupport
rpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus rpush(String key, byte[] value)  {$/;"	m	class:JRedisFutureSupport
rpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> void rpush (String key, T value) throws RedisException$/;"	m	class:JRedisSupport
rpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void rpush(String key, Number value) throws RedisException {$/;"	m	class:JRedisSupport
rpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void rpush(String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
rpush	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void rpush(String key, byte[] value) $/;"	m	class:JRedisSupport
run	src/ri/src/main/java/org/jredis/ri/alphazero/connection/AsynchConnection.java	/^        public void run () {$/;"	m	class:AsynchConnection.RequestProcessor
run	src/ri/src/main/java/org/jredis/ri/alphazero/connection/HeartbeatJinn.java	/^	public void run () {$/;"	m	class:HeartbeatJinn
run	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^        public void run () {$/;"	m	class:PipelineConnectionBase.ResponseHandler
run_flag	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^    	private final AtomicBoolean run_flag;$/;"	f	class:PipelineConnectionBase.ResponseHandler	file:
sadd	src/api/src/main/java/org/jredis/JRedis.java	/^		   boolean sadd (String setkey, T object) throws RedisException;$/;"	m	interface:JRedis
sadd	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean sadd (String setkey, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
sadd	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean sadd (String setkey, String stringValue) throws RedisException;$/;"	m	interface:JRedis
sadd	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean sadd (String setkey, byte[] member) throws RedisException;$/;"	m	interface:JRedis
sadd	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<Boolean> sadd (String setkey, T object);$/;"	m	interface:JRedisFuture
sadd	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> sadd (String setkey, Number numberValue);$/;"	m	interface:JRedisFuture
sadd	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> sadd (String setkey, String stringValue);$/;"	m	interface:JRedisFuture
sadd	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> sadd (String setkey, byte[] member);$/;"	m	interface:JRedisFuture
sadd	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public boolean sadd (String setkey, T member) throws RedisException;$/;"	m	interface:SemanticJRedis
sadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> Future<Boolean> sadd (String key, T value)$/;"	m	class:JRedisFutureSupport
sadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> sadd (String key, Number value) {$/;"	m	class:JRedisFutureSupport
sadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> sadd (String key, String value) {$/;"	m	class:JRedisFutureSupport
sadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> sadd(String key, byte[] member) $/;"	m	class:JRedisFutureSupport
sadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> boolean sadd (String key, T value) throws RedisException$/;"	m	class:JRedisSupport
sadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean sadd (String key, Number value) throws RedisException {$/;"	m	class:JRedisSupport
sadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean sadd (String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
sadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean sadd(String key, byte[] member) $/;"	m	class:JRedisSupport
save	src/api/src/main/java/org/jredis/JRedis.java	/^	public void save() throws RedisException;$/;"	m	interface:JRedis
save	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> save();$/;"	m	interface:JRedisFuture
save	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public void save() throws RedisException;$/;"	m	interface:SemanticJRedis
save	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus save() $/;"	m	class:JRedisFutureSupport
save	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void save() $/;"	m	class:JRedisSupport
scard	src/api/src/main/java/org/jredis/JRedis.java	/^	public long scard (String setKey) throws RedisException;	$/;"	m	interface:JRedis
scard	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> scard (String setKey);	$/;"	m	interface:JRedisFuture
scard	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public long scard (String setKey) throws RedisException;	$/;"	m	interface:SemanticJRedis
scard	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> scard(String key) {$/;"	m	class:JRedisFutureSupport
scard	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long scard(String key) throws RedisException {$/;"	m	class:JRedisSupport
sdiff	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<byte[]> sdiff (String set1, String...sets) throws RedisException;$/;"	m	interface:JRedis
sdiff	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<byte[]>> sdiff (String set1, String...sets);$/;"	m	interface:JRedisFuture
sdiff	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<byte[]>> sdiff(String set1, String... sets) {$/;"	m	class:JRedisFutureSupport
sdiff	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<byte[]> sdiff(String set1, String... sets) throws RedisException {$/;"	m	class:JRedisSupport
sdiffstore	src/api/src/main/java/org/jredis/JRedis.java	/^	public void sdiffstore (String destSetKey, String...sets) throws RedisException;$/;"	m	interface:JRedis
sdiffstore	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> sdiffstore (String destSetKey, String...sets);$/;"	m	interface:JRedisFuture
sdiffstore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus sdiffstore(String dest, String... sets) {$/;"	m	class:JRedisFutureSupport
sdiffstore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void sdiffstore(String dest, String... sets) throws RedisException {$/;"	m	class:JRedisSupport
seekToCRLF	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		void seekToCRLF (InputStream in){$/;"	m	class:SynchProtocol.SynchMultiLineResponseBase
select	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public JRedis select (int index) throws RedisException;$/;"	m	interface:SemanticJRedis
serialVersionUID	src/api/src/main/java/org/jredis/ClientRuntimeException.java	/^	private static final long	serialVersionUID	= _specification.Version.major;$/;"	f	class:ClientRuntimeException	file:
serialVersionUID	src/api/src/main/java/org/jredis/Event.java	/^    private static final long serialVersionUID = 1L;$/;"	f	class:Event	file:
serialVersionUID	src/api/src/main/java/org/jredis/NotSupportedException.java	/^	private static final long serialVersionUID = _specification.Version.major;$/;"	f	class:NotSupportedException	file:
serialVersionUID	src/api/src/main/java/org/jredis/ProviderException.java	/^	private static final long	serialVersionUID	= _specification.Version.major;$/;"	f	class:ProviderException	file:
serialVersionUID	src/api/src/main/java/org/jredis/RedisException.java	/^	private static final long	serialVersionUID = version;$/;"	f	class:RedisException	file:
serialVersionUID	src/api/src/main/java/org/jredis/connector/ConnectionException.java	/^	private static final long serialVersionUID = _specification.Version.major;$/;"	f	class:ConnectionException	file:
serialVersionUID	src/api/src/main/java/org/jredis/connector/ConnectionFault.java	/^	private static final long serialVersionUID = _specification.Version.major;$/;"	f	class:ConnectionFault	file:
serialVersionUID	src/api/src/main/java/org/jredis/connector/ConnectionReset.java	/^	private static final long serialVersionUID = _specification.Version.major;$/;"	f	class:ConnectionReset	file:
serialVersionUID	src/api/src/main/java/org/jredis/connector/NotConnectedException.java	/^	private static final long	serialVersionUID	= _specification.Version.major;$/;"	f	class:NotConnectedException	file:
serialVersionUID	src/api/src/main/java/org/jredis/protocol/CommandNotImplemented.java	/^	private static final long serialVersionUID = _specification.Version.major;$/;"	f	class:CommandNotImplemented	file:
serialVersionUID	src/api/src/main/java/org/jredis/resource/ResourceException.java	/^	private static final long serialVersionUID = _specification.Version.major;$/;"	f	class:ResourceException	file:
serialVersionUID	src/ri/src/main/java/org/jredis/ri/alphazero/connection/UnexpectedEOFException.java	/^	private static final long serialVersionUID = _specification.Version.major;$/;"	f	class:UnexpectedEOFException	file:
serialVersionUID	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		private static final long	serialVersionUID	= 4457509786469904810L;$/;"	f	class:JRedisTestSuiteBase.TestBean	file:
serializedLength	src/api/src/main/java/org/jredis/ObjectInfo.java	/^	private final long serializedLength;$/;"	f	class:ObjectInfo	file:
serviceLock	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^	private Object					serviceLock = new Object();$/;"	f	class:PipelineConnectionBase	file:
serviceRequest	src/api/src/main/java/org/jredis/connector/Connection.java	/^	public Response serviceRequest (Command cmd, byte[]...args) throws RedisException, ClientRuntimeException, ProviderException; $/;"	m	interface:Connection
serviceRequest	src/api/src/main/java/org/jredis/connector/FaultedConnection.java	/^	public Response serviceRequest(Command cmd, byte[]... args) throws RedisException, ClientRuntimeException,$/;"	m	class:FaultedConnection
serviceRequest	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisClient.java	/^	protected Response serviceRequest(Command cmd, byte[]... args)$/;"	m	class:JRedisClient
serviceRequest	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipelineService.java	/^	protected Response serviceRequest (Command cmd, byte[]... args) throws RedisException, ClientRuntimeException, ProviderException {$/;"	m	class:JRedisPipelineService
serviceRequest	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	protected Response serviceRequest(Command cmd, byte[]... args)$/;"	m	class:JRedisService
serviceRequest	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	protected abstract Response serviceRequest (Command cmd, byte[]...args) throws RedisException, ClientRuntimeException, ProviderException; $/;"	m	class:JRedisSupport
serviceRequest	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	public Response serviceRequest(Command cmd, byte[]... args)$/;"	m	class:ConnectionBase
serviceRequest	src/ri/src/main/java/org/jredis/ri/alphazero/connection/SynchConnection.java	/^	public Response serviceRequest (Command cmd, byte[]... args) $/;"	m	class:SynchConnection
serviceRequest	src/ri/src/main/java/org/jredis/ri/alphazero/connection/SynchPipelineConnection.java	/^    public Response serviceRequest (Command cmd, byte[]... args)$/;"	m	class:SynchPipelineConnection
serviceSuiteParametersInit	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisServiceTest.java	/^	public void serviceSuiteParametersInit($/;"	m	class:JRedisServiceTest
set	src/api/src/main/java/org/jredis/JRedis.java	/^		   void set (String key, T object) throws RedisException;$/;"	m	interface:JRedis
set	src/api/src/main/java/org/jredis/JRedis.java	/^	public void set (String key, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
set	src/api/src/main/java/org/jredis/JRedis.java	/^	public void set (String key, String stringValue) throws RedisException;$/;"	m	interface:JRedis
set	src/api/src/main/java/org/jredis/JRedis.java	/^	public void set (String key, byte[] value) throws RedisException;$/;"	m	interface:JRedis
set	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		   Future<ResponseStatus> set (String key, T object);$/;"	m	interface:JRedisFuture
set	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> set (String key, Number numberValue);$/;"	m	interface:JRedisFuture
set	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> set (String key, String stringValue);$/;"	m	interface:JRedisFuture
set	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> set (String key, byte[] value);$/;"	m	interface:JRedisFuture
set	src/api/src/main/java/org/jredis/RedisType.java	/^	set,$/;"	e	enum:RedisType	file:
set	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public void set (String key, T value) throws RedisException;$/;"	m	interface:SemanticJRedis
set	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> FutureStatus set (String key, T value)$/;"	m	class:JRedisFutureSupport
set	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus set(String key, Number value) {$/;"	m	class:JRedisFutureSupport
set	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus set(String key, String value) {$/;"	m	class:JRedisFutureSupport
set	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus set(String key, byte[] value) {$/;"	m	class:JRedisFutureSupport
set	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> void set (String key, T value) throws RedisException$/;"	m	class:JRedisSupport
set	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void set(String key, Number value) throws RedisException {$/;"	m	class:JRedisSupport
set	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void set(String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
set	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void set(String key, byte[] value) throws RedisException {$/;"	m	class:JRedisSupport
set1	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final Set<String>		set1 = new HashSet<String> ();$/;"	f	class:JRedisTestSuiteBase
set2	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final Set<String>		set2 = new HashSet<String> ();$/;"	f	class:JRedisTestSuiteBase
setAddress	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setAddress (InetAddress address) {$/;"	m	class:ConnectionSpec.RefImpl
setAddress	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public ConnectionSpec setAddress(InetAddress address);$/;"	m	interface:ConnectionSpec
setCRE	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	final void setCRE (ClientRuntimeException cre){$/;"	m	class:PendingRequest
setConnection	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisClient.java	/^	protected final void setConnection (Connection connection)  {$/;"	m	class:JRedisClient
setConnection	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipelineService.java	/^	protected final void setConnection (Connection connection) {$/;"	m	class:JRedisPipelineService
setConnection	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisService.java	/^	protected void setConnection(Connection connection) {$/;"	m	class:JRedisService
setConnection	src/ri/src/main/java/org/jredis/ri/alphazero/SynchJRedisBase.java	/^	protected abstract void setConnection (Connection connection) ;$/;"	m	class:SynchJRedisBase
setConnectionFlag	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setConnectionFlag(Connection.Flag flag, Boolean value){$/;"	m	class:ConnectionSpec.RefImpl
setConnectionFlag	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public ConnectionSpec setConnectionFlag(Connection.Flag flag, Boolean value);$/;"	m	interface:ConnectionSpec
setConnectionProperty	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setConnectionProperty(Property prop, Object value){$/;"	m	class:ConnectionSpec.RefImpl
setConnectionProperty	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public ConnectionSpec setConnectionProperty(Property prop, Object value);$/;"	m	interface:ConnectionSpec
setContext	src/api/src/main/java/org/jredis/resource/Resource.java	/^	public void setContext (Context context) throws ResourceException;$/;"	m	interface:Resource
setContext	src/ri/src/main/java/org/jredis/ri/alphazero/SynchJRedisBase.java	/^	public final void setContext(Context context) throws ResourceException {$/;"	m	class:SynchJRedisBase
setCreated_on	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		public final void setCreated_on(long created_on) {this.named_on = created_on;}$/;"	m	class:JRedisTestSuiteBase.TestBean
setCredentials	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setCredentials (String credentials) {$/;"	m	class:ConnectionSpec.RefImpl
setCredentials	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setCredentials (byte[] credentials) {$/;"	m	class:ConnectionSpec.RefImpl
setCredentials	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public ConnectionSpec setCredentials(String credentials);$/;"	m	interface:ConnectionSpec
setCredentials	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public ConnectionSpec setCredentials(byte[] credentials);$/;"	m	interface:ConnectionSpec
setData	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		public final void setData(byte[] data) { this.data = data;}$/;"	m	class:JRedisTestSuiteBase.TestBean
setDatabase	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setDatabase (int database) {$/;"	m	class:ConnectionSpec.RefImpl
setDatabase	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public ConnectionSpec setDatabase(int database);$/;"	m	interface:ConnectionSpec
setDefaultValues	src/ri/src/main/java/org/jredis/ri/alphazero/connection/DefaultConnectionSpec.java	/^    private void setDefaultValues () {$/;"	m	class:DefaultConnectionSpec	file:
setHeartbeat	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setHeartbeat(int seconds) {$/;"	m	class:ConnectionSpec.RefImpl
setHeartbeat	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^    public ConnectionSpec setHeartbeat(int seconds);$/;"	m	interface:ConnectionSpec
setKeyCodec	src/api/src/main/java/org/jredis/Semantics.java	/^	public <T> Semantics setKeyCodec(Class<T> keyClass, Codec<T> keyCodec);$/;"	m	interface:Semantics
setMaxConnectWait	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setMaxConnectWait(int cnt) {$/;"	m	class:ConnectionSpec.RefImpl
setMaxConnectWait	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public ConnectionSpec setMaxConnectWait(int cnt);$/;"	m	interface:ConnectionSpec
setModality	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setModality (Modality modality) {$/;"	m	class:ConnectionSpec.RefImpl
setModality	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public ConnectionSpec setModality (Modality modality);$/;"	m	interface:ConnectionSpec
setName	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		public final void setName(String name) {this.name = name;}$/;"	m	class:JRedisTestSuiteBase.TestBean
setParam	src/api/src/main/java/org/jredis/resource/Context.java	/^	public void setParam (String key, String value);$/;"	m	interface:Context
setPort	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setPort (int port) {$/;"	m	class:ConnectionSpec.RefImpl
setPort	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public ConnectionSpec setPort(int port);$/;"	m	interface:ConnectionSpec
setProtocolHandler	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	final protected void setProtocolHandler(Protocol protocolHandler) {$/;"	m	class:ConnectionBase
setProvider	src/ri/src/test/java/org/jredis/ri/ProviderTestBase.java	/^	public void setProvider () {$/;"	m	class:ProviderTestBase
setProviderInstance	src/ri/src/test/java/org/jredis/ri/ProviderTestBase.java	/^	private final void setProviderInstance (T provider) {$/;"	m	class:ProviderTestBase	file:
setReconnectCnt	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setReconnectCnt (int reconnectCnt) {$/;"	m	class:ConnectionSpec.RefImpl
setReconnectCnt	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public ConnectionSpec setReconnectCnt(int cnt);$/;"	m	interface:ConnectionSpec
setResponse	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PendingRequest.java	/^	final void setResponse(Response response){$/;"	m	class:PendingRequest
setSocketFlag	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setSocketFlag(Connection.Socket.Flag flag, Boolean value){$/;"	m	class:ConnectionSpec.RefImpl
setSocketFlag	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public ConnectionSpec setSocketFlag(Connection.Socket.Flag flag, Boolean value);$/;"	m	interface:ConnectionSpec
setSocketProperty	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		final public ConnectionSpec setSocketProperty(Connection.Socket.Property property, Integer value){$/;"	m	class:ConnectionSpec.RefImpl
setSocketProperty	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^	public ConnectionSpec setSocketProperty(Connection.Socket.Property property, Integer value);$/;"	m	interface:ConnectionSpec
setValueCodec	src/api/src/main/java/org/jredis/Semantics.java	/^	public <T> Semantics setValueCodec(Class<T> valueClass, Codec<T> valueCdec);$/;"	m	interface:Semantics
setnx	src/api/src/main/java/org/jredis/JRedis.java	/^		   boolean setnx (String key, T object) throws RedisException;$/;"	m	interface:JRedis
setnx	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean setnx (String key, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
setnx	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean setnx (String key, String stringValue) throws RedisException;$/;"	m	interface:JRedis
setnx	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean setnx (String key, byte[] value) throws RedisException;$/;"	m	interface:JRedis
setnx	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		   Future<Boolean> setnx (String key, T object);$/;"	m	interface:JRedisFuture
setnx	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> setnx (String key, Number numberValue);$/;"	m	interface:JRedisFuture
setnx	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> setnx (String key, String stringValue);$/;"	m	interface:JRedisFuture
setnx	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> setnx (String key, byte[] value);$/;"	m	interface:JRedisFuture
setnx	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public boolean setnx (String key, T value) throws RedisException;$/;"	m	interface:SemanticJRedis
setnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> Future<Boolean> setnx (String key, T value) {$/;"	m	class:JRedisFutureSupport
setnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> setnx(String key, Number value) {$/;"	m	class:JRedisFutureSupport
setnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> setnx(String key, String value) {$/;"	m	class:JRedisFutureSupport
setnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> setnx(String key, byte[] value){$/;"	m	class:JRedisFutureSupport
setnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> boolean setnx (String key, T value) throws RedisException {$/;"	m	class:JRedisSupport
setnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean setnx(String key, Number value) throws RedisException {$/;"	m	class:JRedisSupport
setnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean setnx(String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
setnx	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean setnx(String key, byte[] value) throws RedisException{$/;"	m	class:JRedisSupport
setupTestSuiteData	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	private final void setupTestSuiteData () {$/;"	m	class:JRedisTestSuiteBase	file:
sharedRequestBuffer	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	private final ByteArrayOutputStream sharedRequestBuffer;$/;"	f	class:SynchProtocol	file:
sharedRequestObject	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	private final StreamBufferRequest   sharedRequestObject;$/;"	f	class:SynchProtocol	file:
sharedResponseBuffer	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^	private final byte[]	sharedResponseBuffer;$/;"	f	class:SynchProtocol	file:
shutdown	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public void shutdown () throws RedisException;$/;"	m	interface:SemanticJRedis
shutdown	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	protected final void shutdown () throws IllegalStateException {$/;"	m	class:ConnectionBase
shutdown	src/ri/src/main/java/org/jredis/ri/alphazero/connection/HeartbeatJinn.java	/^	public void shutdown() {$/;"	m	class:HeartbeatJinn
signal	src/ri/src/main/java/org/jredis/ri/alphazero/support/Signal.java	/^	public void signal () {$/;"	m	class:Signal
signalled	src/ri/src/main/java/org/jredis/ri/alphazero/support/Signal.java	/^	final Condition signalled = lock.newCondition();$/;"	f	class:Signal
sinter	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<byte[]> sinter (String set1, String...sets) throws RedisException;$/;"	m	interface:JRedis
sinter	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<byte[]>> sinter (String set1, String...sets);$/;"	m	interface:JRedisFuture
sinter	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public List<T> sinter (String set1, String...sets) throws RedisException;$/;"	m	interface:SemanticJRedis
sinter	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<byte[]>> sinter(String set1, String... sets) {$/;"	m	class:JRedisFutureSupport
sinter	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<byte[]> sinter(String set1, String... sets) throws RedisException {$/;"	m	class:JRedisSupport
sinterstore	src/api/src/main/java/org/jredis/JRedis.java	/^	public void sinterstore (String destSetKey, String...sets) throws RedisException;$/;"	m	interface:JRedis
sinterstore	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> sinterstore (String destSetKey, String...sets);$/;"	m	interface:JRedisFuture
sinterstore	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public void sinterstore (String destSetKey, String...sets) throws RedisException;$/;"	m	interface:SemanticJRedis
sinterstore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus sinterstore(String dest, String... sets) {$/;"	m	class:JRedisFutureSupport
sinterstore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void sinterstore(String dest, String... sets) throws RedisException {$/;"	m	class:JRedisSupport
sismember	src/api/src/main/java/org/jredis/JRedis.java	/^		   boolean sismember (String setKey, T object) throws RedisException;$/;"	m	interface:JRedis
sismember	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean sismember (String setKey, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
sismember	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean sismember (String setKey, String stringValue) throws RedisException;$/;"	m	interface:JRedis
sismember	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean sismember (String setKey, byte[] member) throws RedisException;$/;"	m	interface:JRedis
sismember	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<Boolean> sismember (String setKey, T object);$/;"	m	interface:JRedisFuture
sismember	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> sismember (String setKey, Number numberValue);$/;"	m	interface:JRedisFuture
sismember	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> sismember (String setKey, String stringValue);$/;"	m	interface:JRedisFuture
sismember	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> sismember (String setKey, byte[] member);$/;"	m	interface:JRedisFuture
sismember	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public boolean sismember (String setKey, T member) throws RedisException;$/;"	m	interface:SemanticJRedis
sismember	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> Future<Boolean> sismember(String key, T object) {$/;"	m	class:JRedisFutureSupport
sismember	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> sismember(String key, Number numberValue) {$/;"	m	class:JRedisFutureSupport
sismember	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> sismember(String key, String value) {$/;"	m	class:JRedisFutureSupport
sismember	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> sismember(String key, byte[] member) {$/;"	m	class:JRedisFutureSupport
sismember	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> boolean sismember(String key, T object) throws RedisException {$/;"	m	class:JRedisSupport
sismember	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean sismember(String key, Number numberValue) throws RedisException {$/;"	m	class:JRedisSupport
sismember	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean sismember(String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
sismember	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean sismember(String key, byte[] member) throws RedisException {$/;"	m	class:JRedisSupport
slaveof	src/api/src/main/java/org/jredis/JRedis.java	/^	public void slaveof(String host, int port) throws RedisException;$/;"	m	interface:JRedis
slaveof	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus>  slaveof(String host, int port);$/;"	m	interface:JRedisFuture
slaveof	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<ResponseStatus>  slaveof(String host, int port) {$/;"	m	class:JRedisFutureSupport
slaveof	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void slaveof(String host, int port) throws RedisException{$/;"	m	class:JRedisSupport
slaveofnone	src/api/src/main/java/org/jredis/JRedis.java	/^	public void slaveofnone() throws RedisException;$/;"	m	interface:JRedis
slaveofnone	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus>  slaveofnone();$/;"	m	interface:JRedisFuture
slaveofnone	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<ResponseStatus>  slaveofnone() {$/;"	m	class:JRedisFutureSupport
slaveofnone	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void slaveofnone() throws RedisException{$/;"	m	class:JRedisSupport
smallData	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final byte[]			smallData = getRandomBytes(SMALL_DATA);$/;"	f	class:JRedisTestSuiteBase
smembers	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<byte[]> smembers (String setkey) throws RedisException;$/;"	m	interface:JRedis
smembers	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<byte[]>> smembers (String setkey);$/;"	m	interface:JRedisFuture
smembers	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public List<T> smembers (String setkey) throws RedisException;$/;"	m	interface:SemanticJRedis
smembers	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<byte[]>> smembers(String key) {$/;"	m	class:JRedisFutureSupport
smembers	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<byte[]> smembers(String key) throws RedisException {$/;"	m	class:JRedisSupport
smove	src/api/src/main/java/org/jredis/JRedis.java	/^		   boolean smove (String srcKey, String destKey, T object) throws RedisException;$/;"	m	interface:JRedis
smove	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean smove (String srcKey, String destKey, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
smove	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean smove (String srcKey, String destKey, String stringValue) throws RedisException;$/;"	m	interface:JRedis
smove	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean smove (String srcKey, String destKey, byte[] member) throws RedisException;$/;"	m	interface:JRedis
smove	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<Boolean> smove (String srcKey, String destKey, T object);$/;"	m	interface:JRedisFuture
smove	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> smove (String srcKey, String destKey, Number numberValue);$/;"	m	interface:JRedisFuture
smove	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> smove (String srcKey, String destKey, String stringValue);$/;"	m	interface:JRedisFuture
smove	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> smove (String srcKey, String destKey, byte[] member);$/;"	m	interface:JRedisFuture
smove	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^		   Future<Boolean> smove (String srcKey, String destKey, T object) {$/;"	m	class:JRedisFutureSupport
smove	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> smove (String srcKey, String destKey, Number numberValue) {$/;"	m	class:JRedisFutureSupport
smove	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> smove (String srcKey, String destKey, String stringValue) {$/;"	m	class:JRedisFutureSupport
smove	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> smove (String srcKey, String destKey, byte[] member) {$/;"	m	class:JRedisFutureSupport
smove	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	boolean smove (String srcKey, String destKey, T object) throws RedisException {$/;"	m	class:JRedisSupport
smove	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean smove (String srcKey, String destKey, Number numberValue) throws RedisException {$/;"	m	class:JRedisSupport
smove	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean smove (String srcKey, String destKey, String stringValue) throws RedisException {$/;"	m	class:JRedisSupport
smove	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean smove (String srcKey, String destKey, byte[] member) throws RedisException {$/;"	m	class:JRedisSupport
socket	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	private java.net.Socket		socket;$/;"	f	class:ConnectionBase	file:
socketAddress	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	private final InetSocketAddress  	socketAddress;$/;"	f	class:ConnectionBase	file:
socketClose	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	private final void socketClose () {$/;"	m	class:ConnectionBase	file:
socketFlags	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		Map<Connection.Socket.Flag, Boolean> socketFlags = new HashMap<Connection.Socket.Flag, Boolean>();$/;"	f	class:ConnectionSpec.RefImpl
socketProperties	src/api/src/main/java/org/jredis/connector/ConnectionSpec.java	/^		Map<Connection.Socket.Property, Integer> socketProperties = new HashMap<Connection.Socket.Property, Integer>();$/;"	f	class:ConnectionSpec.RefImpl
sort	src/api/src/main/java/org/jredis/JRedis.java	/^	public Sort sort(String key);$/;"	m	interface:JRedis
sort	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Sort sort(String key);$/;"	m	interface:JRedisFuture
sort	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public SemanticSort<T> sort(String key);$/;"	m	interface:SemanticJRedis
sort	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Sort sort(final String key) {$/;"	m	class:JRedisFutureSupport
sort	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public Sort sort(final String key) {$/;"	m	class:JRedisSupport
sortSpec	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	private String sortSpec = NO_OP_SPEC;$/;"	f	class:SortSupport	file:
sparseList	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final List<byte[]>	sparseList = new ArrayList<byte[]>();$/;"	f	class:JRedisTestSuiteBase
spec	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^	final protected ConnectionSpec  	spec;$/;"	f	class:ConnectionBase
spop	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] spop (String setkey) throws RedisException;$/;"	m	interface:JRedis
spop	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> spop (String setkey);$/;"	m	interface:JRedisFuture
spop	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> spop (String key) {$/;"	m	class:JRedisFutureSupport
spop	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] spop (String setkey) throws RedisException {$/;"	m	class:JRedisSupport
srandmember	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] srandmember (String setkey) throws RedisException;$/;"	m	interface:JRedis
srandmember	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> srandmember (String setkey);$/;"	m	interface:JRedisFuture
srandmember	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> srandmember (String key) {$/;"	m	class:JRedisFutureSupport
srandmember	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] srandmember (String setkey) throws RedisException {$/;"	m	class:JRedisSupport
srcRef	src/api/src/main/java/org/jredis/Event.java	/^	private final WeakReference<SRC> srcRef;$/;"	f	class:Event	file:
srem	src/api/src/main/java/org/jredis/JRedis.java	/^		   boolean srem (String setKey, T object) throws RedisException;$/;"	m	interface:JRedis
srem	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean srem (String setKey, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
srem	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean srem (String setKey, String stringValue) throws RedisException;$/;"	m	interface:JRedis
srem	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean srem (String setKey, byte[] member) throws RedisException;$/;"	m	interface:JRedis
srem	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<Boolean> srem (String setKey, T object);$/;"	m	interface:JRedisFuture
srem	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> srem (String setKey, Number numberValue);$/;"	m	interface:JRedisFuture
srem	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> srem (String setKey, String stringValue);$/;"	m	interface:JRedisFuture
srem	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> srem (String setKey, byte[] member);$/;"	m	interface:JRedisFuture
srem	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public boolean srem (String setKey, T member) throws RedisException;$/;"	m	interface:SemanticJRedis
srem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> Future<Boolean> srem (String key, T value)$/;"	m	class:JRedisFutureSupport
srem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> srem (String key, Number value) {$/;"	m	class:JRedisFutureSupport
srem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> srem (String key, String value) {$/;"	m	class:JRedisFutureSupport
srem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> srem(String key, byte[] member) {$/;"	m	class:JRedisFutureSupport
srem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> boolean srem (String key, T value) throws RedisException$/;"	m	class:JRedisSupport
srem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean srem (String key, Number value) throws RedisException {$/;"	m	class:JRedisSupport
srem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean srem (String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
srem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean srem(String key, byte[] member) throws RedisException {$/;"	m	class:JRedisSupport
status	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		protected ResponseStatus	status;$/;"	f	class:ResponseSupport
status	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/VirtualResponse.java	/^	private final ResponseStatus	status;$/;"	f	class:VirtualResponse	file:
storeSpec	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	private String storeSpec = NO_OP_SPEC;$/;"	f	class:SortSupport	file:
stores	src/ri/src/main/java/org/jredis/ri/alphazero/support/SortSupport.java	/^	protected volatile boolean stores = false;$/;"	f	class:SortSupport
string	src/api/src/main/java/org/jredis/RedisType.java	/^	string,$/;"	e	enum:RedisType	file:
stringList	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final List<String>	stringList = new ArrayList<String>();$/;"	f	class:JRedisTestSuiteBase
stringValue	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/SynchProtocol.java	/^		private String		stringValue;$/;"	f	class:SynchProtocol.SynchLineResponse	file:
stringvalue	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	private String		stringvalue;$/;"	f	class:JRedisTestSuiteBase	file:
substr	src/api/src/main/java/org/jredis/JRedis.java	/^	public byte[] substr (String key, long from, long to) throws RedisException;$/;"	m	interface:JRedis
substr	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<byte[]> substr (String listkey, long from, long to); $/;"	m	interface:JRedisFuture
substr	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<byte[]> substr(String key, long from, long to) {$/;"	m	class:JRedisFutureSupport
substr	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public byte[] substr(String key, long from, long to) throws RedisException {$/;"	m	class:JRedisSupport
suiteParametersInit	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	public void suiteParametersInit($/;"	m	class:JRedisTestSuiteBase
sunion	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<byte[]> sunion (String set1, String...sets) throws RedisException;$/;"	m	interface:JRedis
sunion	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<byte[]>> sunion (String set1, String...sets);$/;"	m	interface:JRedisFuture
sunion	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<byte[]>> sunion(String set1, String... sets) {$/;"	m	class:JRedisFutureSupport
sunion	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<byte[]> sunion(String set1, String... sets) throws RedisException {$/;"	m	class:JRedisSupport
sunionstore	src/api/src/main/java/org/jredis/JRedis.java	/^	public void sunionstore (String destSetKey, String...sets) throws RedisException;$/;"	m	interface:JRedis
sunionstore	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<ResponseStatus> sunionstore (String destSetKey, String...sets);$/;"	m	interface:JRedisFuture
sunionstore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public FutureStatus sunionstore(String dest, String... sets) {$/;"	m	class:JRedisFutureSupport
sunionstore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public void sunionstore(String dest, String... sets) throws RedisException {$/;"	m	class:JRedisSupport
supports	src/api/src/main/java/org/jredis/Codec.java	/^	public boolean supports (Class<?> type);$/;"	m	interface:Codec
supports	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultKeyCodec.java	/^	public boolean supports (Class<?> type) { return type == String.class ? true : false; }$/;"	m	class:DefaultKeyCodec
supports	src/ri/src/main/java/org/jredis/ri/alphazero/semantics/DefaultStringCodec.java	/^    public boolean supports (Class<?> type) {$/;"	m	class:DefaultStringCodec
sync	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipeline.java	/^	public JRedis sync () {$/;"	m	class:JRedisPipeline
sync	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisPipeline.java	/^	public JRedis sync (final long timeout, final TimeUnit unit) {$/;"	m	class:JRedisPipeline
t1	src/ri/src/main/java/org/jredis/ri/alphazero/Pair.java	/^	public final T1 t1;$/;"	f	class:Pair
t2	src/ri/src/main/java/org/jredis/ri/alphazero/Pair.java	/^	public final T2 t2;$/;"	f	class:Pair
testAppendStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testAppendStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testAppendStringString	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testAppendStringString() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testAppendStringString	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testAppendStringString() {$/;"	m	class:JRedisProviderTestsBase
testBgrewriteaof	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testBgrewriteaof() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testBgrewriteaofe	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testBgrewriteaofe() {$/;"	m	class:JRedisProviderTestsBase
testBgsave	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testBgsave() {$/;"	m	class:JRedisProviderTestsBase
testCommandFlags	src/api/src/test/java/org/jredis/protocol/TestCommand.java	/^	public void testCommandFlags() {$/;"	m	class:TestCommand
testCommandSemanticsRequestType	src/api/src/test/java/org/jredis/protocol/TestCommand.java	/^	public void testCommandSemanticsRequestType () {$/;"	m	class:TestCommand
testCompression	src/ri/src/test/java/org/jredis/ri/alphazero/support/GZipTest.java	/^	public void testCompression() {$/;"	m	class:GZipTest
testConcurrentBooleanCommands	src/ri/src/test/java/org/jredis/ri/alphazero/ConcurrentJRedisProviderTestsBase.java	/^	public void testConcurrentBooleanCommands() {$/;"	m	class:ConcurrentJRedisProviderTestsBase
testConcurrentBulkCommands	src/ri/src/test/java/org/jredis/ri/alphazero/ConcurrentJRedisProviderTestsBase.java	/^	public void testConcurrentBulkCommands() {$/;"	m	class:ConcurrentJRedisProviderTestsBase
testConcurrentNumberCommands	src/ri/src/test/java/org/jredis/ri/alphazero/ConcurrentJRedisProviderTestsBase.java	/^	public void testConcurrentNumberCommands() {$/;"	m	class:ConcurrentJRedisProviderTestsBase
testConnectionFlags	src/api/src/test/java/org/jredis/connector/TestSpecElements.java	/^	public void testConnectionFlags() {$/;"	m	class:TestSpecElements
testCredentialsOverloads	src/api/src/test/java/org/jredis/connector/TestSpecElements.java	/^	public void testCredentialsOverloads () {$/;"	m	class:TestSpecElements
testDbsize	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testDbsize() {$/;"	m	class:JRedisProviderTestsBase
testDebug	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testDebug () throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testDebug	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testDebug() {$/;"	m	class:JRedisProviderTestsBase
testDel	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testDel() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testDel	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testDel() {$/;"	m	class:JRedisProviderTestsBase
testEcho	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testEcho() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testEcho	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testEcho() {$/;"	m	class:JRedisProviderTestsBase
testElicitErrors	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testElicitErrors() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testElicitErrors	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testElicitErrors() {$/;"	m	class:JRedisProviderTestsBase
testExecutionExceptionCauseType	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testExecutionExceptionCauseType() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testExists_Expire_TTL	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testExists_Expire_TTL() {$/;"	m	class:JRedisProviderTestsBase
testExpireat	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testExpireat() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testExpireat	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testExpireat() {$/;"	m	class:JRedisProviderTestsBase
testFlushDb	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testFlushDb () throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testGetNaturalNumber	src/ri/src/test/java/org/jredis/ri/alphazero/support/ConvertTest.java	/^	public void testGetNaturalNumber() {$/;"	m	class:ConvertTest
testGetSetStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testGetSetStringByteArray() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testGetSetStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testGetSetStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testHgetall	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testHgetall() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testHgetall	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testHgetall() {$/;"	m	class:JRedisProviderTestsBase
testHkeys	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testHkeys() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testHkeys	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testHkeys() {$/;"	m	class:JRedisProviderTestsBase
testHsetHget	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testHsetHget() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testHsetHgetHexists	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testHsetHgetHexists() {$/;"	m	class:JRedisProviderTestsBase
testHvals	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testHvals() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testHvals	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testHvals() {$/;"	m	class:JRedisProviderTestsBase
testIncrAndDecr	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testIncrAndDecr() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testIncrAndDecr	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testIncrAndDecr() {$/;"	m	class:JRedisProviderTestsBase
testIncrbyAndDecrby	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testIncrbyAndDecrby() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testIncrbyAndDecrby	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testIncrbyAndDecrby() {$/;"	m	class:JRedisProviderTestsBase
testInfo	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testInfo() {$/;"	m	class:JRedisProviderTestsBase
testKeys	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testKeys() {$/;"	m	class:JRedisProviderTestsBase
testKeysString	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testKeysString() {$/;"	m	class:JRedisProviderTestsBase
testLindex	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testLindex() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testLindex	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLindex() {$/;"	m	class:JRedisProviderTestsBase
testListPushWithSparseList	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testListPushWithSparseList() {$/;"	m	class:JRedisProviderTestsBase
testLpop	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testLpop() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testLpop	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLpop() {$/;"	m	class:JRedisProviderTestsBase
testLpoppushStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testLpoppushStringByteArray() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testLpoppushStringString	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLpoppushStringString() {$/;"	m	class:JRedisProviderTestsBase
testLpushStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testLpushStringByteArray() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testLpushStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLpushStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testLpushStringNumber	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLpushStringNumber() {$/;"	m	class:JRedisProviderTestsBase
testLpushStringString	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLpushStringString() {$/;"	m	class:JRedisProviderTestsBase
testLpushStringT	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLpushStringT() {$/;"	m	class:JRedisProviderTestsBase
testLrange	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testLrange() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testLrange	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLrange() {$/;"	m	class:JRedisProviderTestsBase
testLremStringByteArrayInt	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testLremStringByteArrayInt() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testLremStringByteArrayInt	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLremStringByteArrayInt() {$/;"	m	class:JRedisProviderTestsBase
testLremStringNumberInt	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLremStringNumberInt() {$/;"	m	class:JRedisProviderTestsBase
testLremStringStringInt	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLremStringStringInt() {$/;"	m	class:JRedisProviderTestsBase
testLremStringTInt	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLremStringTInt() {$/;"	m	class:JRedisProviderTestsBase
testLsetStringIntByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testLsetStringIntByteArray() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testLsetStringIntByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLsetStringIntByteArray() {$/;"	m	class:JRedisProviderTestsBase
testLsetStringIntNumber	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLsetStringIntNumber() {$/;"	m	class:JRedisProviderTestsBase
testLsetStringIntString	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLsetStringIntString() {$/;"	m	class:JRedisProviderTestsBase
testLsetStringIntT	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLsetStringIntT() {$/;"	m	class:JRedisProviderTestsBase
testLtrim	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testLtrim() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testLtrim	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testLtrim() {$/;"	m	class:JRedisProviderTestsBase
testMget	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testMget() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testMget	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testMget() {$/;"	m	class:JRedisProviderTestsBase
testPing	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testPing () throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testPing	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testPing() {$/;"	m	class:JRedisProviderTestsBase
testQuit	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisAsynchClientTest.java	/^	public void testQuit() {$/;"	m	class:JRedisAsynchClientTest
testQuit	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisClientTest.java	/^	public void testQuit() {$/;"	m	class:JRedisClientTest
testQuit	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisPipelineServiceTest.java	/^	public void testQuit() {$/;"	m	class:JRedisPipelineServiceTest
testQuit	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisPipelineTest.java	/^	public void testQuit() {$/;"	m	class:JRedisPipelineTest
testQuit	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisServiceTest.java	/^	public void testQuit() {$/;"	m	class:JRedisServiceTest
testRandomkey	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testRandomkey() {$/;"	m	class:JRedisProviderTestsBase
testRename	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testRename() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testRename	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testRename() {$/;"	m	class:JRedisProviderTestsBase
testRenamenx	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testRenamenx() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testRenamenx	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testRenamenx() {$/;"	m	class:JRedisProviderTestsBase
testRpop	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testRpop() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testRpop	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testRpop() {$/;"	m	class:JRedisProviderTestsBase
testRpushStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testRpushStringByteArray() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testRpushStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testRpushStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testRpushStringNumber	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testRpushStringNumber() {$/;"	m	class:JRedisProviderTestsBase
testRpushStringString	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testRpushStringString() {$/;"	m	class:JRedisProviderTestsBase
testRpushStringT	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testRpushStringT() {$/;"	m	class:JRedisProviderTestsBase
testSaddStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testSaddStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testSaddStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSaddStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testSaddStringNumber	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSaddStringNumber() {$/;"	m	class:JRedisProviderTestsBase
testSaddStringString	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSaddStringString() {$/;"	m	class:JRedisProviderTestsBase
testSaddStringT	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSaddStringT() {$/;"	m	class:JRedisProviderTestsBase
testSaveAndLastSave	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSaveAndLastSave() {$/;"	m	class:JRedisProviderTestsBase
testScard	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testScard() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testScard	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testScard() {$/;"	m	class:JRedisProviderTestsBase
testSdiff	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSdiff() {$/;"	m	class:JRedisProviderTestsBase
testSdiffstore	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSdiffstore() {$/;"	m	class:JRedisProviderTestsBase
testSetAndFlushdbAndExistsAndKeys	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testSetAndFlushdbAndExistsAndKeys() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testSetAndFlushdbAndExistsAndKeys	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSetAndFlushdbAndExistsAndKeys() {$/;"	m	class:JRedisProviderTestsBase
testSetStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testSetStringByteArray() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testSetStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSetStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testSetStringNumber	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSetStringNumber() {$/;"	m	class:JRedisProviderTestsBase
testSetStringString	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSetStringString() {$/;"	m	class:JRedisProviderTestsBase
testSetStringT	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSetStringT() {$/;"	m	class:JRedisProviderTestsBase
testSinter	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSinter() {$/;"	m	class:JRedisProviderTestsBase
testSinterstore	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSinterstore() {$/;"	m	class:JRedisProviderTestsBase
testSismemberStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testSismemberStringByteArray() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testSismemberStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSismemberStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testSismemberStringNumber	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSismemberStringNumber() {$/;"	m	class:JRedisProviderTestsBase
testSismemberStringString	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSismemberStringString() {$/;"	m	class:JRedisProviderTestsBase
testSismemberStringT	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSismemberStringT() {$/;"	m	class:JRedisProviderTestsBase
testSmembers	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testSmembers() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testSmembers	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSmembers() {$/;"	m	class:JRedisProviderTestsBase
testSmoveStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testSmoveStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testSmoveStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSmoveStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testSort	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testSort() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testSort	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSort() {$/;"	m	class:JRedisProviderTestsBase
testSrandmember	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testSrandmember () throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testSrandmember	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSrandmember() {$/;"	m	class:JRedisProviderTestsBase
testSremStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSremStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testSremStringNumber	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSremStringNumber() {$/;"	m	class:JRedisProviderTestsBase
testSremStringString	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSremStringString() {$/;"	m	class:JRedisProviderTestsBase
testSremStringT	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSremStringT() {$/;"	m	class:JRedisProviderTestsBase
testSubstr	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testSubstr() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testSubstr	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSubstr() {$/;"	m	class:JRedisProviderTestsBase
testSunion	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSunion() {$/;"	m	class:JRedisProviderTestsBase
testSunionstore	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testSunionstore() {$/;"	m	class:JRedisProviderTestsBase
testToBytes	src/ri/src/test/java/org/jredis/ri/alphazero/support/ConvertTest.java	/^	public void testToBytes() {$/;"	m	class:ConvertTest
testType	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testType() {$/;"	m	class:JRedisProviderTestsBase
testZaddStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testZaddStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testZaddStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZaddStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testZcard	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testZcard() throws InterruptedException {$/;"	m	class:JRedisFutureProviderTestsBase
testZcard	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZcard() {$/;"	m	class:JRedisProviderTestsBase
testZcountStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testZcountStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testZcountStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZcountStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testZincrbyStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZincrbyStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testZrangeStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZrangeStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testZrangeWithscoresStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testZrangeWithscoresStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testZrangeWithscoresStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZrangeWithscoresStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testZrangebyscoreStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testZrangebyscoreStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testZrangebyscoreStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZrangebyscoreStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testZrankStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testZrankStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testZrankStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZrankStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testZremStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testZremStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testZremStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZremStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testZremrangebyrankStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testZremrangebyrankStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testZremrangebyrankStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZremrangebyrankStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testZremrangebyscoreStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testZremrangebyscoreStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testZremrangebyscoreStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZremrangebyscoreStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testZrevrangeWithscoresStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testZrevrangeWithscoresStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testZrevrangeWithscoresStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZrevrangeWithscoresStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testZrevrankStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testZrevrankStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testZrevrankStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZrevrankStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
testZscoreAndZincrbyStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisFutureProviderTestsBase.java	/^	public void testZscoreAndZincrbyStringByteArray() throws InterruptedException{$/;"	m	class:JRedisFutureProviderTestsBase
testZscoreStringByteArray	src/ri/src/test/java/org/jredis/ri/alphazero/JRedisProviderTestsBase.java	/^	public void testZscoreStringByteArray() {$/;"	m	class:JRedisProviderTestsBase
throwIt	src/ri/src/main/java/org/jredis/ri/alphazero/support/Assert.java	/^	void throwIt $/;"	m	class:Assert	file:
toBytes	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^	    byte[] toBytes(Number value) { return String.valueOf(value).getBytes();}$/;"	m	class:BulkSetMapping.Numbers
toBytes	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^	    byte[] toBytes(String value) { return DefaultCodec.encode(value);}$/;"	m	class:BulkSetMapping.Strings
toBytes	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^	    byte[] toBytes(T value) { return DefaultCodec.encode(value);}$/;"	m	class:BulkSetMapping.Objects
toBytes	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^	    byte[] toBytes(byte[] value) { return value;}$/;"	m	class:BulkSetMapping.Bytes
toBytes	src/ri/src/main/java/org/jredis/ri/alphazero/BulkSetMapping.java	/^	abstract byte[] toBytes(T value) ;$/;"	m	class:BulkSetMapping
toBytes	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	public static final byte[] toBytes(double dnum){$/;"	m	class:Convert
toBytes	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	public static final byte[] toBytes(int i){$/;"	m	class:Convert
toBytes	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	public static final byte[] toBytes(long lnum){$/;"	m	class:Convert
toDouble	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	public static final double toDouble (byte[] stringRepOfDoublePrecisionBytes) throws IllegalArgumentException$/;"	m	class:Convert
toDouble	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^	public static final List<Double> toDouble(List<byte[]> bytearray){$/;"	m	class:DefaultCodec
toDouble	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^    public static double toDouble (byte[] bs) {$/;"	m	class:DefaultCodec
toInt	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	public static final int toInt(byte[] potentiallySignedAsciiBytes, int offset, int len) throws IllegalArgumentException$/;"	m	class:Convert
toInt	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	public static final int toInt(byte[] potentiallySignedBytes) throws IllegalArgumentException$/;"	m	class:Convert
toLong	src/api/src/main/java/org/jredis/ObjectInfo.java	/^    public static long toLong (String addressStrRep) {$/;"	m	class:ObjectInfo
toLong	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	public static final long toLong(byte[] potentiallySignedAsciiBytes, int offset, int len) throws IllegalArgumentException$/;"	m	class:Convert
toLong	src/ri/src/main/java/org/jredis/ri/alphazero/support/Convert.java	/^	public static final long toLong(byte[] potentiallySignedBytes) throws IllegalArgumentException$/;"	m	class:Convert
toLong	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^	public static final List<Long> toLong(List<byte[]> bytearray){$/;"	m	class:DefaultCodec
toLong	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^	public static final Long toLong (byte[]  bytes) {$/;"	m	class:DefaultCodec
toStr	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^	public static final List<String> toStr (List<byte[]> bytearray) {$/;"	m	class:DefaultCodec
toStr	src/ri/src/main/java/org/jredis/ri/alphazero/support/DefaultCodec.java	/^	public static final String toStr (byte[] bytes) {$/;"	m	class:DefaultCodec
toString	src/api/src/main/java/org/jredis/ObjectInfo.java	/^    public String toString() {$/;"	m	class:ObjectInfo
toString	src/api/src/main/java/org/jredis/RedisException.java	/^	public String toString () {$/;"	m	class:RedisException
toString	src/ri/src/main/java/org/jredis/ri/alphazero/connection/ConnectionBase.java	/^    public String toString() {$/;"	m	class:ConnectionBase
toString	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^		@Override public String toString() { return "[" + getClass().getSimpleName() + " | name: " + getName() + " created on: " + getCreated_on() + "]"; }$/;"	m	class:JRedisTestSuiteBase.TestBean
total_commands_processed	src/api/src/main/java/org/jredis/RedisInfo.java	/^	total_commands_processed,$/;"	e	enum:RedisInfo	file:
total_connections_received	src/api/src/main/java/org/jredis/RedisInfo.java	/^	total_connections_received,$/;"	e	enum:RedisInfo	file:
ttl	src/api/src/main/java/org/jredis/JRedis.java	/^	public long ttl (String key) throws RedisException;$/;"	m	interface:JRedis
ttl	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> ttl (String key);$/;"	m	interface:JRedisFuture
ttl	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> ttl (String key) {$/;"	m	class:JRedisFutureSupport
ttl	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long ttl (String key) throws RedisException {$/;"	m	class:JRedisSupport
type	src/api/src/main/java/org/jredis/Event.java	/^	private final ETYPE type;$/;"	f	class:Event	file:
type	src/api/src/main/java/org/jredis/JRedis.java	/^	public RedisType type (String key) throws RedisException;$/;"	m	interface:JRedis
type	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<RedisType> type (String key);$/;"	m	interface:JRedisFuture
type	src/api/src/main/java/org/jredis/semantics/SemanticJRedis.java	/^	public RedisType type (String key) throws RedisException;$/;"	m	interface:SemanticJRedis
type	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<RedisType> type(String key) {$/;"	m	class:JRedisFutureSupport
type	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public RedisType type(String key) throws RedisException {$/;"	m	class:JRedisSupport
type	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		protected Type				type;$/;"	f	class:ResponseSupport
uniqueSet	src/ri/src/test/java/org/jredis/ri/JRedisTestSuiteBase.java	/^	protected final Set<String>		uniqueSet = new HashSet<String> ();$/;"	f	class:JRedisTestSuiteBase
unpackValue	src/api/src/main/java/org/jredis/Query.java	/^		public static long unpackValue (List<byte[]> queryResult){$/;"	m	class:Query.Support
uptime_in_days	src/api/src/main/java/org/jredis/RedisInfo.java	/^	uptime_in_days,$/;"	e	enum:RedisInfo	file:
uptime_in_seconds	src/api/src/main/java/org/jredis/RedisInfo.java	/^	uptime_in_seconds,$/;"	e	enum:RedisInfo	file:
used_memory	src/api/src/main/java/org/jredis/RedisInfo.java	/^	used_memory,$/;"	e	enum:RedisInfo	file:
used_memory_human	src/api/src/main/java/org/jredis/RedisInfo.java	/^	used_memory_human,$/;"	e	enum:RedisInfo	file:
valueAddress	src/api/src/main/java/org/jredis/ObjectInfo.java	/^	private final String valueAddress;$/;"	f	class:ObjectInfo	file:
valueOf	src/api/src/main/java/org/jredis/ObjectInfo.java	/^    static public final ObjectInfo valueOf(String strRep) {$/;"	m	class:ObjectInfo
valueRefCount	src/api/src/main/java/org/jredis/ObjectInfo.java	/^	private final long valueRefCount;$/;"	f	class:ObjectInfo	file:
version	src/api/src/main/java/org/jredis/ProviderException.java	/^	public static final long version = _specification.Version.major;$/;"	f	class:ProviderException
version	src/api/src/main/java/org/jredis/RedisException.java	/^	public static final long version = _specification.Version.major;$/;"	f	class:RedisException
versions	src/api/src/main/java/org/jredis/Redis.java	/^	String[] versions();$/;"	m	interface:Redis
vm_enabled	src/api/src/main/java/org/jredis/RedisInfo.java	/^	vm_enabled,$/;"	e	enum:RedisInfo	file:
work_flag	src/ri/src/main/java/org/jredis/ri/alphazero/connection/PipelineConnectionBase.java	/^    	private final AtomicBoolean work_flag;$/;"	f	class:PipelineConnectionBase.ResponseHandler	file:
write	src/api/src/main/java/org/jredis/connector/Message.java	/^	public void	write (OutputStream  out)throws ClientRuntimeException, ProviderException; $/;"	m	interface:Message
write	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ProtocolBase.java	/^		public void write(OutputStream out) throws ClientRuntimeException, ProviderException {$/;"	m	class:ProtocolBase.StreamBufferRequest
write	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/ResponseSupport.java	/^		public void write(OutputStream out) throws ClientRuntimeException, ProviderException {$/;"	m	class:ResponseSupport
write	src/ri/src/main/java/org/jredis/ri/alphazero/protocol/VirtualResponse.java	/^	public void write(OutputStream out) throws ClientRuntimeException, ProviderException {$/;"	m	class:VirtualResponse
zadd	src/api/src/main/java/org/jredis/JRedis.java	/^		   boolean zadd (String setkey, double score, T object) throws RedisException;$/;"	m	interface:JRedis
zadd	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean zadd (String setkey, double score, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
zadd	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean zadd (String setkey, double score, String stringValue) throws RedisException;$/;"	m	interface:JRedis
zadd	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean zadd (String setkey, double score, byte[] member) throws RedisException;$/;"	m	interface:JRedis
zadd	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<Boolean> zadd (String setkey, double score, T object);$/;"	m	interface:JRedisFuture
zadd	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> zadd (String setkey, double score, Number numberValue);$/;"	m	interface:JRedisFuture
zadd	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> zadd (String setkey, double score, String stringValue);$/;"	m	interface:JRedisFuture
zadd	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> zadd (String setkey, double score, byte[] member);$/;"	m	interface:JRedisFuture
zadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> Future<Boolean> zadd (String key, double score, T value)$/;"	m	class:JRedisFutureSupport
zadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> zadd (String key, double score, Number value) {$/;"	m	class:JRedisFutureSupport
zadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> zadd (String key, double score, String value) {$/;"	m	class:JRedisFutureSupport
zadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> zadd(String key, double score, byte[] member) $/;"	m	class:JRedisFutureSupport
zadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> boolean zadd (String key, double score, T value) throws RedisException$/;"	m	class:JRedisSupport
zadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean zadd (String key, double score, Number value) throws RedisException {$/;"	m	class:JRedisSupport
zadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean zadd (String key, double score, String value) throws RedisException {$/;"	m	class:JRedisSupport
zadd	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean zadd(String key, double score, byte[] member) $/;"	m	class:JRedisSupport
zcard	src/api/src/main/java/org/jredis/JRedis.java	/^	public long zcard (String setKey) throws RedisException;	$/;"	m	interface:JRedis
zcard	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> zcard (String setKey);	$/;"	m	interface:JRedisFuture
zcard	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> zcard(String key) {$/;"	m	class:JRedisFutureSupport
zcard	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long zcard(String key) throws RedisException {$/;"	m	class:JRedisSupport
zcount	src/api/src/main/java/org/jredis/JRedis.java	/^	public long zcount (String setkey, double minScore, double maxScore) throws RedisException; $/;"	m	interface:JRedis
zcount	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> zcount (String setkey, double minScore, double maxScore); $/;"	m	interface:JRedisFuture
zcount	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> zcount(String key, double minScore, double maxScore) {$/;"	m	class:JRedisFutureSupport
zcount	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long zcount (String key, double minScore, double maxScore) throws RedisException {$/;"	m	class:JRedisSupport
zincrby	src/api/src/main/java/org/jredis/JRedis.java	/^		Double zincrby (String setkey, double score, T object) throws RedisException;$/;"	m	interface:JRedis
zincrby	src/api/src/main/java/org/jredis/JRedis.java	/^	public Double zincrby (String setkey, double score, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
zincrby	src/api/src/main/java/org/jredis/JRedis.java	/^	public Double zincrby (String setkey, double score, String stringValue) throws RedisException;$/;"	m	interface:JRedis
zincrby	src/api/src/main/java/org/jredis/JRedis.java	/^	public Double zincrby (String setkey, double score, byte[] member) throws RedisException;$/;"	m	interface:JRedis
zincrby	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<Double> zincrby (String setkey, double score, T object);$/;"	m	interface:JRedisFuture
zincrby	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Double> zincrby (String setkey, double score, Number numberValue);$/;"	m	interface:JRedisFuture
zincrby	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Double> zincrby (String setkey, double score, String stringValue);$/;"	m	interface:JRedisFuture
zincrby	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Double> zincrby (String setkey, double score, byte[] member);$/;"	m	interface:JRedisFuture
zincrby	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> Future<Double> zincrby (String key, double score, T value)$/;"	m	class:JRedisFutureSupport
zincrby	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Double> zincrby (String key, double score, Number value) {$/;"	m	class:JRedisFutureSupport
zincrby	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Double> zincrby (String key, double score, String value) {$/;"	m	class:JRedisFutureSupport
zincrby	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Double> zincrby(String key, double score, byte[] member) $/;"	m	class:JRedisFutureSupport
zincrby	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> Double zincrby (String key, double score, T value) throws RedisException$/;"	m	class:JRedisSupport
zincrby	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public Double zincrby (String key, double score, Number value) throws RedisException {$/;"	m	class:JRedisSupport
zincrby	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public Double zincrby (String key, double score, String value) throws RedisException {$/;"	m	class:JRedisSupport
zincrby	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public Double zincrby(String key, double score, byte[] member) $/;"	m	class:JRedisSupport
zrange	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<byte[]> zrange (String setkey, long from, long to) throws RedisException; $/;"	m	interface:JRedis
zrange	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<byte[]>> zrange (String setkey, long from, long to); $/;"	m	interface:JRedisFuture
zrange	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<byte[]>> zrange(String key, long from, long to) {$/;"	m	class:JRedisFutureSupport
zrange	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<byte[]> zrange(String key, long from, long to) throws RedisException {$/;"	m	class:JRedisSupport
zrangeSubset	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<ZSetEntry> zrangeSubset (String setkey, long from, long to) throws RedisException; $/;"	m	interface:JRedis
zrangeSubset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<ZSetEntry>> zrangeSubset (String setkey, long from, long to); $/;"	m	interface:JRedisFuture
zrangeSubset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<ZSetEntry>> zrangeSubset(String key, long from, long to) {$/;"	m	class:JRedisFutureSupport
zrangeSubset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<ZSetEntry> zrangeSubset(String key, long from, long to) throws RedisException {$/;"	m	class:JRedisSupport
zrangebyscore	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<byte[]> zrangebyscore (String setkey, double minScore, double maxScore) throws RedisException; $/;"	m	interface:JRedis
zrangebyscore	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<byte[]>> zrangebyscore (String setkey, double minScore, double maxScore); $/;"	m	interface:JRedisFuture
zrangebyscore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<byte[]>> zrangebyscore(String key, double minScore, double maxScore) {$/;"	m	class:JRedisFutureSupport
zrangebyscore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<byte[]> zrangebyscore (String key, double minScore, double maxScore) throws RedisException {$/;"	m	class:JRedisSupport
zrank	src/api/src/main/java/org/jredis/JRedis.java	/^		long zrank (String setkey, T object) throws RedisException;$/;"	m	interface:JRedis
zrank	src/api/src/main/java/org/jredis/JRedis.java	/^	public long zrank (String setkey, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
zrank	src/api/src/main/java/org/jredis/JRedis.java	/^	public long zrank (String setkey, String stringValue) throws RedisException;$/;"	m	interface:JRedis
zrank	src/api/src/main/java/org/jredis/JRedis.java	/^	public long zrank (String setkey, byte[] member) throws RedisException;$/;"	m	interface:JRedis
zrank	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<Long> zrank (String setkey, T object);$/;"	m	interface:JRedisFuture
zrank	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> zrank (String setkey, Number numberValue);$/;"	m	interface:JRedisFuture
zrank	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> zrank (String setkey, String stringValue);$/;"	m	interface:JRedisFuture
zrank	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> zrank (String setkey, byte[] member);$/;"	m	interface:JRedisFuture
zrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> Future<Long> zrank (String key, T value)$/;"	m	class:JRedisFutureSupport
zrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> zrank (String key, Number value) {$/;"	m	class:JRedisFutureSupport
zrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> zrank (String key, String value) {$/;"	m	class:JRedisFutureSupport
zrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> zrank(String key, byte[] member) {$/;"	m	class:JRedisFutureSupport
zrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> long zrank (String key, T value) throws RedisException$/;"	m	class:JRedisSupport
zrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long zrank (String key, Number value) throws RedisException {$/;"	m	class:JRedisSupport
zrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long zrank (String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
zrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long zrank(String key, byte[] member) throws RedisException {$/;"	m	class:JRedisSupport
zrem	src/api/src/main/java/org/jredis/JRedis.java	/^		   boolean zrem (String setKey, T object) throws RedisException;$/;"	m	interface:JRedis
zrem	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean zrem (String setKey, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
zrem	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean zrem (String setKey, String stringValue) throws RedisException;$/;"	m	interface:JRedis
zrem	src/api/src/main/java/org/jredis/JRedis.java	/^	public boolean zrem (String setKey, byte[] member) throws RedisException;$/;"	m	interface:JRedis
zrem	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<Boolean> zrem (String setKey, T object);$/;"	m	interface:JRedisFuture
zrem	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> zrem (String setKey, Number numberValue);$/;"	m	interface:JRedisFuture
zrem	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> zrem (String setKey, String stringValue);$/;"	m	interface:JRedisFuture
zrem	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Boolean> zrem (String setKey, byte[] member);$/;"	m	interface:JRedisFuture
zrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> Future<Boolean> zrem (String key, T value)$/;"	m	class:JRedisFutureSupport
zrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> zrem (String key, Number value) {$/;"	m	class:JRedisFutureSupport
zrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> zrem (String key, String value) {$/;"	m	class:JRedisFutureSupport
zrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Boolean> zrem(String key, byte[] member) {$/;"	m	class:JRedisFutureSupport
zrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> boolean zrem (String key, T value) throws RedisException$/;"	m	class:JRedisSupport
zrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean zrem (String key, Number value) throws RedisException {$/;"	m	class:JRedisSupport
zrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean zrem (String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
zrem	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public boolean zrem(String key, byte[] member) throws RedisException {$/;"	m	class:JRedisSupport
zremrangebyrank	src/api/src/main/java/org/jredis/JRedis.java	/^	public long zremrangebyrank (String setkey, long minRank, long maxRank) throws RedisException; $/;"	m	interface:JRedis
zremrangebyrank	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> zremrangebyrank (String setkey, long minRank, long maxRank); $/;"	m	interface:JRedisFuture
zremrangebyrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> zremrangebyrank(String key, long minRank, long maxRank) {$/;"	m	class:JRedisFutureSupport
zremrangebyrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long zremrangebyrank (String key, long minRank, long maxRank) throws RedisException {$/;"	m	class:JRedisSupport
zremrangebyscore	src/api/src/main/java/org/jredis/JRedis.java	/^	public long zremrangebyscore (String setkey, double minScore, double maxScore) throws RedisException; $/;"	m	interface:JRedis
zremrangebyscore	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> zremrangebyscore (String setkey, double minScore, double maxScore); $/;"	m	interface:JRedisFuture
zremrangebyscore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> zremrangebyscore(String key, double minScore, double maxScore) {$/;"	m	class:JRedisFutureSupport
zremrangebyscore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long zremrangebyscore (String key, double minScore, double maxScore) throws RedisException {$/;"	m	class:JRedisSupport
zrevrange	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<byte[]> zrevrange (String setkey, long from, long to) throws RedisException; $/;"	m	interface:JRedis
zrevrange	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<byte[]>> zrevrange (String setkey, long from, long to); $/;"	m	interface:JRedisFuture
zrevrange	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<byte[]>> zrevrange(String key, long from, long to) {$/;"	m	class:JRedisFutureSupport
zrevrange	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<byte[]> zrevrange(String key, long from, long to) throws RedisException {$/;"	m	class:JRedisSupport
zrevrangeSubset	src/api/src/main/java/org/jredis/JRedis.java	/^	public List<ZSetEntry> zrevrangeSubset (String setkey, long from, long to) throws RedisException; $/;"	m	interface:JRedis
zrevrangeSubset	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<List<ZSetEntry>> zrevrangeSubset (String setkey, long from, long to); $/;"	m	interface:JRedisFuture
zrevrangeSubset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<List<ZSetEntry>> zrevrangeSubset(String key, long from, long to) {$/;"	m	class:JRedisFutureSupport
zrevrangeSubset	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public List<ZSetEntry> zrevrangeSubset(String key, long from, long to) throws RedisException {$/;"	m	class:JRedisSupport
zrevrank	src/api/src/main/java/org/jredis/JRedis.java	/^		long zrevrank (String setkey, T object) throws RedisException;$/;"	m	interface:JRedis
zrevrank	src/api/src/main/java/org/jredis/JRedis.java	/^	public long zrevrank (String setkey, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
zrevrank	src/api/src/main/java/org/jredis/JRedis.java	/^	public long zrevrank (String setkey, String stringValue) throws RedisException;$/;"	m	interface:JRedis
zrevrank	src/api/src/main/java/org/jredis/JRedis.java	/^	public long zrevrank (String setkey, byte[] member) throws RedisException;$/;"	m	interface:JRedis
zrevrank	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<Long> zrevrank (String setkey, T object);$/;"	m	interface:JRedisFuture
zrevrank	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> zrevrank (String setkey, Number numberValue);$/;"	m	interface:JRedisFuture
zrevrank	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> zrevrank (String setkey, String stringValue);$/;"	m	interface:JRedisFuture
zrevrank	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Long> zrevrank (String setkey, byte[] member);$/;"	m	interface:JRedisFuture
zrevrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> Future<Long> zrevrank (String key, T value)$/;"	m	class:JRedisFutureSupport
zrevrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> zrevrank (String key, Number value) {$/;"	m	class:JRedisFutureSupport
zrevrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> zrevrank (String key, String value) {$/;"	m	class:JRedisFutureSupport
zrevrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Long> zrevrank(String key, byte[] member) {$/;"	m	class:JRedisFutureSupport
zrevrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> long zrevrank (String key, T value) throws RedisException$/;"	m	class:JRedisSupport
zrevrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long zrevrank (String key, Number value) throws RedisException {$/;"	m	class:JRedisSupport
zrevrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long zrevrank (String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
zrevrank	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public long zrevrank(String key, byte[] member) throws RedisException {$/;"	m	class:JRedisSupport
zscore	src/api/src/main/java/org/jredis/JRedis.java	/^		Double zscore (String setkey, T object) throws RedisException;$/;"	m	interface:JRedis
zscore	src/api/src/main/java/org/jredis/JRedis.java	/^	public Double zscore (String setkey, Number numberValue) throws RedisException;$/;"	m	interface:JRedis
zscore	src/api/src/main/java/org/jredis/JRedis.java	/^	public Double zscore (String setkey, String stringValue) throws RedisException;$/;"	m	interface:JRedis
zscore	src/api/src/main/java/org/jredis/JRedis.java	/^	public Double zscore (String setkey, byte[] member) throws RedisException;$/;"	m	interface:JRedis
zscore	src/api/src/main/java/org/jredis/JRedisFuture.java	/^		Future<Double> zscore (String setkey, T object);$/;"	m	interface:JRedisFuture
zscore	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Double> zscore (String setkey, Number numberValue);$/;"	m	interface:JRedisFuture
zscore	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Double> zscore (String setkey, String stringValue);$/;"	m	interface:JRedisFuture
zscore	src/api/src/main/java/org/jredis/JRedisFuture.java	/^	public Future<Double> zscore (String setkey, byte[] member);$/;"	m	interface:JRedisFuture
zscore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public <T extends Serializable> Future<Double> zscore (String key, T value)$/;"	m	class:JRedisFutureSupport
zscore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Double> zscore (String key, Number value) {$/;"	m	class:JRedisFutureSupport
zscore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Double> zscore (String key, String value) {$/;"	m	class:JRedisFutureSupport
zscore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisFutureSupport.java	/^	public Future<Double> zscore(String key, byte[] member) {$/;"	m	class:JRedisFutureSupport
zscore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public <T extends Serializable> Double zscore (String key, T value) throws RedisException$/;"	m	class:JRedisSupport
zscore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public Double zscore (String key, Number value) throws RedisException {$/;"	m	class:JRedisSupport
zscore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public Double zscore (String key, String value) throws RedisException {$/;"	m	class:JRedisSupport
zscore	src/ri/src/main/java/org/jredis/ri/alphazero/JRedisSupport.java	/^	public Double zscore(String key, byte[] member) throws RedisException {$/;"	m	class:JRedisSupport
